{"version":3,"file":"js/684.08d35450.js","mappings":"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","sources":["webpack://kfront/./src/views/DockerImage.vue","webpack://kfront/src/views/DockerImage.vue","webpack://kfront/./src/views/DockerImage.vue?6fd4","webpack://kfront/./src/views/DockerImage.vue?6fbd"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.proloading),expression:\"proloading\"}],staticClass:\"vmarea\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":10,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"20px\"}},[_vm._v(\" Docker镜像列表 \")])]),_c('el-col',{attrs:{\"span\":4,\"offset\":6}},[_c('el-select',{attrs:{\"placeholder\":\"请选择端IP\",\"loading\":_vm.isloading,\"loading-text\":\"正在拉取数据\",\"clearable\":\"\"},on:{\"visible-change\":_vm.searchend},model:{value:(_vm.endip),callback:function ($$v) {_vm.endip=$$v},expression:\"endip\"}},_vm._l((_vm.end_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(_vm._s(item.label))]),_c('span',{staticStyle:{\"float\":\"right\",\"color\":\"#8492a6\",\"font-size\":\"13px\"}},[_vm._v(_vm._s(item.value))])])}),1)],1),_c('el-col',{attrs:{\"span\":2,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-s-promotion\",\"size\":\"large\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.fenfa_img}},[_vm._v(\"分发镜像\")])],1),_c('el-col',{attrs:{\"span\":2,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-circle-plus-outline\",\"size\":\"large\",\"round\":\"\",\"plain\":\"\",\"disabled\":_vm.$store.state.nodename != 'master1'},on:{\"click\":_vm.openUploadImage}},[_vm._v(\"上传镜像\")])],1)],1),_c('el-table',{ref:\"multipleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.cidata\n        .slice((_vm.curpage - 1) * _vm.pagesize, _vm.curpage * _vm.pagesize)\n        .filter(\n          (data) =>\n            !_vm.psearch ||\n            data.name.toLowerCase().includes(_vm.psearch.toLowerCase())\n        ),\"empty-text\":\"暂无Docker镜像\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"55\"}}),_c('el-table-column',{attrs:{\"width\":\"80\",\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"width\":\"500\",\"sortable\":\"\",\"label\":\"镜像名称\",\"prop\":\"name\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"label\":\"分发目标地址\",\"prop\":\"des_ip\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.des_ip != '')?_c('el-tag',{attrs:{\"type\":\"default\",\"size\":\"normal\"}},[_vm._v(_vm._s(scope.row.des_ip))]):_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"normal\"}},[_vm._v(\"未进行分发\")])]}}])}),_c('el-table-column',{attrs:{\"width\":\"600\",\"label\":\"分发进度\",\"prop\":\"percentage\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.percentage != -1)?_c('el-progress',{attrs:{\"percentage\":scope.row.percentage,\"status\":scope.row.percentage === 100 ? 'success' : ''}}):_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"normal\"}},[_vm._v(\"未进行分发\")])]}}])}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deleteimage(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.psearch),callback:function ($$v) {_vm.psearch=$$v},expression:\"psearch\"}})],1)],2)],1),(_vm.cidata.length != 0)?_c('div',{staticStyle:{\"margin-top\":\"30px\"}},[_c('el-pagination',{attrs:{\"current-page\":_vm.curpage,\"page-sizes\":[10, 20, 30, 40, 50],\"page-size\":_vm.pagesize,\"layout\":\"sizes, total, prev, pager, next, jumper\",\"total\":_vm.totalci,\"background\":\"\"},on:{\"update:currentPage\":function($event){_vm.curpage=$event},\"update:current-page\":function($event){_vm.curpage=$event},\"update:pageSize\":function($event){_vm.pagesize=$event},\"update:page-size\":function($event){_vm.pagesize=$event}}})],1):_vm._e(),_c('el-dialog',{attrs:{\"title\":\"上传Docker镜像\",\"visible\":_vm.uploadimagevisible},on:{\"update:visible\":function($event){_vm.uploadimagevisible=$event}}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-upload',{ref:\"upload\",staticClass:\"upload-demo\",staticStyle:{\"width\":\"100%\"},attrs:{\"drag\":\"\",\"action\":_vm.baseurl + '/api/ssh/uploadImg',\"multiple\":false,\"accept\":\".tar\",\"auto-upload\":true,\"limit\":1,\"name\":\"imgfile\",\"before-upload\":_vm.handleBeforeUpload,\"on-success\":_vm.sucupload,\"on-error\":_vm.errupload}},[_c('i',{staticClass:\"el-icon-upload\"}),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"*只能上传.tar文件\")])])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"vmarea\" v-loading=\"proloading\">\r\n    <!-- 头部标题操作 -->\r\n    <el-row :gutter=\"0\">\r\n      <el-col :span=\"10\" :offset=\"0\"\r\n        ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 20px\">\r\n          Docker镜像列表\r\n        </p></el-col\r\n      >\r\n      <el-col :span=\"4\" :offset=\"6\">\r\n        <el-select\r\n          v-model=\"endip\"\r\n          placeholder=\"请选择端IP\"\r\n          :loading=\"isloading\"\r\n          loading-text=\"正在拉取数据\"\r\n          @visible-change=\"searchend\"\r\n          clearable\r\n        >\r\n          <el-option\r\n            v-for=\"item in end_options\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          >\r\n            <span style=\"float: left\">{{ item.label }}</span>\r\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">{{\r\n              item.value\r\n            }}</span>\r\n          </el-option>\r\n        </el-select>\r\n      </el-col>\r\n      <el-col :span=\"2\" :offset=\"0\">\r\n        <el-button\r\n          @click=\"fenfa_img\"\r\n          icon=\"el-icon-s-promotion\"\r\n          size=\"large\"\r\n          round\r\n          plain\r\n          >分发镜像</el-button\r\n        >\r\n      </el-col>\r\n\r\n      <el-col :span=\"2\" :offset=\"0\">\r\n        <el-button\r\n          @click=\"openUploadImage\"\r\n          icon=\"el-icon-circle-plus-outline\"\r\n          size=\"large\"\r\n          round\r\n          plain\r\n          :disabled=\"$store.state.nodename != 'master1'\"\r\n          >上传镜像</el-button\r\n        >\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 表格区域 -->\r\n    <el-table\r\n      :data=\"\r\n        cidata\r\n          .slice((curpage - 1) * pagesize, curpage * pagesize)\r\n          .filter(\r\n            (data) =>\r\n              !psearch ||\r\n              data.name.toLowerCase().includes(psearch.toLowerCase())\r\n          )\r\n      \"\r\n      style=\"width: 100%\"\r\n      empty-text=\"暂无Docker镜像\"\r\n      :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      ref=\"multipleTable\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\r\n      <el-table-column width=\"80\" type=\"index\" label=\"序号\"> </el-table-column>\r\n      <el-table-column width=\"500\" sortable label=\"镜像名称\" prop=\"name\">\r\n      </el-table-column>\r\n      <el-table-column width=\"200\" label=\"分发目标地址\" prop=\"des_ip\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.des_ip != ''\" type=\"default\" size=\"normal\">{{\r\n            scope.row.des_ip\r\n          }}</el-tag>\r\n          <el-tag v-else type=\"info\" size=\"normal\">未进行分发</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column width=\"600\" label=\"分发进度\" prop=\"percentage\">\r\n        <template slot-scope=\"scope\">\r\n          <el-progress\r\n            v-if=\"scope.row.percentage != -1\"\r\n            :percentage=\"scope.row.percentage\"\r\n            :status=\"scope.row.percentage === 100 ? 'success' : ''\"\r\n          ></el-progress>\r\n          <el-tag v-else type=\"info\" size=\"normal\">未进行分发</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"right\">\r\n        <template slot=\"header\">\r\n          <el-input v-model=\"psearch\" size=\"mini\" placeholder=\"输入名称搜索\" />\r\n        </template>\r\n        <template slot-scope=\"scope\">\r\n          <div style=\"text-align: center\">\r\n            <el-button\r\n              plain\r\n              type=\"danger\"\r\n              @click=\"deleteimage(scope.$index, scope.row)\"\r\n              >删除</el-button\r\n            >\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 分页栏 -->\r\n    <div v-if=\"cidata.length != 0\" style=\"margin-top: 30px\">\r\n      <el-pagination\r\n        :current-page.sync=\"curpage\"\r\n        :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n        :page-size.sync=\"pagesize\"\r\n        layout=\"sizes, total, prev, pager, next, jumper\"\r\n        :total=\"totalci\"\r\n        background\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n    <!-- 上传镜像对话框 -->\r\n    <el-dialog title=\"上传Docker镜像\" :visible.sync=\"uploadimagevisible\">\r\n      <div style=\"text-align: center\">\r\n        <el-upload\r\n          class=\"upload-demo\"\r\n          drag\r\n          ref=\"upload\"\r\n          :action=\"baseurl + '/api/ssh/uploadImg'\"\r\n          :multiple=\"false\"\r\n          accept=\".tar\"\r\n          :auto-upload=\"true\"\r\n          :limit=\"1\"\r\n          name=\"imgfile\"\r\n          :before-upload=\"handleBeforeUpload\"\r\n          :on-success=\"sucupload\"\r\n          :on-error=\"errupload\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <i class=\"el-icon-upload\"></i>\r\n          <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n          <div class=\"el-upload__tip\" slot=\"tip\">*只能上传.tar文件</div>\r\n        </el-upload>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n    \r\n    <script>\r\nexport default {\r\n  name: \"DockerImage\",\r\n  mounted() {\r\n    this.getVMList();\r\n  },\r\n  data() {\r\n    return {\r\n      baseurl: \"http://39.98.124.97:8081\",\r\n      cidata: [],\r\n      psearch: \"\",\r\n      curpage: 1,\r\n      totalci: 0,\r\n      pagesize: 10,\r\n      uploadimagevisible: false,\r\n      reqData: {\r\n        virtualMachineIp: \"\",\r\n        userName: \"\",\r\n        userPassword: \"\",\r\n        imageId: \"\",\r\n      },\r\n      formData: {\r\n        virtualMachineIp: \"39.98.124.97\",\r\n        userName: \"root\",\r\n        userPassword: \"Upc123456@\",\r\n      },\r\n      fenfa_list: [],\r\n      end_options: [],\r\n      endip: \"\",\r\n      isloading: false,\r\n      proloading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 分发镜像\r\n    fenfa_img() {\r\n      if (this.fenfa_list.length == 0) {\r\n        this.$message({\r\n          message: \"请选择一个要分发镜像\",\r\n          type: \"error\",\r\n        });\r\n      } else if (this.endip === \"\") {\r\n        this.$message({\r\n          message: \"请选择要分发的端节点\",\r\n          type: \"error\",\r\n        });\r\n      } else {\r\n        let tmp_docker = this.fenfa_list[0];\r\n        this.proloading = true;\r\n        this.$axios\r\n          .get(\r\n            this.baseurl +\r\n              \"/api/ssh/dispenseImgByIP?sourceip=\" +\r\n              this.$store.state.nodeip +\r\n              \"&fileName=\" +\r\n              tmp_docker.name +\r\n              \"&endip=\" +\r\n              this.endip\r\n          )\r\n          .then((res) => {\r\n            this.proloading = false;\r\n            tmp_docker.des_ip = this.endip;\r\n            tmp_docker.percentage = 0;\r\n            this.$message({\r\n              message: \"已启动分发任务\",\r\n              type: \"success\",\r\n            });\r\n            // 设置定时器获取进度\r\n            this.interval = window.setInterval(() => {\r\n              // setTimeout是自带清除定时器\r\n              setTimeout(this.getProcess(tmp_docker), 500);\r\n            }, 1000);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"errors\", err);\r\n            this.$message({\r\n              message: \"启动分发失败，请检查网络\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    // 获取分发进度\r\n    getProcess(tmp_docker) {\r\n      this.$axios\r\n        .get(\r\n          this.baseurl +\r\n            \"/api/ssh/getProgress?sourceip=\" +\r\n            this.$store.state.nodeip +\r\n            \"&fileName=\" +\r\n            tmp_docker.name +\r\n            \"&endip=\" +\r\n            this.endip\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus === 0) {\r\n            let per = parseInt(parseFloat(res.data.output) * 100);\r\n            if (per >= 100) {\r\n              tmp_docker.percentage = 100;\r\n              window.clearInterval(this.interval);\r\n              this.$message({\r\n                message: tmp_docker.name + \"分发完成\",\r\n                type: \"success\",\r\n              });\r\n            } else {\r\n              tmp_docker.percentage = per;\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          window.clearInterval(this.interval);\r\n          this.$message({\r\n            message: \"获取进度失败，请检查网络\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 搜索端节点\r\n    searchend() {\r\n      this.end_options = [];\r\n      this.loading = true;\r\n      this.$axios\r\n        .get(\"http://39.98.124.97:8080\" + \"/node/getNodeList1\")\r\n        .then((res) => {\r\n          let nodeinfo = res.data.content;\r\n          for (let i = 0; i < nodeinfo.length; i++) {\r\n            // if (nodeinfo[i].nodeType === \"边\") {\r\n            //   this.end_options.push({\r\n            //     label:\r\n            //       \"端节点\" +\r\n            //       nodeinfo[i].nodeName[nodeinfo[i].nodeName.length - 1],\r\n            //     value: nodeinfo[i].nodeIp,\r\n            //   });\r\n            // }\r\n            this.end_options.push({\r\n              label:\r\n                nodeinfo[i].nodeType +\r\n                \"节点\" +\r\n                nodeinfo[i].nodeName[nodeinfo[i].nodeName.length - 1],\r\n              value: nodeinfo[i].nodeIp,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n      this.isloading = false;\r\n    },\r\n    // 多选\r\n    handleSelectionChange(val) {\r\n      if (val.length > 1) {\r\n        this.$message({\r\n          message: \"目前只支持单镜像分发\",\r\n          type: \"error\",\r\n        });\r\n        this.$refs.multipleTable.toggleRowSelection(val[val.length - 1]);\r\n      } else {\r\n        this.fenfa_list = val;\r\n      }\r\n    },\r\n    // 删除镜像\r\n    deleteimage(idx, row) {\r\n      //   this.reqData.virtualMachineIp = this.formData.virtualMachineIp;\r\n      //   this.reqData.userName = this.formData.userName;\r\n      //   this.reqData.userPassword = this.formData.userPassword;\r\n      //   this.reqData.imageId = row.imageid;\r\n      //   console.log(\"row:\" + row);\r\n      this.$axios\r\n        .get(\r\n          this.baseurl +\r\n            \"/api/ssh//deleteImgByIP?ip=\" +\r\n            this.$store.state.nodeip +\r\n            \"&fileName=\" +\r\n            row.name\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.exitStatus === 0) {\r\n            this.$notify.success({\r\n              title: \"删除成功\",\r\n              message: \"docker镜像删除成功\",\r\n              position: \"bottom-right\",\r\n              duration: 6000,\r\n            });\r\n            this.getVMList();\r\n          } else {\r\n            this.$notify.error({\r\n              title: \"删除失败\",\r\n              message: res.data.errorOutput,\r\n              position: \"bottom-right\",\r\n              duration: 6000,\r\n            });\r\n            this.getVMList();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$notify.error({\r\n            title: \"删除失败\",\r\n            message: \"请检查网络设置\",\r\n            position: \"bottom-right\",\r\n            duration: 6000,\r\n          });\r\n        });\r\n    },\r\n    // 上传失败\r\n    errupload(err, file, fileList) {\r\n      this.$notify.error({\r\n        title: \"上传失败\",\r\n        message: JSON.parse(err.message).message,\r\n        position: \"bottom-right\",\r\n        duration: 6000,\r\n      });\r\n      this.uploadimagevisible = false;\r\n      this.getVMList();\r\n    },\r\n    // 成功上传文件\r\n    sucupload(response, file, fileList) {\r\n      console.log(response);\r\n      if (response.exitStatus === 0) {\r\n        this.$notify.success({\r\n          title: \"上传成功\",\r\n          message: \"镜像上传成功\",\r\n          position: \"bottom-right\",\r\n          duration: 6000,\r\n        });\r\n        this.uploadimagevisible = false;\r\n        this.getVMList();\r\n      } else {\r\n        this.$notify.error({\r\n          title: \"上传失败\",\r\n          message: response,\r\n          position: \"bottom-right\",\r\n          duration: 6000,\r\n        });\r\n        this.uploadimagevisible = false;\r\n        this.getVMList();\r\n      }\r\n    },\r\n    // 控制文件格式\r\n    handleBeforeUpload(file) {\r\n      console.log(file);\r\n      var iso = file.name.substring(file.name.lastIndexOf(\".\") + 1);\r\n      const suffix = iso === \"tar\";\r\n      if (!suffix) {\r\n        this.$message.error(\"只能上传TAR文件！\");\r\n        return false;\r\n      }\r\n      return suffix;\r\n    },\r\n    // 解析数据\r\n    data_resolver(sdata) {\r\n      let res = [];\r\n      let rows = sdata.split(\"\\n\");\r\n      let i = 1;\r\n      for (; i < rows.length - 1; i++) {\r\n        let cols = rows[i].split(\" \");\r\n        let j = 0;\r\n        cols = cols.filter(function (item) {\r\n          return item !== \"\";\r\n        });\r\n        res.push({\r\n          imageName: cols[0],\r\n          imageTag: cols[1],\r\n          imageId: cols[2],\r\n          imageSize: cols[3],\r\n        });\r\n      }\r\n      return res;\r\n    },\r\n    // 获取容器镜像列表数据\r\n    getVMList() {\r\n      this.$axios\r\n        .get(\r\n          this.baseurl + \"/api/ssh/imgListByIP?ip=\" + this.$store.state.nodeip\r\n        )\r\n        .then((res) => {\r\n          let res_data = res.data;\r\n          let docker_img_list = res_data.output.split(\"\\n\");\r\n          docker_img_list.pop();\r\n          // 构建表格数据\r\n          this.cidata = [];\r\n          for (let i = 0; i < docker_img_list.length; i++) {\r\n            this.cidata.push({\r\n              name: docker_img_list[i],\r\n              des_ip: \"\",\r\n              percentage: -1,\r\n            });\r\n          }\r\n          this.totalci = this.cidata.length;\r\n          // let s_data = this.data_resolver(res.data.result);\r\n          // this.cidata = s_data;\r\n          // this.totalci = s_data.length;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 打开上传镜像dialog\r\n    openUploadImage() {\r\n      this.uploadimagevisible = true;\r\n    },\r\n  },\r\n  computed: {\r\n    tmp_nodename_w() {\r\n      return this.$store.state.nodename;\r\n    },\r\n  },\r\n  watch: {\r\n    tmp_nodename_w(nv, ov) {\r\n      this.getVMList();\r\n    },\r\n  },\r\n};\r\n</script>\r\n    \r\n    <style>\r\n.el-upload {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n.el-upload .el-upload-dragger {\r\n  width: 100%;\r\n  height: 400px;\r\n  padding-top: 120px;\r\n}\r\n\r\n.vmarea {\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n}\r\n\r\n/*带背景的分页按钮背景色begin*/\r\n.el-pagination.is-background .el-pager li:not(.disabled).active {\r\n  background-color: #08c0b9;\r\n  color: #fff;\r\n}\r\n.el-pagination.is-background .el-pager li.active {\r\n  color: #fff;\r\n  cursor: default;\r\n}\r\n.el-pagination.is-background .el-pager li:hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination.is-background .el-pager li:not(.disabled):hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination.is-background .el-pager li:not(.disabled).active:hover {\r\n  background-color: #08c0b9;\r\n  color: #fff;\r\n}\r\n/*带背景的分页按钮背景色end*/\r\n\r\n/*不带背景的分页按钮背景色begin*/\r\n.el-pager li.active {\r\n  color: #08c0b9;\r\n  cursor: default;\r\n}\r\n.el-pagination .el-pager li:hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination .el-pager li:not(.disabled):hover {\r\n  color: #08c0b9;\r\n}\r\n/*不带背景的分页按钮背景色end*/\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DockerImage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DockerImage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DockerImage.vue?vue&type=template&id=4f0fa084\"\nimport script from \"./DockerImage.vue?vue&type=script&lang=js\"\nexport * from \"./DockerImage.vue?vue&type=script&lang=js\"\nimport style0 from \"./DockerImage.vue?vue&type=style&index=0&id=4f0fa084&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","proloading","expression","staticClass","attrs","staticStyle","_v","isloading","on","searchend","model","endip","callback","$$v","_l","end_options","item","key","label","_s","fenfa_img","$store","state","nodename","openUploadImage","ref","cidata","slice","curpage","pagesize","filter","data","psearch","toLowerCase","includes","background","color","handleSelectionChange","scopedSlots","_u","fn","scope","row","des_ip","percentage","$event","deleteimage","$index","slot","length","totalci","_e","uploadimagevisible","baseurl","handleBeforeUpload","sucupload","errupload","staticRenderFns","mounted","getVMList","reqData","virtualMachineIp","userName","userPassword","imageId","formData","fenfa_list","methods","$message","message","type","tmp_docker","$axios","get","nodeip","then","res","interval","window","setInterval","setTimeout","getProcess","catch","err","console","log","exitStatus","per","parseInt","parseFloat","output","clearInterval","loading","nodeinfo","content","i","push","nodeType","nodeName","nodeIp","val","$refs","multipleTable","toggleRowSelection","idx","$notify","success","title","position","duration","error","errorOutput","file","fileList","JSON","parse","response","iso","substring","lastIndexOf","suffix","data_resolver","sdata","rows","split","cols","imageName","imageTag","imageSize","res_data","docker_img_list","pop","computed","tmp_nodename_w","watch","nv","ov","component"],"sourceRoot":""}