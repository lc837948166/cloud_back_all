{"version":3,"file":"js/574.06a22435.js","mappings":"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","sources":["webpack://kfront/./src/views/ResPoolView.vue","webpack://kfront/src/views/ResPoolView.vue","webpack://kfront/./src/views/ResPoolView.vue?bbdb","webpack://kfront/./src/views/ResPoolView.vue?c924"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.resloading),expression:\"resloading\"}],attrs:{\"element-loading-text\":\"资源汇聚中。。。\"}},[_c('div',{staticStyle:{\"font-size\":\"30px\",\"color\":\"#3d3d3d\",\"font-weight\":\"600\",\"padding-left\":\"20px\",\"padding-bottom\":\"20px\",\"padding-top\":\"30px\"}},[_vm._v(\" 资源汇聚- 资源汇聚时间： \"),(_vm.endTime != 0)?_c('span',[_vm._v(\" \"+_vm._s((_vm.endTime - _vm.beginTime) / 1000)+\" 秒\")]):_c('span',[_vm._v(\"资源汇聚中。。。\")])]),_c('div',{staticClass:\"vmarea\"},[_c('div',{staticStyle:{\"font-size\":\"30px\",\"font-weight\":\"600\",\"margin-bottom\":\"20px\"}},[_vm._v(\" 节点信息 \")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.nodeinfo,\"empty-text\":\"暂无节点信息\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"width\":\"100\",\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"nodeName\",\"label\":\"节点名称\",\"width\":\"300\"}}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"nodeIp\",\"label\":\"节点IP\",\"width\":\"400\"}}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"nodeStatus\",\"label\":\"节点状态\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"nodeLocation\",\"label\":\"节点位置\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"nodeType\",\"label\":\"节点类型\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.nodeType === '云')?_c('el-tag',{attrs:{\"type\":\"success\",\"effect\":\"dark\"}},[_vm._v(\"云节点\")]):(scope.row.nodeType === '边')?_c('el-tag',{attrs:{\"type\":\"primary\",\"effect\":\"dark\"}},[_vm._v(\"边节点\")]):(scope.row.nodeType === '端')?_c('el-tag',{attrs:{\"type\":\"warning\",\"effect\":\"dark\"}},[_vm._v(\"端节点\")]):_c('el-tag',{attrs:{\"type\":\"info\",\"effect\":\"dark\"}},[_vm._v(_vm._s(scope.row.nodeType)+\"节点\")])]}}])}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"prop\":\"nodeConnectivity\",\"label\":\"是否连接\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.nodeConnectivity === 1)?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"已连接\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"未连接\")])]}}])})],1)],1),_c('div',{staticClass:\"vmarea\"},[_c('el-dialog',{attrs:{\"title\":\"创建虚拟机\",\"visible\":_vm.buildvmvisible},on:{\"update:visible\":function($event){_vm.buildvmvisible=$event}}},[_c('el-form',{ref:\"formData\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\",\"model\":_vm.formData,\"status-icon\":true,\"rules\":_vm.vm_rules}},[_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"虚拟机名称\",\"prop\":\"name\"}},[_c('el-input',{staticStyle:{\"width\":\"60%\"},attrs:{\"placeholder\":\"请输入虚拟机名称\"},on:{\"blur\":function($event){return _vm.validName()}},model:{value:(_vm.formData.name),callback:function ($$v) {_vm.$set(_vm.formData, \"name\", $$v)},expression:\"formData.name\"}})],1)],1),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"内存\",\"prop\":\"memory\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择内存大小(GiB)\"},model:{value:(_vm.formData.memory),callback:function ($$v) {_vm.$set(_vm.formData, \"memory\", $$v)},expression:\"formData.memory\"}},_vm._l((_vm.memory_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"CPU个数\",\"prop\":\"cpuNum\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择CPU个数\"},model:{value:(_vm.formData.cpuNum),callback:function ($$v) {_vm.$set(_vm.formData, \"cpuNum\", $$v)},expression:\"formData.cpuNum\"}},_vm._l((_vm.cpunum_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"系统类型\",\"prop\":\"OStype\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择系统类型\"},model:{value:(_vm.formData.OStype),callback:function ($$v) {_vm.$set(_vm.formData, \"OStype\", $$v)},expression:\"formData.OStype\"}},_vm._l((_vm.ostype_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"虚拟机镜像,#仅支持qcow2格式\",\"prop\":\"ImgName\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择虚拟机镜像\"},on:{\"visible-change\":_vm.nsremote},model:{value:(_vm.formData.ImgName),callback:function ($$v) {_vm.$set(_vm.formData, \"ImgName\", $$v)},expression:\"formData.ImgName\"}},_vm._l((_vm.images),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"节点\",\"prop\":\"node\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择创建虚拟机所在宿主机节点\"},model:{value:(_vm.formData.node),callback:function ($$v) {_vm.$set(_vm.formData, \"node\", $$v)},expression:\"formData.node\"}},_vm._l((_vm.node_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"网络类型\",\"prop\":\"nettype\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择创建虚拟机的网络类型\"},model:{value:(_vm.formData.nettype),callback:function ($$v) {_vm.$set(_vm.formData, \"nettype\", $$v)},expression:\"formData.nettype\"}},_vm._l((_vm.nettype_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-form-item',{attrs:{\"size\":\"large\"}},[_c('div',{staticClass:\"vmc-sbm-area\"},[_c('el-button',{attrs:{\"round\":\"\"},on:{\"click\":function($event){return _vm.resetForm('formData')}}},[_vm._v(\"清空输入\")]),_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.vmc_sumbit('formData')}}},[_vm._v(\"立即创建\")])],1)])],1)],1),_c('el-dialog',{attrs:{\"title\":\"执行命令\",\"visible\":_vm.commandvisible},on:{\"update:visible\":function($event){_vm.commandvisible=$event}}},[_c('el-descriptions',{attrs:{\"title\":\"虚拟机信息\"}},[_c('el-descriptions-item',{attrs:{\"label\":\"名称\"}},[_vm._v(_vm._s(this.command_tmp_data.name))]),_c('el-descriptions-item',{attrs:{\"label\":\"状态\"}},[(this.command_tmp_data.state === 'VIR_DOMAIN_PAUSED')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"挂起\")]):(this.command_tmp_data.state === 'VIR_DOMAIN_RUNNING')?_c('el-tag',[_vm._v(\"运行\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"关机\")])],1),_c('el-descriptions-item',{attrs:{\"label\":\"cpu个数\"}},[_vm._v(_vm._s(this.command_tmp_data.cpuNum))]),_c('el-descriptions-item',{attrs:{\"label\":\"分配内存(GiB)\"}},[_vm._v(_vm._s(this.command_tmp_data.maxMem))]),_c('el-descriptions-item',{attrs:{\"label\":\"IP地址\"}},[_vm._v(_vm._s(this.command_tmp_data.ipaddr))])],1),_c('el-form',{ref:\"commandForm\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\",\"model\":_vm.commandForm,\"status-icon\":true,\"rules\":_vm.command_rules}},[_c('el-form-item',{attrs:{\"label\":\"命令\",\"prop\":\"command\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入要执行的命令\",\"type\":\"textarea\",\"rows\":4,\"clearable\":\"\"},model:{value:(_vm.commandForm.command),callback:function ($$v) {_vm.$set(_vm.commandForm, \"command\", $$v)},expression:\"commandForm.command\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"result\"}},[_c('template',{slot:\"label\"},[_vm._v(\" 执行结果 \")]),_c('el-input',{attrs:{\"placeholder\":\"命令执行的结果将会显示在这里\",\"type\":\"textarea\",\"rows\":4,\"clearable\":\"\"},model:{value:(_vm.commandForm.result),callback:function ($$v) {_vm.$set(_vm.commandForm, \"result\", $$v)},expression:\"commandForm.result\"}})],2),_c('el-form-item',{attrs:{\"prop\":\"res_state\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[(this.commandForm.res_state === 'yes')?_c('span',{staticStyle:{\"color\":\"#67c23a\",\"font-size\":\"15px\"}},[_c('i',{staticClass:\"el-icon-success\"}),_vm._v(\"执行成功\")]):_vm._e(),(this.commandForm.res_state === 'no')?_c('span',{staticStyle:{\"color\":\"#f56c6c\",\"font-size\":\"15px\"}},[_c('i',{staticClass:\"el-icon-error\"}),_vm._v(\"执行出错\")]):_vm._e()])]),_c('el-form-item',{attrs:{\"size\":\"large\"}},[_c('div',{staticClass:\"vmc-sbm-area\",staticStyle:{\"text-align\":\"right\",\"margin-top\":\"50px\"}},[_c('el-button',{attrs:{\"round\":\"\"},on:{\"click\":function($event){return _vm.resetForm('commandForm')}}},[_vm._v(\"清空输入\")]),_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.start_command('commandForm')}}},[_vm._v(\"立即执行\")])],1)])],1)],1),_c('el-drawer',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.fullloading),expression:\"fullloading\"}],attrs:{\"visible\":_vm.imagedrawer,\"direction\":\"ttb\",\"size\":\"90%\"},on:{\"update:visible\":function($event){_vm.imagedrawer=$event},\"open\":_vm.imgdopen}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":5,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.vmimg_tmp_data.name)+\"-容器镜像列表 \")])]),_c('el-col',{attrs:{\"span\":3,\"offset\":0}},[_c('el-select',{staticStyle:{\"width\":\"80%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择要上传的镜像\"},on:{\"visible-change\":_vm.getimg},model:{value:(_vm.iamgename),callback:function ($$v) {_vm.iamgename=$$v},expression:\"iamgename\"}},_vm._l((_vm.img_list),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-col',{attrs:{\"span\":2,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-circle-plus-outline\",\"size\":\"medium\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.uploadImgToVm}},[_vm._v(\"上传镜像到虚拟机\")])],1)],1)],1),_c('div',{staticStyle:{\"margin-left\":\"20px\",\"margin-right\":\"20px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.cidata.filter(\n              (data) =>\n                !_vm.pcisearch ||\n                data.repository\n                  .toLowerCase()\n                  .includes(_vm.pcisearch.toLowerCase())\n            ),\"height\":\"700\",\"empty-text\":\"暂无容器镜像\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"width\":\"80\",\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"width\":\"500\",\"sortable\":\"\",\"label\":\"仓库/镜像名\",\"prop\":\"repository\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"标签\",\"prop\":\"tag\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"镜像ID\",\"prop\":\"imageid\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"创建时间\",\"prop\":\"created\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"体积\",\"prop\":\"size\"}}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.startimage(scope.$index, scope.row)}}},[_vm._v(\"启动镜像\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deleteimage(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.pcisearch),callback:function ($$v) {_vm.pcisearch=$$v},expression:\"pcisearch\"}})],1)],2)],1)],1)]),_c('el-drawer',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.fullloading),expression:\"fullloading\"}],attrs:{\"visible\":_vm.poddrawer,\"direction\":\"ttb\",\"size\":\"90%\"},on:{\"update:visible\":function($event){_vm.poddrawer=$event},\"open\":_vm.podopen}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":5,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.vmpod_tmp_data.name)+\"-容器列表 \")])])],1)],1),_c('div',{staticStyle:{\"margin-left\":\"20px\",\"margin-right\":\"20px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.poddata.filter(\n              (data) =>\n                !_vm.ppodsearch ||\n                data.image.toLowerCase().includes(_vm.ppodsearch.toLowerCase())\n            ),\"height\":\"700\",\"empty-text\":\"暂无容器\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"width\":\"80\",\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"容器ID\",\"prop\":\"conid\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"镜像\",\"prop\":\"image\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"命令\",\"prop\":\"command\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"创建时间\",\"prop\":\"created\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"状态\",\"prop\":\"status\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"名字\",\"prop\":\"names\"}}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button-group',[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.startpod(scope.$index, scope.row)}}},[_vm._v(\"启动\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.stoppod(scope.$index, scope.row)}}},[_vm._v(\"停止\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deletepod(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1)],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.ppodsearch),callback:function ($$v) {_vm.ppodsearch=$$v},expression:\"ppodsearch\"}})],1)],2)],1)],1)]),_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":10,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"20px\"}},[_vm._v(\" 虚拟机列表 \")])]),_c('el-col',{attrs:{\"span\":3,\"offset\":13}},[_c('el-button',{attrs:{\"icon\":\"el-icon-refresh\",\"size\":\"medium\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.refreshIP}},[_vm._v(\"更新虚拟机ip地址 \")])],1)],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.vmdata\n          .slice((_vm.curpage - 1) * _vm.pagesize, _vm.curpage * _vm.pagesize)\n          .filter(\n            (data) =>\n              !_vm.psearch ||\n              data.name.toLowerCase().includes(_vm.psearch.toLowerCase())\n          ),\"empty-text\":\"暂无虚拟机\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"width\":\"50\"}}),_c('el-table-column',{attrs:{\"width\":\"150\",\"sortable\":\"\",\"label\":\"名称\",\"prop\":\"name\"}}),_c('el-table-column',{attrs:{\"width\":\"100\",\"sortable\":\"\",\"label\":\"状态\",\"prop\":\"state\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state === 'VIR_DOMAIN_PAUSED')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"挂起\")]):(scope.row.state === 'VIR_DOMAIN_RUNNING')?_c('el-tag',[_vm._v(\"运行\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"关机\")])]}}])}),_c('el-table-column',{attrs:{\"width\":\"100\",\"sortable\":\"\",\"label\":\"cpu个数\",\"prop\":\"cpuNum\"}}),_c('el-table-column',{attrs:{\"width\":\"140\",\"sortable\":\"\",\"label\":\"分配内存(GiB)\",\"prop\":\"maxMem\"}}),_c('el-table-column',{attrs:{\"width\":\"180\",\"sortable\":\"\",\"label\":\"IP地址\",\"prop\":\"ipaddr\"}}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button-group',[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.vmstart(scope.row)}}},[_vm._v(\"启动\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.vmsuspend(scope.row)}}},[_vm._v(\"挂起\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.vmresume(scope.row)}}},[_vm._v(\"还原\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.vmreboot(scope.row)}}},[_vm._v(\"重启\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"info\"},on:{\"click\":function($event){return _vm.vmshutdown(scope.row)}}},[_vm._v(\"关闭\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.vmshutdownMust(scope.row)}}},[_vm._v(\"强制关闭\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.vmdelete(scope.row)}}},[_vm._v(\"删除\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.openpod(scope.row)}}},[_vm._v(\"容器管理\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.openimage(scope.row)}}},[_vm._v(\"镜像管理\")])],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{staticStyle:{\"width\":\"30%\"},attrs:{\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.psearch),callback:function ($$v) {_vm.psearch=$$v},expression:\"psearch\"}})],1)],2)],1),(_vm.vmdata.length != 0)?_c('div',{staticStyle:{\"margin-top\":\"30px\"}},[_c('el-pagination',{attrs:{\"current-page\":_vm.curpage,\"page-sizes\":[10, 20, 30, 40, 50],\"page-size\":_vm.pagesize,\"layout\":\"sizes, total, prev, pager, next, jumper\",\"total\":_vm.totalvm,\"background\":\"\"},on:{\"update:currentPage\":function($event){_vm.curpage=$event},\"update:current-page\":function($event){_vm.curpage=$event},\"update:pageSize\":function($event){_vm.pagesize=$event},\"update:page-size\":function($event){_vm.pagesize=$event}}})],1):_vm._e()],1),_c('div',{staticClass:\"vmarea\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":10,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"20px\"}},[_vm._v(\" Pod列表 \")])]),_c('el-col',{attrs:{\"span\":2,\"offset\":12}},[_c('el-button',{attrs:{\"icon\":\"el-icon-circle-plus-outline\",\"size\":\"medium\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.openCreatePod}},[_vm._v(\"添加容器\")])],1)],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.poddata\n          .slice((_vm.pod_curpage - 1) * _vm.pod_pagesize, _vm.pod_curpage * _vm.pod_pagesize)\n          .filter(\n            (data) =>\n              !_vm.pod_psearch ||\n              data.metadata.name.toLowerCase().includes(_vm.psearch.toLowerCase())\n          ),\"empty-text\":\"暂无Pod\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('el-form',{staticClass:\"demo-table-expand\",attrs:{\"label-position\":\"left\",\"inline\":\"\"}},[_c('el-form-item',{attrs:{\"label\":\"Pod名称\"}},[_c('span',[_vm._v(_vm._s(props.row.metadata.name))])]),_c('el-form-item',{attrs:{\"label\":\"命名空间\"}},[_c('span',[_vm._v(_vm._s(props.row.metadata.namespace))])]),_c('el-form-item',{attrs:{\"label\":\"节点\"}},[_c('span',[_vm._v(_vm._s(props.row.spec.nodeName))])]),_c('el-form-item',{attrs:{\"label\":\"状态\"}},[_c('span',[(props.row.status.phase === 'Pending')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"挂起\")]):(props.row.status.phase === 'Running')?_c('el-tag',[_vm._v(\"运行\")]):_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"成功\")])],1)]),_c('el-form-item',{attrs:{\"label\":\"是否可用\"}},[_c('span',[(props.row.metadata.annotations.status === 'Yes')?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"可用\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"不可用\")])],1)]),_c('el-form-item',{attrs:{\"label\":\"创建时间\"}},[_c('div',[_c('span',[_vm._v(_vm._s(_vm.formatDate( props.row.metadata.creationTimestamp, \"YYYY-MM-DD\" )))]),_c('br'),_c('span',[_vm._v(_vm._s(_vm.formatDate(props.row.metadata.creationTimestamp, \"HH:mm:ss\")))])])]),_c('el-form-item',{attrs:{\"label\":\"容器列表\"}}),_c('el-form-item',{attrs:{\"label\":\"路径\"}},[_c('div',[_vm._v(\" \"+_vm._s(props.row.info.ppname)+\":\"+_vm._s(props.row.info.podpath)+\" \")])]),_c('el-table',{staticStyle:{\"width\":\"90%\"},attrs:{\"size\":\"small\",\"data\":props.row.spec.containers}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"容器名称\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"prop\":\"image\",\"label\":\"容器镜像\",\"width\":\"400\"}}),_c('el-table-column',{attrs:{\"prop\":\"ports\",\"label\":\"端口号\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return _vm._l((scope.row.ports),function(port){return _c('el-tag',{key:port,attrs:{\"type\":\"info\"}},[_vm._v(_vm._s(port.name + \"/\" + port.protocol + \"/\" + port.containerPort))])})}}],null,true)})],1)],1)]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"width\":\"280\",\"sortable\":\"\",\"label\":\"Pod名称\",\"prop\":\"metadata.name\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"镜像\",\"prop\":\"spec.containers[0].image\"}}),_c('el-table-column',{attrs:{\"width\":\"150\",\"sortable\":\"\",\"label\":\"命名空间\",\"prop\":\"metadata.namespace\"}}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"label\":\"节点\",\"prop\":\"spec.nodeName\"}}),_c('el-table-column',{attrs:{\"width\":\"100\",\"sortable\":\"\",\"label\":\"状态\",\"prop\":\"status.phase\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.status.phase === 'Pending')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"挂起\")]):(scope.row.status.phase === 'Running')?_c('el-tag',[_vm._v(\"运行\")]):_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"成功\")])]}}])}),_c('el-table-column',{attrs:{\"width\":\"100\",\"sortable\":\"\",\"label\":\"是否可用\",\"prop\":\"metadata.annotations.status\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.metadata.annotations.status === 'Yes')?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"可用\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"不可用\")])]}}])}),_c('el-table-column',{attrs:{\"sortable\":\"\",\"label\":\"创建时间\",\"prop\":\"metadata.creationTimestamp\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('span',[_vm._v(_vm._s(_vm.formatDate(scope.row.metadata.creationTimestamp, \"YYYY-MM-DD\")))]),_c('br'),_c('span',[_vm._v(_vm._s(_vm.formatDate(scope.row.metadata.creationTimestamp, \"HH:mm:ss\")))])])]}}])}),_c('el-table-column',{attrs:{\"width\":\"210\",\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-popover',{ref:'popover' + scope.$index,attrs:{\"placement\":\"left\",\"width\":\"300\",\"trigger\":\"click\"}},[_c('el-form',{ref:'migrate_form' + scope.$index,attrs:{\"label-position\":\"top\",\"label-width\":\"80px\",\"model\":_vm.migrate_form,\"status-icon\":true,\"rules\":_vm.migrate_rules}},[_c('el-form-item',{attrs:{\"label\":\"请选择要迁移的节点\",\"prop\":\"nodename\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择要迁移的节点\"},on:{\"visible-change\":_vm.noderemote},model:{value:(_vm.migrate_form.nodename),callback:function ($$v) {_vm.$set(_vm.migrate_form, \"nodename\", $$v)},expression:\"migrate_form.nodename\"}},_vm._l((_vm.nodename_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"size\":\"large\"}},[_c('div',{staticStyle:{\"text-align\":\"right\"}},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.migrate_sumbit(\n                        scope.$index,\n                        scope.row,\n                        'migrate_form' + scope.$index\n                      )}}},[_vm._v(\"确定迁移\")])],1)])],1)],1),_c('el-button-group',[_c('el-button',{directives:[{name:\"popover\",rawName:\"v-popover\",value:('popover' + scope.$index),expression:\"'popover' + scope.$index\"}],attrs:{\"plain\":\"\",\"type\":\"info\",\"size\":\"mini\"}},[_vm._v(\"迁移\")]),(scope.row.metadata.annotations.status === 'No')?_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.startPod(scope.$index, scope.row)}}},[_vm._v(\"启动\")]):_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.stopPod(scope.$index, scope.row)}}},[_vm._v(\"停止\")]),_c('el-button',{attrs:{\"plain\":\"\",\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deletePod(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.psearch),callback:function ($$v) {_vm.psearch=$$v},expression:\"psearch\"}})],1)],2)],1),(_vm.poddata.length != 0)?_c('div',{staticStyle:{\"margin-top\":\"30px\"}},[_c('el-pagination',{attrs:{\"current-page\":_vm.pod_curpage,\"page-sizes\":[10, 20, 30, 40, 50],\"page-size\":_vm.pod_pagesize,\"layout\":\"sizes, total, prev, pager, next, jumper\",\"total\":_vm.totalpod,\"background\":\"\"},on:{\"update:currentPage\":function($event){_vm.pod_curpage=$event},\"update:current-page\":function($event){_vm.pod_curpage=$event},\"update:pageSize\":function($event){_vm.pod_pagesize=$event},\"update:page-size\":function($event){_vm.pod_pagesize=$event}}})],1):_vm._e(),_c('el-dialog',{attrs:{\"title\":\"添加Pod\",\"visible\":_vm.createpodvisible},on:{\"update:visible\":function($event){_vm.createpodvisible=$event}}},[_c('el-form',{ref:\"cp_form\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\",\"model\":_vm.cp_form,\"status-icon\":true,\"rules\":_vm.cp_rules}},[_c('el-form-item',{attrs:{\"label\":\"Pod名称\",\"prop\":\"podName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入Pod名称\"},model:{value:(_vm.cp_form.podName),callback:function ($$v) {_vm.$set(_vm.cp_form, \"podName\", $$v)},expression:\"cp_form.podName\"}})],1),_c('el-form-item',{attrs:{\"label\":\"命名空间\",\"prop\":\"namespace\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择命名空间\"},on:{\"visible-change\":_vm.nsremote},model:{value:(_vm.cp_form.namespace),callback:function ($$v) {_vm.$set(_vm.cp_form, \"namespace\", $$v)},expression:\"cp_form.namespace\"}},_vm._l((_vm.namespace_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"选择节点\",\"prop\":\"nodename\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择节点\"},on:{\"visible-change\":_vm.noderemote},model:{value:(_vm.cp_form.nodename),callback:function ($$v) {_vm.$set(_vm.cp_form, \"nodename\", $$v)},expression:\"cp_form.nodename\"}},_vm._l((_vm.nodename_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"选择持久卷声明\",\"prop\":\"pvcName\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择pvc\"},on:{\"visible-change\":_vm.pvcremote},model:{value:(_vm.cp_form.pvcName),callback:function ($$v) {_vm.$set(_vm.cp_form, \"pvcName\", $$v)},expression:\"cp_form.pvcName\"}},_vm._l((_vm.pvcName_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"所属容器\",\"prop\":\"containerInfoList\"}},[_vm._l((_vm.cp_form.containerInfoList),function(container){return _c('el-popover',{key:container.containerName,staticStyle:{\"margin-right\":\"10px\"},attrs:{\"placement\":\"top-start\",\"title\":container.containerName,\"width\":\"200\",\"trigger\":\"hover\"}},[_c('el-descriptions',{attrs:{\"column\":1,\"size\":\"mini\"}},[_c('el-descriptions-item',{attrs:{\"label\":\"镜像\"}},[_vm._v(_vm._s(container.containerImage))]),_c('el-descriptions-item',{attrs:{\"label\":\"端口号\"}},[_vm._v(_vm._s(container.port))])],1),_c('el-tag',{attrs:{\"slot\":\"reference\",\"closable\":\"\",\"disable-transitions\":false,\"type\":\"info\",\"effect\":\"plain\"},on:{\"close\":function($event){return _vm.handleClose(container)}},slot:\"reference\"},[_vm._v(\" \"+_vm._s(container.containerName)+\" \")])],1)}),(_vm.addvisible)?_c('el-card',{staticClass:\"con-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('span',[_vm._v(\"添加第 \"+_vm._s(_vm.cp_form.containerInfoList.length + 1)+\" 个新容器\")])]),_c('el-col',{attrs:{\"span\":3,\"offset\":3}},[_c('el-button',{attrs:{\"icon\":\"el-icon-check\",\"size\":\"mini\",\"circle\":\"\",\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.addcontainer('tmp_con_info')}}})],1),_c('el-col',{attrs:{\"span\":3,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-refresh-right\",\"size\":\"mini\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.resetForm('tmp_con_info')}}})],1),_c('el-col',{attrs:{\"span\":3,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-close\",\"size\":\"mini\",\"circle\":\"\",\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":_vm.closeadd}})],1)],1)],1),_c('el-form',{ref:\"tmp_con_info\",attrs:{\"label-position\":\"top\",\"model\":_vm.tmp_con_info,\"status-icon\":true,\"rules\":_vm.tmp_con_rules}},[_c('el-form-item',{attrs:{\"label\":\"容器名称\",\"prop\":\"containerName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入容器名称\",\"clearable\":\"\"},model:{value:(_vm.tmp_con_info.containerName),callback:function ($$v) {_vm.$set(_vm.tmp_con_info, \"containerName\", $$v)},expression:\"tmp_con_info.containerName\"}})],1),_c('el-form-item',{attrs:{\"label\":\"容器镜像\",\"prop\":\"containerImage\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择容器镜像\"},on:{\"visible-change\":_vm.imageremote},model:{value:(_vm.tmp_con_info.containerImage),callback:function ($$v) {_vm.$set(_vm.tmp_con_info, \"containerImage\", $$v)},expression:\"tmp_con_info.containerImage\"}},_vm._l((_vm.containerImage_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"端口号\",\"prop\":\"port\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入端口号\"},model:{value:(_vm.tmp_con_info.port),callback:function ($$v) {_vm.$set(_vm.tmp_con_info, \"port\", $$v)},expression:\"tmp_con_info.port\"}})],1)],1)],1):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":_vm.showInputCon}},[_vm._v(\"添加容器\")])],2),_c('el-form-item',{attrs:{\"size\":\"large\"}},[_c('div',{staticClass:\"cp-sbm-area\"},[_c('el-button',{attrs:{\"round\":\"\"},on:{\"click\":function($event){return _vm.resetForm('cp_form')}}},[_vm._v(\"清空输入\")]),_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.cp_sumbit('cp_form')}}},[_vm._v(\"立即创建\")])],1)])],1)],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div v-loading=\"resloading\" element-loading-text=\"资源汇聚中。。。\">\r\n    <div style=\"font-size: 30px; color: #3d3d3d; font-weight: 600; padding-left: 20px; padding-bottom: 20px; padding-top: 30px\">\r\n        资源汇聚-\r\n        资源汇聚时间：\r\n      <span v-if=\"endTime != 0\"> {{ (endTime - beginTime) / 1000 }} 秒</span>\r\n      <span v-else>资源汇聚中。。。</span>\r\n    </div>\r\n    <!-- 节点表 -->\r\n    <div class=\"vmarea\">\r\n      <div style=\"font-size: 30px; font-weight: 600; margin-bottom: 20px\">\r\n        节点信息\r\n      </div>\r\n      <el-table\r\n        :data=\"nodeinfo\"\r\n        style=\"width: 100%\"\r\n        empty-text=\"暂无节点信息\"\r\n        :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n      >\r\n        <el-table-column width=\"100\" type=\"index\" label=\"序号\">\r\n        </el-table-column>\r\n        <el-table-column sortable prop=\"nodeName\" label=\"节点名称\" width=\"300\">\r\n        </el-table-column>\r\n        <el-table-column sortable prop=\"nodeIp\" label=\"节点IP\" width=\"400\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          sortable\r\n          prop=\"nodeStatus\"\r\n          label=\"节点状态\"\r\n          width=\"200\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column\r\n          sortable\r\n          prop=\"nodeLocation\"\r\n          label=\"节点位置\"\r\n          width=\"200\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column sortable prop=\"nodeType\" label=\"节点类型\" width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n              v-if=\"scope.row.nodeType === '云'\"\r\n              type=\"success\"\r\n              effect=\"dark\"\r\n              >云节点</el-tag\r\n            >\r\n            <el-tag\r\n              v-else-if=\"scope.row.nodeType === '边'\"\r\n              type=\"primary\"\r\n              effect=\"dark\"\r\n              >边节点</el-tag\r\n            >\r\n            <el-tag\r\n              v-else-if=\"scope.row.nodeType === '端'\"\r\n              type=\"warning\"\r\n              effect=\"dark\"\r\n              >端节点</el-tag\r\n            >\r\n            <el-tag v-else type=\"info\" effect=\"dark\"\r\n              >{{ scope.row.nodeType }}节点</el-tag\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column sortable prop=\"nodeConnectivity\" label=\"是否连接\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag v-if=\"scope.row.nodeConnectivity === 1\" type=\"success\"\r\n              >已连接</el-tag\r\n            >\r\n            <el-tag v-else type=\"danger\">未连接</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- <el-table-column label=\"内容\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button-group>\r\n              <el-button\r\n                size=\"mini\"\r\n                plain\r\n                type=\"default\"\r\n                @click=\"topod(scope.row)\"\r\n                >容器管理</el-button\r\n              >\r\n              <el-button\r\n                size=\"mini\"\r\n                plain\r\n                type=\"default\"\r\n                @click=\"tovm(scope.row)\"\r\n                >虚拟机管理</el-button\r\n              >\r\n            </el-button-group>\r\n          </template>\r\n        </el-table-column> -->\r\n      </el-table>\r\n    </div>\r\n    <!-- 虚拟机表 -->\r\n    <div class=\"vmarea\">\r\n      <!-- 虚拟机相关操作 -->\r\n      <el-dialog title=\"创建虚拟机\" :visible.sync=\"buildvmvisible\">\r\n        <el-form\r\n          label-position=\"top\"\r\n          label-width=\"80px\"\r\n          :model=\"formData\"\r\n          :status-icon=\"true\"\r\n          :rules=\"vm_rules\"\r\n          ref=\"formData\"\r\n        >\r\n          <el-row :gutter=\"30\">\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"虚拟机名称\" prop=\"name\">\r\n                <el-input\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.name\"\r\n                  placeholder=\"请输入虚拟机名称\"\r\n                  @blur=\"validName()\"\r\n                ></el-input>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"内存\" prop=\"memory\">\r\n                <el-select\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.memory\"\r\n                  clearable\r\n                  placeholder=\"请选择内存大小(GiB)\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in memory_options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-row :gutter=\"30\">\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"CPU个数\" prop=\"cpuNum\">\r\n                <el-select\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.cpuNum\"\r\n                  clearable\r\n                  placeholder=\"请选择CPU个数\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in cpunum_options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"系统类型\" prop=\"OStype\">\r\n                <el-select\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.OStype\"\r\n                  clearable\r\n                  placeholder=\"请选择系统类型\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in ostype_options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-row :gutter=\"30\">\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"虚拟机镜像,#仅支持qcow2格式\" prop=\"ImgName\">\r\n                <el-select\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.ImgName\"\r\n                  clearable\r\n                  @visible-change=\"nsremote\"\r\n                  placeholder=\"请选择虚拟机镜像\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in images\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"节点\" prop=\"node\">\r\n                <el-select\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.node\"\r\n                  clearable\r\n                  placeholder=\"请选择创建虚拟机所在宿主机节点\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in node_options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-row :gutter=\"30\">\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-form-item label=\"网络类型\" prop=\"nettype\">\r\n                <el-select\r\n                  style=\"width: 60%\"\r\n                  v-model=\"formData.nettype\"\r\n                  clearable\r\n                  placeholder=\"请选择创建虚拟机的网络类型\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in nettype_options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-form-item size=\"large\">\r\n            <div class=\"vmc-sbm-area\">\r\n              <el-button round @click=\"resetForm('formData')\"\r\n                >清空输入</el-button\r\n              >\r\n              <el-button round type=\"primary\" @click=\"vmc_sumbit('formData')\"\r\n                >立即创建</el-button\r\n              >\r\n            </div>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n      <el-dialog title=\"执行命令\" :visible.sync=\"commandvisible\">\r\n        <el-descriptions title=\"虚拟机信息\">\r\n          <el-descriptions-item label=\"名称\">{{\r\n            this.command_tmp_data.name\r\n          }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"状态\">\r\n            <el-tag\r\n              v-if=\"this.command_tmp_data.state === 'VIR_DOMAIN_PAUSED'\"\r\n              type=\"warning\"\r\n              >挂起</el-tag\r\n            >\r\n            <el-tag\r\n              v-else-if=\"this.command_tmp_data.state === 'VIR_DOMAIN_RUNNING'\"\r\n              >运行</el-tag\r\n            >\r\n            <el-tag v-else type=\"danger\">关机</el-tag>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"cpu个数\">{{\r\n            this.command_tmp_data.cpuNum\r\n          }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"分配内存(GiB)\">{{\r\n            this.command_tmp_data.maxMem\r\n          }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"IP地址\">{{\r\n            this.command_tmp_data.ipaddr\r\n          }}</el-descriptions-item>\r\n        </el-descriptions>\r\n        <el-form\r\n          label-position=\"top\"\r\n          label-width=\"80px\"\r\n          :model=\"commandForm\"\r\n          :status-icon=\"true\"\r\n          :rules=\"command_rules\"\r\n          ref=\"commandForm\"\r\n        >\r\n          <el-form-item label=\"命令\" prop=\"command\">\r\n            <el-input\r\n              v-model=\"commandForm.command\"\r\n              placeholder=\"请输入要执行的命令\"\r\n              type=\"textarea\"\r\n              :rows=\"4\"\r\n              clearable\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"result\">\r\n            <template slot=\"label\"> 执行结果 </template>\r\n            <el-input\r\n              v-model=\"commandForm.result\"\r\n              placeholder=\"命令执行的结果将会显示在这里\"\r\n              type=\"textarea\"\r\n              :rows=\"4\"\r\n              clearable\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"res_state\">\r\n            <div style=\"float: right\">\r\n              <span\r\n                style=\"color: #67c23a; font-size: 15px\"\r\n                v-if=\"this.commandForm.res_state === 'yes'\"\r\n                ><i class=\"el-icon-success\"></i>执行成功</span\r\n              >\r\n              <span\r\n                style=\"color: #f56c6c; font-size: 15px\"\r\n                v-if=\"this.commandForm.res_state === 'no'\"\r\n                ><i class=\"el-icon-error\"></i>执行出错</span\r\n              >\r\n            </div>\r\n          </el-form-item>\r\n          <!-- <el-form-item label=\"端服务器\" prop=\"edgeserver\">\r\n            <el-select\r\n              style=\"width: 60%\"\r\n              v-model=\"commandForm.edgeserver\"\r\n              clearable\r\n              placeholder=\"请选择端服务器\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in edgeserver_options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"容器\" prop=\"pod\">\r\n            <el-select\r\n              style=\"width: 60%\"\r\n              v-model=\"commandForm.pod\"\r\n              clearable\r\n              placeholder=\"请选择执行容器\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in pod_options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item> -->\r\n\r\n          <el-form-item size=\"large\">\r\n            <div\r\n              style=\"text-align: right; margin-top: 50px\"\r\n              class=\"vmc-sbm-area\"\r\n            >\r\n              <el-button round @click=\"resetForm('commandForm')\"\r\n                >清空输入</el-button\r\n              >\r\n              <el-button\r\n                round\r\n                type=\"primary\"\r\n                @click=\"start_command('commandForm')\"\r\n                >立即执行</el-button\r\n              >\r\n            </div>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n      <!-- 虚拟机镜像 -->\r\n      <el-drawer\r\n        :visible.sync=\"imagedrawer\"\r\n        direction=\"ttb\"\r\n        size=\"90%\"\r\n        @open=\"imgdopen\"\r\n        v-loading=\"fullloading\"\r\n      >\r\n        <!-- 头部标题操作 -->\r\n        <div slot=\"title\">\r\n          <el-row :gutter=\"0\">\r\n            <el-col :span=\"5\" :offset=\"0\"\r\n              ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 0px\">\r\n                {{ vmimg_tmp_data.name }}-容器镜像列表\r\n              </p></el-col\r\n            >\r\n            <el-col :span=\"3\" :offset=\"0\">\r\n              <el-select\r\n                style=\"width: 80%\"\r\n                v-model=\"iamgename\"\r\n                clearable\r\n                @visible-change=\"getimg\"\r\n                placeholder=\"请选择要上传的镜像\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in img_list\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-col>\r\n\r\n            <el-col :span=\"2\" :offset=\"0\">\r\n              <el-button\r\n                @click=\"uploadImgToVm\"\r\n                icon=\"el-icon-circle-plus-outline\"\r\n                size=\"medium\"\r\n                round\r\n                plain\r\n                >上传镜像到虚拟机</el-button\r\n              >\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n        <div style=\"margin-left: 20px; margin-right: 20px\">\r\n          <!-- 表格区域 -->\r\n          <el-table\r\n            :data=\"\r\n              cidata.filter(\r\n                (data) =>\r\n                  !pcisearch ||\r\n                  data.repository\r\n                    .toLowerCase()\r\n                    .includes(pcisearch.toLowerCase())\r\n              )\r\n            \"\r\n            style=\"width: 100%\"\r\n            height=\"700\"\r\n            empty-text=\"暂无容器镜像\"\r\n            :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n          >\r\n            <!-- <el-table-column type=\"selection\" width=\"55\"> </el-table-column> -->\r\n            <el-table-column width=\"80\" type=\"index\" label=\"序号\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              width=\"500\"\r\n              sortable\r\n              label=\"仓库/镜像名\"\r\n              prop=\"repository\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column width=\"300\" sortable label=\"标签\" prop=\"tag\">\r\n            </el-table-column>\r\n            <el-table-column width=\"200\" sortable label=\"镜像ID\" prop=\"imageid\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              width=\"200\"\r\n              sortable\r\n              label=\"创建时间\"\r\n              prop=\"created\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column width=\"200\" sortable label=\"体积\" prop=\"size\">\r\n            </el-table-column>\r\n            <el-table-column align=\"right\">\r\n              <template slot=\"header\">\r\n                <el-input\r\n                  v-model=\"pcisearch\"\r\n                  size=\"mini\"\r\n                  placeholder=\"输入名称搜索\"\r\n                />\r\n              </template>\r\n              <template slot-scope=\"scope\">\r\n                <div style=\"text-align: center\">\r\n                  <el-button\r\n                    plain\r\n                    type=\"success\"\r\n                    @click=\"startimage(scope.$index, scope.row)\"\r\n                    >启动镜像</el-button\r\n                  >\r\n                  <el-button\r\n                    plain\r\n                    type=\"danger\"\r\n                    @click=\"deleteimage(scope.$index, scope.row)\"\r\n                    >删除</el-button\r\n                  >\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </el-drawer>\r\n      <!-- 虚拟机容器 -->\r\n      <el-drawer\r\n        :visible.sync=\"poddrawer\"\r\n        direction=\"ttb\"\r\n        size=\"90%\"\r\n        @open=\"podopen\"\r\n        v-loading=\"fullloading\"\r\n      >\r\n        <!-- 头部标题操作 -->\r\n        <div slot=\"title\">\r\n          <el-row :gutter=\"0\">\r\n            <el-col :span=\"5\" :offset=\"0\"\r\n              ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 0px\">\r\n                {{ vmpod_tmp_data.name }}-容器列表\r\n              </p></el-col\r\n            >\r\n          </el-row>\r\n        </div>\r\n        <div style=\"margin-left: 20px; margin-right: 20px\">\r\n          <!-- 表格区域 -->\r\n          <el-table\r\n            :data=\"\r\n              poddata.filter(\r\n                (data) =>\r\n                  !ppodsearch ||\r\n                  data.image.toLowerCase().includes(ppodsearch.toLowerCase())\r\n              )\r\n            \"\r\n            style=\"width: 100%\"\r\n            height=\"700\"\r\n            empty-text=\"暂无容器\"\r\n            :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n          >\r\n            <!-- <el-table-column type=\"selection\" width=\"55\"> </el-table-column> -->\r\n            <el-table-column width=\"80\" type=\"index\" label=\"序号\">\r\n            </el-table-column>\r\n            <el-table-column width=\"200\" sortable label=\"容器ID\" prop=\"conid\">\r\n            </el-table-column>\r\n            <el-table-column width=\"300\" sortable label=\"镜像\" prop=\"image\">\r\n            </el-table-column>\r\n            <el-table-column width=\"200\" sortable label=\"命令\" prop=\"command\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              width=\"300\"\r\n              sortable\r\n              label=\"创建时间\"\r\n              prop=\"created\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column width=\"300\" sortable label=\"状态\" prop=\"status\">\r\n            </el-table-column>\r\n            <!-- <el-table-column width=\"200\" sortable label=\"端口\" prop=\"ports\">\r\n            </el-table-column> -->\r\n            <el-table-column width=\"200\" sortable label=\"名字\" prop=\"names\">\r\n            </el-table-column>\r\n            <el-table-column align=\"right\">\r\n              <template slot=\"header\">\r\n                <el-input\r\n                  v-model=\"ppodsearch\"\r\n                  size=\"mini\"\r\n                  placeholder=\"输入名称搜索\"\r\n                />\r\n              </template>\r\n              <template slot-scope=\"scope\">\r\n                <div style=\"text-align: center\">\r\n                  <el-button-group>\r\n                    <el-button\r\n                      plain\r\n                      type=\"success\"\r\n                      @click=\"startpod(scope.$index, scope.row)\"\r\n                      >启动</el-button\r\n                    >\r\n                    <el-button\r\n                      plain\r\n                      type=\"warning\"\r\n                      @click=\"stoppod(scope.$index, scope.row)\"\r\n                      >停止</el-button\r\n                    >\r\n                    <el-button\r\n                      plain\r\n                      type=\"danger\"\r\n                      @click=\"deletepod(scope.$index, scope.row)\"\r\n                      >删除</el-button\r\n                    >\r\n                  </el-button-group>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </el-drawer>\r\n      <!-- 头部标题操作 -->\r\n      <el-row :gutter=\"0\">\r\n        <el-col :span=\"10\" :offset=\"0\"\r\n          ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 20px\">\r\n            虚拟机列表\r\n          </p></el-col\r\n        >\r\n        <el-col :span=\"3\" :offset=\"13\">\r\n          <el-button\r\n            @click=\"refreshIP\"\r\n            icon=\"el-icon-refresh\"\r\n            size=\"medium\"\r\n            round\r\n            plain\r\n            >更新虚拟机ip地址\r\n          </el-button>\r\n        </el-col>\r\n        <!-- <el-col :span=\"2\" :offset=\"0\">\r\n          <el-button\r\n            @click=\"openCreateVM\"\r\n            icon=\"el-icon-circle-plus-outline\"\r\n            size=\"medium\"\r\n            round\r\n            plain\r\n            >新增虚拟机\r\n          </el-button>\r\n        </el-col> -->\r\n      </el-row>\r\n      <!-- 表格区域 -->\r\n      <el-table\r\n        :data=\"\r\n          vmdata\r\n            .slice((curpage - 1) * pagesize, curpage * pagesize)\r\n            .filter(\r\n              (data) =>\r\n                !psearch ||\r\n                data.name.toLowerCase().includes(psearch.toLowerCase())\r\n            )\r\n        \"\r\n        style=\"width: 100%\"\r\n        empty-text=\"暂无虚拟机\"\r\n        :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n      >\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"50\">\r\n        </el-table-column>\r\n        <el-table-column width=\"150\" sortable label=\"名称\" prop=\"name\">\r\n        </el-table-column>\r\n        <el-table-column width=\"100\" sortable label=\"状态\" prop=\"state\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n              v-if=\"scope.row.state === 'VIR_DOMAIN_PAUSED'\"\r\n              type=\"warning\"\r\n              >挂起</el-tag\r\n            >\r\n            <el-tag v-else-if=\"scope.row.state === 'VIR_DOMAIN_RUNNING'\"\r\n              >运行</el-tag\r\n            >\r\n            <el-tag v-else type=\"danger\">关机</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column width=\"100\" sortable label=\"cpu个数\" prop=\"cpuNum\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"140\"\r\n          sortable\r\n          label=\"分配内存(GiB)\"\r\n          prop=\"maxMem\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column width=\"180\" sortable label=\"IP地址\" prop=\"ipaddr\">\r\n        </el-table-column>\r\n        <el-table-column align=\"right\">\r\n          <template slot=\"header\">\r\n            <el-input\r\n              style=\"width: 30%\"\r\n              v-model=\"psearch\"\r\n              placeholder=\"输入名称搜索\"\r\n            />\r\n          </template>\r\n          <template slot-scope=\"scope\">\r\n            <el-button-group>\r\n              <el-button plain type=\"success\" @click=\"vmstart(scope.row)\"\r\n                >启动</el-button\r\n              >\r\n              <el-button plain type=\"warning\" @click=\"vmsuspend(scope.row)\"\r\n                >挂起</el-button\r\n              >\r\n              <el-button plain type=\"success\" @click=\"vmresume(scope.row)\"\r\n                >还原</el-button\r\n              >\r\n              <el-button plain type=\"primary\" @click=\"vmreboot(scope.row)\"\r\n                >重启</el-button\r\n              >\r\n              <el-button plain type=\"info\" @click=\"vmshutdown(scope.row)\"\r\n                >关闭</el-button\r\n              >\r\n              <el-button plain type=\"danger\" @click=\"vmshutdownMust(scope.row)\"\r\n                >强制关闭</el-button\r\n              >\r\n              <el-button plain type=\"danger\" @click=\"vmdelete(scope.row)\"\r\n                >删除</el-button\r\n              >\r\n              <!-- <el-button plain type=\"warning\" @click=\"opencommand(scope.row)\"\r\n                >执行命令</el-button\r\n              > -->\r\n              <el-button plain type=\"primary\" @click=\"openpod(scope.row)\"\r\n                >容器管理</el-button\r\n              >\r\n              <el-button plain type=\"primary\" @click=\"openimage(scope.row)\"\r\n                >镜像管理</el-button\r\n              >\r\n            </el-button-group>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页栏 -->\r\n      <div v-if=\"vmdata.length != 0\" style=\"margin-top: 30px\">\r\n        <el-pagination\r\n          :current-page.sync=\"curpage\"\r\n          :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n          :page-size.sync=\"pagesize\"\r\n          layout=\"sizes, total, prev, pager, next, jumper\"\r\n          :total=\"totalvm\"\r\n          background\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n    <!-- 容器表 -->\r\n    <div class=\"vmarea\">\r\n      <!-- 头部标题操作 -->\r\n      <el-row :gutter=\"0\">\r\n        <el-col :span=\"10\" :offset=\"0\"\r\n          ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 20px\">\r\n            Pod列表\r\n          </p></el-col\r\n        >\r\n        <el-col :span=\"2\" :offset=\"12\">\r\n          <el-button\r\n            @click=\"openCreatePod\"\r\n            icon=\"el-icon-circle-plus-outline\"\r\n            size=\"medium\"\r\n            round\r\n            plain\r\n            >添加容器</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格区域 -->\r\n      <el-table\r\n        :data=\"\r\n          poddata\r\n            .slice((pod_curpage - 1) * pod_pagesize, pod_curpage * pod_pagesize)\r\n            .filter(\r\n              (data) =>\r\n                !pod_psearch ||\r\n                data.metadata.name.toLowerCase().includes(psearch.toLowerCase())\r\n            )\r\n        \"\r\n        style=\"width: 100%\"\r\n        empty-text=\"暂无Pod\"\r\n        :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n      >\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n              <el-form-item label=\"Pod名称\">\r\n                <span>{{ props.row.metadata.name }}</span>\r\n              </el-form-item>\r\n              <el-form-item label=\"命名空间\">\r\n                <span>{{ props.row.metadata.namespace }}</span>\r\n              </el-form-item>\r\n              <el-form-item label=\"节点\">\r\n                <span>{{ props.row.spec.nodeName }}</span>\r\n              </el-form-item>\r\n              <el-form-item label=\"状态\">\r\n                <span\r\n                  ><el-tag\r\n                    v-if=\"props.row.status.phase === 'Pending'\"\r\n                    type=\"warning\"\r\n                    >挂起</el-tag\r\n                  >\r\n                  <el-tag v-else-if=\"props.row.status.phase === 'Running'\"\r\n                    >运行</el-tag\r\n                  >\r\n                  <el-tag v-else type=\"success\">成功</el-tag></span\r\n                >\r\n              </el-form-item>\r\n              <el-form-item label=\"是否可用\">\r\n                <span\r\n                  ><el-tag\r\n                    v-if=\"props.row.metadata.annotations.status === 'Yes'\"\r\n                    type=\"success\"\r\n                    >可用</el-tag\r\n                  >\r\n                  <el-tag v-else type=\"danger\">不可用</el-tag></span\r\n                >\r\n              </el-form-item>\r\n              <el-form-item label=\"创建时间\">\r\n                <!--              <span>{{ props.row.metadata.creationTimestamp }}</span>-->\r\n                <div>\r\n                  <span>{{\r\n                    formatDate(\r\n                      props.row.metadata.creationTimestamp,\r\n                      \"YYYY-MM-DD\"\r\n                    )\r\n                  }}</span\r\n                  ><br />\r\n                  <span>{{\r\n                    formatDate(props.row.metadata.creationTimestamp, \"HH:mm:ss\")\r\n                  }}</span>\r\n                </div>\r\n              </el-form-item>\r\n              <el-form-item label=\"容器列表\"> </el-form-item>\r\n              <el-form-item label=\"路径\">\r\n                <div>\r\n                  {{ props.row.info.ppname }}:{{ props.row.info.podpath }}\r\n                </div>\r\n              </el-form-item>\r\n              <el-table\r\n                size=\"small\"\r\n                :data=\"props.row.spec.containers\"\r\n                style=\"width: 90%\"\r\n              >\r\n                <el-table-column type=\"index\"> </el-table-column>\r\n                <el-table-column prop=\"name\" label=\"容器名称\" width=\"200\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"image\" label=\"容器镜像\" width=\"400\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"ports\" label=\"端口号\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-tag\r\n                      :key=\"port\"\r\n                      v-for=\"port in scope.row.ports\"\r\n                      type=\"info\"\r\n                      >{{\r\n                        port.name +\r\n                        \"/\" +\r\n                        port.protocol +\r\n                        \"/\" +\r\n                        port.containerPort\r\n                      }}</el-tag\r\n                    >\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-form>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column type=\"index\" label=\"序号\"> </el-table-column>\r\n        <el-table-column\r\n          width=\"280\"\r\n          sortable\r\n          label=\"Pod名称\"\r\n          prop=\"metadata.name\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"300\"\r\n          sortable\r\n          label=\"镜像\"\r\n          prop=\"spec.containers[0].image\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"150\"\r\n          sortable\r\n          label=\"命名空间\"\r\n          prop=\"metadata.namespace\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column sortable label=\"节点\" prop=\"spec.nodeName\">\r\n        </el-table-column>\r\n        <el-table-column width=\"100\" sortable label=\"状态\" prop=\"status.phase\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag v-if=\"scope.row.status.phase === 'Pending'\" type=\"warning\"\r\n              >挂起</el-tag\r\n            >\r\n            <el-tag v-else-if=\"scope.row.status.phase === 'Running'\"\r\n              >运行</el-tag\r\n            >\r\n            <el-tag v-else type=\"success\">成功</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"100\"\r\n          sortable\r\n          label=\"是否可用\"\r\n          prop=\"metadata.annotations.status\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n              v-if=\"scope.row.metadata.annotations.status === 'Yes'\"\r\n              type=\"success\"\r\n              >可用</el-tag\r\n            >\r\n            <el-tag v-else type=\"danger\">不可用</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          sortable\r\n          label=\"创建时间\"\r\n          prop=\"metadata.creationTimestamp\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span>{{\r\n                formatDate(scope.row.metadata.creationTimestamp, \"YYYY-MM-DD\")\r\n              }}</span\r\n              ><br />\r\n              <span>{{\r\n                formatDate(scope.row.metadata.creationTimestamp, \"HH:mm:ss\")\r\n              }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column width=\"210\" align=\"right\">\r\n          <template slot=\"header\">\r\n            <el-input\r\n              v-model=\"psearch\"\r\n              size=\"mini\"\r\n              placeholder=\"输入名称搜索\"\r\n            />\r\n          </template>\r\n          <template slot-scope=\"scope\">\r\n            <!-- 迁移界面 -->\r\n            <el-popover\r\n              :ref=\"'popover' + scope.$index\"\r\n              placement=\"left\"\r\n              width=\"300\"\r\n              trigger=\"click\"\r\n            >\r\n              <el-form\r\n                label-position=\"top\"\r\n                label-width=\"80px\"\r\n                :model=\"migrate_form\"\r\n                :status-icon=\"true\"\r\n                :rules=\"migrate_rules\"\r\n                :ref=\"'migrate_form' + scope.$index\"\r\n              >\r\n                <el-form-item label=\"请选择要迁移的节点\" prop=\"nodename\">\r\n                  <el-select\r\n                    style=\"width: 100%\"\r\n                    v-model=\"migrate_form.nodename\"\r\n                    clearable\r\n                    @visible-change=\"noderemote\"\r\n                    placeholder=\"请选择要迁移的节点\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"item in nodename_options\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                    >\r\n                    </el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n                <el-form-item size=\"large\">\r\n                  <div style=\"text-align: right\">\r\n                    <el-button\r\n                      size=\"mini\"\r\n                      type=\"primary\"\r\n                      @click=\"\r\n                        migrate_sumbit(\r\n                          scope.$index,\r\n                          scope.row,\r\n                          'migrate_form' + scope.$index\r\n                        )\r\n                      \"\r\n                      >确定迁移</el-button\r\n                    >\r\n                  </div>\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-popover>\r\n            <el-button-group>\r\n              <el-button\r\n                v-popover=\"'popover' + scope.$index\"\r\n                plain\r\n                type=\"info\"\r\n                size=\"mini\"\r\n                >迁移</el-button\r\n              >\r\n              <el-button\r\n                @click=\"startPod(scope.$index, scope.row)\"\r\n                v-if=\"scope.row.metadata.annotations.status === 'No'\"\r\n                size=\"mini\"\r\n                type=\"success\"\r\n                >启动</el-button\r\n              >\r\n              <el-button\r\n                @click=\"stopPod(scope.$index, scope.row)\"\r\n                v-else\r\n                size=\"mini\"\r\n                type=\"warning\"\r\n                >停止</el-button\r\n              >\r\n              <el-button\r\n                @click=\"deletePod(scope.$index, scope.row)\"\r\n                plain\r\n                size=\"mini\"\r\n                type=\"danger\"\r\n                >删除</el-button\r\n              >\r\n            </el-button-group>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页栏 -->\r\n      <div v-if=\"poddata.length != 0\" style=\"margin-top: 30px\">\r\n        <el-pagination\r\n          :current-page.sync=\"pod_curpage\"\r\n          :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n          :page-size.sync=\"pod_pagesize\"\r\n          layout=\"sizes, total, prev, pager, next, jumper\"\r\n          :total=\"totalpod\"\r\n          background\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n      <!-- 添加Pod对话框 -->\r\n      <el-dialog title=\"添加Pod\" :visible.sync=\"createpodvisible\">\r\n        <el-form\r\n          label-position=\"top\"\r\n          label-width=\"80px\"\r\n          :model=\"cp_form\"\r\n          :status-icon=\"true\"\r\n          :rules=\"cp_rules\"\r\n          ref=\"cp_form\"\r\n        >\r\n          <el-form-item label=\"Pod名称\" prop=\"podName\">\r\n            <el-input\r\n              v-model=\"cp_form.podName\"\r\n              placeholder=\"请输入Pod名称\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"命名空间\" prop=\"namespace\">\r\n            <!-- <el-input v-model=\"cp_form.namespace\"></el-input> -->\r\n            <el-select\r\n              style=\"width: 100%\"\r\n              v-model=\"cp_form.namespace\"\r\n              clearable\r\n              @visible-change=\"nsremote\"\r\n              placeholder=\"请选择命名空间\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in namespace_options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"选择节点\" prop=\"nodename\">\r\n            <!-- <el-input v-model=\"cp_form.containerImage\"></el-input> -->\r\n            <el-select\r\n              style=\"width: 100%\"\r\n              v-model=\"cp_form.nodename\"\r\n              clearable\r\n              @visible-change=\"noderemote\"\r\n              placeholder=\"请选择节点\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in nodename_options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"选择持久卷声明\" prop=\"pvcName\">\r\n            <!-- <el-input v-model=\"cp_form.containerImage\"></el-input> -->\r\n            <el-select\r\n              style=\"width: 100%\"\r\n              v-model=\"cp_form.pvcName\"\r\n              clearable\r\n              @visible-change=\"pvcremote\"\r\n              placeholder=\"请选择pvc\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in pvcName_options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"所属容器\" prop=\"containerInfoList\">\r\n            <el-popover\r\n              style=\"margin-right: 10px\"\r\n              placement=\"top-start\"\r\n              :title=\"container.containerName\"\r\n              width=\"200\"\r\n              trigger=\"hover\"\r\n              :key=\"container.containerName\"\r\n              v-for=\"container in cp_form.containerInfoList\"\r\n            >\r\n              <el-descriptions :column=\"1\" size=\"mini\">\r\n                <el-descriptions-item label=\"镜像\">{{\r\n                  container.containerImage\r\n                }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"端口号\">{{\r\n                  container.port\r\n                }}</el-descriptions-item>\r\n              </el-descriptions>\r\n              <el-tag\r\n                slot=\"reference\"\r\n                closable\r\n                :disable-transitions=\"false\"\r\n                @close=\"handleClose(container)\"\r\n                type=\"info\"\r\n                effect=\"plain\"\r\n              >\r\n                {{ container.containerName }}\r\n              </el-tag>\r\n            </el-popover>\r\n            <el-card class=\"con-card\" v-if=\"addvisible\" shadow=\"hover\">\r\n              <div slot=\"header\" class=\"clearfix\">\r\n                <el-row :gutter=\"20\">\r\n                  <el-col :span=\"12\" :offset=\"0\">\r\n                    <span\r\n                      >添加第\r\n                      {{ cp_form.containerInfoList.length + 1 }}\r\n                      个新容器</span\r\n                    >\r\n                  </el-col>\r\n                  <el-col :span=\"3\" :offset=\"3\">\r\n                    <el-button\r\n                      @click=\"addcontainer('tmp_con_info')\"\r\n                      icon=\"el-icon-check\"\r\n                      size=\"mini\"\r\n                      circle\r\n                      plain\r\n                      type=\"success\"\r\n                    ></el-button>\r\n                  </el-col>\r\n                  <el-col :span=\"3\" :offset=\"0\">\r\n                    <el-button\r\n                      @click=\"resetForm('tmp_con_info')\"\r\n                      icon=\"el-icon-refresh-right\"\r\n                      size=\"mini\"\r\n                      circle\r\n                    ></el-button>\r\n                  </el-col>\r\n                  <el-col :span=\"3\" :offset=\"0\">\r\n                    <el-button\r\n                      @click=\"closeadd\"\r\n                      icon=\"el-icon-close\"\r\n                      size=\"mini\"\r\n                      circle\r\n                      plain\r\n                      type=\"danger\"\r\n                    ></el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </div>\r\n              <el-form\r\n                label-position=\"top\"\r\n                :model=\"tmp_con_info\"\r\n                :status-icon=\"true\"\r\n                :rules=\"tmp_con_rules\"\r\n                ref=\"tmp_con_info\"\r\n              >\r\n                <el-form-item label=\"容器名称\" prop=\"containerName\">\r\n                  <el-input\r\n                    v-model=\"tmp_con_info.containerName\"\r\n                    placeholder=\"请输入容器名称\"\r\n                    clearable\r\n                  ></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"容器镜像\" prop=\"containerImage\">\r\n                  <el-select\r\n                    style=\"width: 100%\"\r\n                    v-model=\"tmp_con_info.containerImage\"\r\n                    clearable\r\n                    @visible-change=\"imageremote\"\r\n                    placeholder=\"请选择容器镜像\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"item in containerImage_options\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                    >\r\n                    </el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"端口号\" prop=\"port\">\r\n                  <el-input\r\n                    v-model=\"tmp_con_info.port\"\r\n                    placeholder=\"请输入端口号\"\r\n                  ></el-input>\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-card>\r\n            <el-button\r\n              class=\"button-new-tag\"\r\n              v-else\r\n              size=\"small\"\r\n              @click=\"showInputCon\"\r\n              >添加容器</el-button\r\n            >\r\n          </el-form-item>\r\n          <el-form-item size=\"large\">\r\n            <div class=\"cp-sbm-area\">\r\n              <el-button round @click=\"resetForm('cp_form')\"\r\n                >清空输入</el-button\r\n              >\r\n              <el-button round type=\"primary\" @click=\"cp_sumbit('cp_form')\"\r\n                >立即创建</el-button\r\n              >\r\n            </div>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nexport default {\r\n  name: \"ResPool\",\r\n  mounted() {\r\n    // 计算时间\r\n    this.resloading = true;\r\n    this.beginTime = +new Date();\r\n    // 获取节点表信息\r\n    this.getnodeinfo();\r\n    // 获取容器表信息\r\n    this.getPodList();\r\n  },\r\n  data() {\r\n    // 自定义验证规则\r\n    var checkcmpimage = (rule, value, callback) => {\r\n      console.log(value);\r\n      if (value.length < 1) {\r\n        // 不足，提示不足\r\n        return callback(new Error(\"请添加至少一个容器\"));\r\n      }\r\n      callback();\r\n    };\r\n    return {\r\n      beginTime: 0,\r\n      endTime: 0,\r\n      createpodvisible: false,\r\n      cp_form: {\r\n        podName: \"\",\r\n        namespace: \"\",\r\n        nodename: \"\",\r\n        pvcName: \"\",\r\n        containerInfoList: [],\r\n      },\r\n      migrate_form: {\r\n        nodename: \"\",\r\n      },\r\n      // 添加容器校验规则\r\n      cp_rules: {\r\n        podName: [\r\n          { required: true, message: \"请输入Pod名称\", trigger: \"blur\" },\r\n        ],\r\n        namespace: [\r\n          { required: true, message: \"请选择命名空间\", trigger: \"change\" },\r\n        ],\r\n        nodename: [\r\n          { required: true, message: \"请选择节点\", trigger: \"change\" },\r\n        ],\r\n        pvcName: [\r\n          { required: true, message: \"请输入Pvc名称\", trigger: \"change\" },\r\n        ],\r\n        containerInfoList: [{ validator: checkcmpimage, trigger: \"change\" }],\r\n      },\r\n      migrate_rules: {\r\n        nodename: [\r\n          {\r\n            required: true,\r\n            message: \"请选择迁移的节点名称\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n      },\r\n      tmp_con_info: {\r\n        containerName: \"\",\r\n        containerImage: \"\",\r\n        port: \"80\",\r\n      },\r\n      tmp_con_rules: {\r\n        containerName: [\r\n          { required: true, message: \"请输入容器名称\", trigger: \"blur\" },\r\n        ],\r\n        containerImage: [\r\n          { required: true, message: \"请选择容器镜像\", trigger: \"change\" },\r\n        ],\r\n        port: [{ required: true, message: \"请输入端口号\", trigger: \"blur\" }],\r\n      },\r\n      // 命名空间选项\r\n      namespace_options: [],\r\n      // 容器镜像选项\r\n      containerImage_options: [\r\n        {\r\n          value: \"\",\r\n          label: \"\",\r\n        },\r\n      ],\r\n      // 节点名称选项\r\n      nodename_options: [],\r\n      // pvc名称选项\r\n      pvcName_options: [],\r\n      // 动态容器相关\r\n      addvisible: false,\r\n      // 抽屉显示控制\r\n      poddrawer: false,\r\n      imagedrawer: false,\r\n      // 命令执行结果flag\r\n      res_state: \"\",\r\n      baseurl: \"http://39.98.124.97:8080\",\r\n      execurl: \"http://\" + this.$store.state.nodeip + \":8081\",\r\n      // baseurl: \"http://127.0.0.1:8080\",\r\n      vmdata: [],\r\n      psearch: \"\",\r\n      pod_psearch: \"\",\r\n      serverip: \"\",\r\n      images: [],\r\n      curpage: 1,\r\n      pod_curpage: 1,\r\n      totalvm: 0,\r\n      totalpod: 0,\r\n      pagesize: 10,\r\n      pod_pagesize: 10,\r\n      formInline: {},\r\n      buildvmvisible: false,\r\n      commandvisible: false,\r\n      command_tmp_data: {\r\n        name: \"无\",\r\n        state: \"无\",\r\n        cpuNum: \"无\",\r\n        ipaddr: \"无\",\r\n        maxMem: \"无\",\r\n      },\r\n      nettype_options: [\r\n        {\r\n          label: \"bridge\",\r\n          value: \"bridge\",\r\n        },\r\n        {\r\n          label: \"nat\",\r\n          value: \"nat\",\r\n        },\r\n      ],\r\n      node_options: [\r\n        {\r\n          label: \"云节点:39.98.124.97\",\r\n          value: \"192.168.194.178\",\r\n        },\r\n        {\r\n          label: \"端节点1:192.168.194.45\",\r\n          value: \"192.168.194.45\",\r\n        },\r\n        {\r\n          label: \"端节点2:192.168.194.164\",\r\n          value: \"192.168.194.164\",\r\n        },\r\n      ],\r\n      ostype_options: [\r\n        {\r\n          label: \"x86\",\r\n          value: \"X86\",\r\n        },\r\n        {\r\n          label: \"arm\",\r\n          value: \"arm\",\r\n        },\r\n      ],\r\n      cpunum_options: [\r\n        {\r\n          label: \"1 个\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          label: \"2 个\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          label: \"4 个\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          label: \"6 个\",\r\n          value: \"6\",\r\n        },\r\n        {\r\n          label: \"8 个\",\r\n          value: \"8\",\r\n        },\r\n        {\r\n          label: \"10 个\",\r\n          value: \"10\",\r\n        },\r\n      ],\r\n      memory_options: [\r\n        {\r\n          label: \"1 GiB\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          label: \"2 GiB\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          label: \"4 GiB\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          label: \"6 GiB\",\r\n          value: \"6\",\r\n        },\r\n        {\r\n          label: \"8 GiB\",\r\n          value: \"8\",\r\n        },\r\n        {\r\n          label: \"16 GiB\",\r\n          value: \"16\",\r\n        },\r\n        {\r\n          label: \"24 GiB\",\r\n          value: \"24\",\r\n        },\r\n        {\r\n          label: \"32 GiB\",\r\n          value: \"32\",\r\n        },\r\n      ],\r\n      edgeserver_options: [\r\n        {\r\n          label: \"端1\",\r\n          value: \"worker1\",\r\n        },\r\n      ],\r\n      pod_options: [\r\n        {\r\n          label: \"容器1\",\r\n          value: \"pod1\",\r\n        },\r\n      ],\r\n      // 虚拟机信息\r\n      formData: {\r\n        name: \"\",\r\n        memory: \"\",\r\n        cpuNum: \"\",\r\n        OStype: \"\",\r\n        node: \"\",\r\n        nettype: \"\",\r\n      },\r\n      commandForm: {\r\n        command: \"\",\r\n        edgeserver: \"\",\r\n        pod: \"\",\r\n        res_state: \"\",\r\n        result: \"\",\r\n      },\r\n      // 校验规则\r\n      vm_rules: {\r\n        name: [\r\n          { required: true, message: \"请输入虚拟机名称\", trigger: \"blur\" },\r\n        ],\r\n        memory: [\r\n          { required: true, message: \"请选择内存大小\", trigger: \"change\" },\r\n        ],\r\n        node: [\r\n          {\r\n            required: true,\r\n            message: \"请选择创建虚拟机所在的节点\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n        nettype: [\r\n          {\r\n            required: true,\r\n            message: \"请选择创建虚拟机的网络类型\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n        cpuNum: [\r\n          { required: true, message: \"请选择CPU个数\", trigger: \"change\" },\r\n        ],\r\n        OStype: [\r\n          { required: true, message: \"请选择系统类型\", trigger: \"change\" },\r\n        ],\r\n      },\r\n      command_rules: {\r\n        command: [{ required: true, message: \"请输入命令\", trigger: \"blur\" }],\r\n        // edgeserver: [\r\n        //   { required: true, message: \"请选择端服务器\", trigger: \"change\" },\r\n        // ],\r\n        // pod: [\r\n        //   { required: true, message: \"请选择要执行的容器\", trigger: \"change\" },\r\n        // ]\r\n      },\r\n      vmpod_tmp_data: {},\r\n      vmimg_tmp_data: {},\r\n      // 虚拟机镜像\r\n      cidata: [],\r\n      pcisearch: \"\",\r\n      iamgename: \"\",\r\n      img_list: [],\r\n      fullloading: false,\r\n      // 虚拟机容器\r\n      poddata: [],\r\n      ppodsearch: \"\",\r\n      nodeinfo: [],\r\n      temparr1: 0,\r\n      temparr2: 0,\r\n      temparr3: 0,\r\n      resloading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    formatDate(timestamp, format) {\r\n      const date = new Date(timestamp);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n      const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n      if (format === \"YYYY-MM-DD\") {\r\n        return `${year}-${month}-${day}`;\r\n      } else if (format === \"HH:mm:ss\") {\r\n        return `${hours}:${minutes}:${seconds}`;\r\n      } else {\r\n        return \"\"; // 可以根据需要添加其他格式\r\n      }\r\n    },\r\n    // 动态添加容器相关\r\n    showInputCon() {\r\n      this.addvisible = true;\r\n    },\r\n    closeadd() {\r\n      this.addvisible = false;\r\n    },\r\n    addcontainer(formName) {\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 提交表单，创建容器\r\n          this.cp_form.containerInfoList.push(\r\n            JSON.parse(JSON.stringify(this.tmp_con_info))\r\n          );\r\n          this.addvisible = false;\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    handleClose(tag) {\r\n      this.cp_form.containerInfoList.splice(\r\n        this.cp_form.containerInfoList.indexOf(tag),\r\n        1\r\n      );\r\n    },\r\n    // 打开添加容器抽屉\r\n    openCreatePod() {\r\n      this.createpodvisible = true;\r\n    },\r\n    // 获取容器列表数据\r\n    getPodList() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/workload/getPodList\")\r\n        .then((res) => {\r\n          // console.log(JSON.parse(res.data.result));\r\n          this.poddata = JSON.parse(res.data.result).items;\r\n          // 获取namepath\r\n          for (let i = 0; i < this.poddata.length; i++) {\r\n            this.poddata[i].info = {};\r\n            if (this.poddata[i].spec.volumes) {\r\n              this.poddata[i].info.ppname =\r\n                this.poddata[i].spec.volumes[0].name;\r\n              this.$axios\r\n                .get(\r\n                  this.baseurl +\r\n                    \"/virtuleStorage/pvPath?pvName=\" +\r\n                    this.poddata[i].spec.volumes[0].name\r\n                )\r\n                .then((res) => {\r\n                  this.poddata[i].info.podpath = res.data.pvPath;\r\n                })\r\n                .catch((err) => {\r\n                  console.log(this.poddata[i].spec.volumes[0].name + \"无path\");\r\n                  // this.poddata[i].info.podpath = \"---\";\r\n                });\r\n              if (!this.poddata[i].info.podpath) {\r\n                this.poddata[i].info.podpath = \"---\";\r\n              }\r\n            } else {\r\n              this.poddata[i].info.ppname = \"---\";\r\n              this.poddata[i].info.podpath = \"---\";\r\n            }\r\n          }\r\n          this.totalpod = this.poddata.length;\r\n          this.temparr2 = 1;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 启动容器\r\n    startPod(idx, row) {\r\n      this.$axios({\r\n        method: \"post\",\r\n        url: this.baseurl + \"/workload/startPod\",\r\n        data: {\r\n          podName: row.metadata.name,\r\n          podNamespace: row.metadata.namespace,\r\n          podNodeName: row.spec.nodename,\r\n          containerInfoList: [],\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then(\r\n        (res) => {\r\n          console.log(res);\r\n          this.$notify.success({\r\n            title: \"操作通知\",\r\n            message: \"容器 \" + row.metadata.name + \" 启动成功\",\r\n            position: \"bottom-right\",\r\n          });\r\n          row.metadata.annotations.status = \"Yes\";\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.$notify.error({\r\n            title: \"操作失败\",\r\n            message: \"请检查网络连接设置\",\r\n            position: \"bottom-right\",\r\n          });\r\n        }\r\n      );\r\n    },\r\n    // 停止容器\r\n    stopPod(idx, row) {\r\n      this.$axios({\r\n        method: \"post\",\r\n        url: this.baseurl + \"/workload/stopPod\",\r\n        data: {\r\n          podName: row.metadata.name,\r\n          podNamespace: row.metadata.namespace,\r\n          podNodeName: row.spec.nodename,\r\n          containerInfoList: [],\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then(\r\n        (res) => {\r\n          console.log(res);\r\n          this.$notify.success({\r\n            title: \"操作通知\",\r\n            message: \"容器 \" + row.metadata.name + \" 停止成功\",\r\n            position: \"bottom-right\",\r\n          });\r\n          row.metadata.annotations.status = \"No\";\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.$notify.error({\r\n            title: \"操作失败\",\r\n            message: \"请检查网络连接设置\",\r\n            position: \"bottom-right\",\r\n          });\r\n        }\r\n      );\r\n    },\r\n    // 添加容器\r\n    cp_sumbit(formName) {\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 将data数据分成两个对象\r\n          const podInfo = {\r\n            podName: this.cp_form.podName,\r\n            podNamespace: this.cp_form.namespace,\r\n            podNodeName: this.cp_form.nodename,\r\n            containerInfoList: this.cp_form.containerInfoList,\r\n          };\r\n\r\n          const pvcInfo = {\r\n            pvcName: this.cp_form.pvcName,\r\n          };\r\n          // 提交表单，创建容器\r\n          this.$axios({\r\n            method: \"post\",\r\n            url: this.baseurl + \"/workload/createPod\",\r\n            data: {\r\n              // podName: this.cp_form.podName,\r\n              // podNamespace: this.cp_form.namespace,\r\n              // podNodeName: this.cp_form.nodename,\r\n              // containerInfoList: this.cp_form.containerInfoList,\r\n              // pvcName: this.cp_form.pvcName,\r\n              podInfo: podInfo,\r\n              pvcInfo: pvcInfo,\r\n            },\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }).then(\r\n            (res) => {\r\n              console.log(res);\r\n              if (res.data[0] === \"E\") {\r\n                this.$notify.error({\r\n                  title: \"创建失败\",\r\n                  message: res.data,\r\n                  position: \"bottom-right\",\r\n                });\r\n              } else {\r\n                this.$notify.success({\r\n                  title: \"完成通知\",\r\n                  message: \"容器 \" + this.cp_form.podName + \" 创建成功\",\r\n                  position: \"bottom-right\",\r\n                });\r\n                this.getPodList();\r\n              }\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.$notify.error({\r\n                title: \"创建失败\",\r\n                message: \"请检查网络连接设置\",\r\n                position: \"bottom-right\",\r\n              });\r\n            }\r\n          );\r\n          this.createpodvisible = false;\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 删除容器\r\n    deletePod(idx, row) {\r\n      this.$axios({\r\n        method: \"post\",\r\n        url: this.baseurl + \"/workload/deletePod\",\r\n        data: {\r\n          podName: row.metadata.name,\r\n          podNamespace: row.metadata.namespace,\r\n          podNodeName: row.spec.nodename,\r\n          containerInfoList: [],\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then(\r\n        (res) => {\r\n          this.$notify.success({\r\n            title: \"操作通知\",\r\n            message: \"容器 \" + row.metadata.name + \"删除成功\",\r\n            position: \"bottom-right\",\r\n          });\r\n          this.getPodList();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.$notify.error({\r\n            title: \"删除失败\",\r\n            message: \"请检查网络连接设置\",\r\n            position: \"bottom-right\",\r\n          });\r\n        }\r\n      );\r\n    },\r\n    migrate_sumbit(idx, row, formName) {\r\n      console.log(formName);\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        console.log(row.metadata.name);\r\n        console.log(this.migrate_form.nodename);\r\n        if (valid) {\r\n          this.$axios({\r\n            method: \"post\",\r\n            url: this.baseurl + \"/workload/editPod\",\r\n            data: {\r\n              podName: row.metadata.name,\r\n              podNamespace: row.metadata.namespace,\r\n              podNodeName: this.migrate_form.nodename,\r\n            },\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }).then(\r\n            (res) => {\r\n              if (res.data[0] === \"E\") {\r\n                this.$notify.error({\r\n                  title: \"迁移失败\",\r\n                  message: res.data,\r\n                  position: \"bottom-right\",\r\n                });\r\n              } else {\r\n                this.$notify.success({\r\n                  title: \"操作通知\",\r\n                  message: \"容器 \" + row.metadata.name + \"迁移成功\",\r\n                  position: \"bottom-right\",\r\n                });\r\n              }\r\n              this.getPodList();\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.$notify.error({\r\n                title: \"迁移失败\",\r\n                message: \"请检查网络连接设置\",\r\n                position: \"bottom-right\",\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    // 远程搜索命名空间\r\n    nsremote() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/workload/namespace/list\")\r\n        .then((res) => {\r\n          // console.log(res);\r\n          console.log(JSON.parse(res.data.result));\r\n          let rdata = JSON.parse(res.data.result).items;\r\n          let resop = [];\r\n          for (let i = 0; i < rdata.length; i++) {\r\n            let tmp = {};\r\n            tmp[\"label\"] = rdata[i].metadata.name;\r\n            tmp[\"value\"] = rdata[i].metadata.name;\r\n            resop.push(tmp);\r\n          }\r\n          this.namespace_options = resop;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 远程搜索节点名\r\n    noderemote() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/workload/node/list\")\r\n        .then((res) => {\r\n          // console.log(res);\r\n          console.log(JSON.parse(res.data.result));\r\n          let rdata = JSON.parse(res.data.result).items;\r\n          let resop = [];\r\n          for (let i = 0; i < rdata.length; i++) {\r\n            let tmp = {};\r\n            tmp[\"label\"] = rdata[i].metadata.name;\r\n            tmp[\"value\"] = rdata[i].metadata.name;\r\n            resop.push(tmp);\r\n          }\r\n          this.nodename_options = resop;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 远程搜索pvc名\r\n    pvcremote() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/virtuleStorage/vs/pvclist\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(JSON.parse(res.data.result));\r\n          let rdata = JSON.parse(res.data.result).items;\r\n          let resop = [];\r\n          for (let i = 0; i < rdata.length; i++) {\r\n            let tmp = {};\r\n            tmp[\"label\"] = rdata[i].metadata.name;\r\n            tmp[\"value\"] = rdata[i].metadata.name;\r\n            resop.push(tmp);\r\n          }\r\n          this.pvcName_options = resop;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 远程搜索image名\r\n    imageremote() {\r\n      this.$axios\r\n        .post(this.baseurl + \"/containerd/images/list\", {\r\n          virtualMachineIp: \"39.98.124.97\",\r\n          userName: \"root\",\r\n          userPassword: \"Upc123456@\",\r\n        })\r\n        .then((res) => {\r\n          let rdata = this.data_resolver(res.data.result);\r\n          // this.cidata = rdata;\r\n          // this.totalci = rdata.length;\r\n          console.log(rdata);\r\n          // let rdata = JSON.parse(res.data.result).items;\r\n          let resop = [];\r\n          for (let i = 0; i < rdata.length; i++) {\r\n            let tmp = {};\r\n            tmp[\"label\"] = rdata[i].imageName + \":\" + rdata[i].imageTag;\r\n            tmp[\"value\"] = rdata[i].imageName + \":\" + rdata[i].imageTag;\r\n            resop.push(tmp);\r\n          }\r\n          this.containerImage_options = resop;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 解析数据\r\n    data_resolver(sdata) {\r\n      let res = [];\r\n      let rows = sdata.split(\"\\n\");\r\n      let i = 1;\r\n      for (; i < rows.length - 1; i++) {\r\n        let cols = rows[i].split(\" \");\r\n        let j = 0;\r\n        cols = cols.filter(function (item) {\r\n          return item !== \"\";\r\n        });\r\n        res.push({\r\n          imageName: cols[0],\r\n          imageTag: cols[1],\r\n          imageId: cols[2],\r\n          imageSize: cols[3],\r\n        });\r\n      }\r\n      return res;\r\n    },\r\n    // 获取节点信息\r\n    getnodeinfo() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/node/getNodeList1\")\r\n        .then((res) => {\r\n          this.temparr1 = 1;\r\n          this.nodeinfo = res.data.content;\r\n          // 获取全部虚拟机\r\n          this.vmdata = [];\r\n          for (let i = 0; i < this.nodeinfo.length; i++) {\r\n            this.getVMList(\"http://\" + this.nodeinfo[i].nodeIp + \":8080\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 删除容器\r\n    deletepod(idx, row) {\r\n      this.$axios\r\n        .delete(\r\n          this.baseurl +\r\n            \"/docker/deleteContainer?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&containerId=\" +\r\n            row.conid\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"容器\" + row.conid + \"删除成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_pod();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"删除失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 停止容器\r\n    stoppod(idx, row) {\r\n      this.$axios\r\n        .post(\r\n          this.baseurl +\r\n            \"/docker/stopContainer?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&containerId=\" +\r\n            row.conid\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"容器\" + row.conid + \"停止成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_pod();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"停止失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 启动容器\r\n    startpod(idx, row) {\r\n      this.$axios\r\n        .post(\r\n          this.baseurl +\r\n            \"/docker/startContainer?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&containerId=\" +\r\n            row.conid\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"容器\" + row.conid + \"启动成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_pod();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"启动失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 删除镜像\r\n    deleteimage(idx, row) {\r\n      this.$axios\r\n        .delete(\r\n          this.baseurl +\r\n            \"/docker/deleteImage?vmName=\" +\r\n            this.vmimg_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&imageName=\" +\r\n            row.repository +\r\n            \":\" +\r\n            row.tag\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"镜像\" + row.repository + \"删除成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_img();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"删除失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 启动镜像\r\n    startimage(idx, row) {\r\n      this.$prompt(\"请输入启动命令\", \"启动提示\", {\r\n        confirmButtonText: \"启动\",\r\n        cancelButtonText: \"取消\",\r\n        inputPlaceholder: \"请输入启动命令\",\r\n        inputValue: \"docker run -d \" + row.repository + \":\" + row.tag,\r\n      }).then(({ value }) => {\r\n        this.$axios\r\n          .post(\r\n            this.baseurl +\r\n              \"/docker/run?vmName=\" +\r\n              this.vmimg_tmp_data.name +\r\n              \"&endIp=\" +\r\n              this.$store.state.nodeip +\r\n              \"&command=\" +\r\n              value\r\n          )\r\n          .then((res) => {\r\n            if (res.data.exitStatus == 0) {\r\n              this.$message({\r\n                message: \"镜像\" + row.repository + \"启动成功\",\r\n                type: \"success\",\r\n              });\r\n              this.get_vm_img();\r\n            } else {\r\n              this.$message({\r\n                message: res.data.errorOutput,\r\n                type: \"error\",\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"errors\", err);\r\n            this.$message({\r\n              message: \"启动失败，请检查网络设置\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      });\r\n    },\r\n    // 上传镜像到虚拟机\r\n    uploadImgToVm() {\r\n      if (this.iamgename === \"\") {\r\n        this.$message({\r\n          message: \"请先选择要上传的镜像\",\r\n          type: \"error\",\r\n        });\r\n      } else {\r\n        this.fullloading = true;\r\n        // 防止没有文件夹，先创建\r\n        this.$axios\r\n          .post(\r\n            this.baseurl +\r\n              \"/docker/mkdir?vmName=\" +\r\n              this.vmimg_tmp_data.name +\r\n              \"&endIp=\" +\r\n              this.$store.state.nodeip +\r\n              \"&targetPath=/testimg\"\r\n          )\r\n          .then((res) => {\r\n            if (res.data.exitStatus == 0) {\r\n              // 上传镜像到文件夹\r\n              this.$axios\r\n                .post(\r\n                  this.baseurl +\r\n                    \"/docker/upload?vmName=\" +\r\n                    this.vmimg_tmp_data.name +\r\n                    \"&endIp=\" +\r\n                    this.$store.state.nodeip +\r\n                    \"&fileName=\" +\r\n                    this.iamgename +\r\n                    \"&targetPath=/testimg&sourceIp=39.98.124.97\"\r\n                )\r\n                .then((res) => {\r\n                  if (res.data.exitStatus == 0) {\r\n                    this.$message({\r\n                      message: \"上传成功，等待导入到Docker\",\r\n                      type: \"success\",\r\n                    });\r\n                    // 导入镜像到Docker\r\n                    this.$axios\r\n                      .post(\r\n                        this.baseurl +\r\n                          \"/docker/import?vmName=\" +\r\n                          this.vmimg_tmp_data.name +\r\n                          \"&endIp=\" +\r\n                          this.$store.state.nodeip +\r\n                          \"&targetPath=/testimg/&imageFileName=\" +\r\n                          this.iamgename\r\n                      )\r\n                      .then((res) => {\r\n                        if (res.data.exitStatus == 0) {\r\n                          this.$message({\r\n                            message: \"导入镜像\" + this.iamgename + \"成功\",\r\n                            type: \"success\",\r\n                          });\r\n                          this.fullloading = false;\r\n                          this.get_vm_img();\r\n                        } else {\r\n                          if (\r\n                            res.data.errorOutput !=\r\n                            \"Command execution timed out or the file is still uploading.\"\r\n                          ) {\r\n                            this.$message({\r\n                              message: res.data.errorOutput,\r\n                              type: \"error\",\r\n                            });\r\n                          } else {\r\n                            this.$message({\r\n                              message:\r\n                                \"镜像\" +\r\n                                this.iamgename +\r\n                                \"导入进行中，请稍后查看\",\r\n                              type: \"success\",\r\n                            });\r\n                            this.fullloading = false;\r\n                            this.get_vm_img();\r\n                          }\r\n                        }\r\n                      })\r\n                      .catch((err) => {\r\n                        console.log(\"errors\", err);\r\n                        this.$message({\r\n                          message: \"导入失败，请检查网络设置\",\r\n                          type: \"error\",\r\n                        });\r\n                      });\r\n                  } else {\r\n                    this.$message({\r\n                      message: res.data.errorOutput,\r\n                      type: \"error\",\r\n                    });\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(\"errors\", err);\r\n                  this.$message({\r\n                    message: \"上传失败，请检查网络设置\",\r\n                    type: \"error\",\r\n                  });\r\n                });\r\n            } else {\r\n              this.$message({\r\n                message: \"创建文件夹失败，请检查虚拟机目录\",\r\n                type: \"error\",\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"errors\", err);\r\n            this.$message({\r\n              message: \"创建文件夹失败，请检查网络问题\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    // 获取镜像\r\n    getimg() {\r\n      this.img_list = [];\r\n      this.$axios\r\n        .get(\"http://39.98.124.97:8081/api/ssh/imgListByIP?ip=39.98.124.97\")\r\n        .then((res) => {\r\n          let imgdata = res.data.output.split(\"\\n\");\r\n          imgdata.pop();\r\n          for (let i = 0; i < imgdata.length; i++) {\r\n            this.img_list.push({\r\n              label: imgdata[i],\r\n              value: imgdata[i],\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 镜像抽屉打开\r\n    imgdopen() {\r\n      this.cidata = [];\r\n      this.iamgename = \"\";\r\n      this.img_list = [];\r\n      this.get_vm_img();\r\n    },\r\n    // 镜像抽屉打开\r\n    podopen() {\r\n      this.poddata = [];\r\n      this.get_vm_pod();\r\n    },\r\n    // 获取虚拟机镜像数据\r\n    get_vm_pod() {\r\n      this.$axios\r\n        .get(\r\n          this.baseurl +\r\n            \"/docker/containerList?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip\r\n        )\r\n        .then((res) => {\r\n          this.poddata = this.data_resolver_pod(JSON.parse(res.data[0]).output);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 获取虚拟机镜像数据\r\n    get_vm_img() {\r\n      this.$axios\r\n        .get(\r\n          this.baseurl +\r\n            \"/docker/imageList?vmName=\" +\r\n            this.vmimg_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip\r\n        )\r\n        .then((res) => {\r\n          this.cidata = this.data_resolver_image(\r\n            JSON.parse(res.data[0]).output\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 解析pod数据\r\n    data_resolver_pod(sdata) {\r\n      let res = [];\r\n      let rows = sdata.split(\"\\n\");\r\n      let i = 1;\r\n      for (; i < rows.length - 1; i++) {\r\n        let cols = rows[i].split(\"   \");\r\n        let j = 0;\r\n        cols = cols.filter(function (item) {\r\n          return item !== \"\";\r\n        });\r\n        res.push({\r\n          conid: cols[0],\r\n          image: cols[1],\r\n          command: cols[2],\r\n          created: cols[3],\r\n          status: cols[4],\r\n          ports: \"\",\r\n          names: cols[5],\r\n        });\r\n      }\r\n      return res;\r\n    },\r\n    // 解析数据\r\n    data_resolver_image(sdata) {\r\n      let res = [];\r\n      let rows = sdata.split(\"\\n\");\r\n      let i = 1;\r\n      for (; i < rows.length - 1; i++) {\r\n        let cols = rows[i].split(\"   \");\r\n        let j = 0;\r\n        cols = cols.filter(function (item) {\r\n          return item !== \"\";\r\n        });\r\n        res.push({\r\n          repository: cols[0],\r\n          tag: cols[1],\r\n          imageid: cols[2],\r\n          created: cols[3],\r\n          size: cols[4],\r\n        });\r\n      }\r\n      return res;\r\n    },\r\n    // 打开pod\r\n    openpod(row) {\r\n      this.poddrawer = true;\r\n      this.vmpod_tmp_data = row;\r\n    },\r\n    // 打开image\r\n    openimage(row) {\r\n      this.imagedrawer = true;\r\n      this.vmimg_tmp_data = row;\r\n    },\r\n    // 发送执行命令\r\n    start_command(formName) {\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 处理命令\r\n          this.$axios({\r\n            method: \"post\",\r\n            url: this.execurl + \"/api/ssh/execute\",\r\n            data: {\r\n              VMname: this.command_tmp_data.name,\r\n              commands: this.commandForm.command.split(\"\\n\"),\r\n            },\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }).then(\r\n            (res) => {\r\n              console.log(res);\r\n              if (res.data.exitStatus === 0) {\r\n                this.commandForm.res_state = \"yes\";\r\n                this.commandForm.result = res.data.output;\r\n              } else {\r\n                this.commandForm.res_state = \"no\";\r\n                this.commandForm.result = res.data.errorOutput;\r\n              }\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.commandForm.result = \"网络错误，请检查网络\";\r\n              this.commandForm.res_state = \"no\";\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 选择宿主机ip来更改baseurl，根据ip获取虚拟机数据\r\n    suzhuchange(item) {\r\n      this.serverip = item;\r\n      this.baseurl = \"http://\" + this.serverip + \":8080\";\r\n      this.execurl = \"http://\" + this.serverip + \":8081\";\r\n      this.getVMList();\r\n    },\r\n    // 打开执行命令\r\n    opencommand(row) {\r\n      this.commandvisible = true;\r\n      this.command_tmp_data = row;\r\n    },\r\n    // 获取虚拟机列表数据\r\n    getVMList(ip) {\r\n      this.$axios\r\n        .get(ip + \"/getVMList\")\r\n        .then((res) => {\r\n          this.vmdata = this.vmdata.concat(res.data);\r\n          this.totalvm = this.vmdata.length;\r\n          this.temparr3 = 1;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n      // this.vmdata = [{\r\n      //   name: 'vm1',\r\n      //   state: 'VIR_DOMAIN_RUNNING',\r\n      //   cpuNum: 1,\r\n      //   maxMem: 1,\r\n      //   ipaddr: \"39.98.124.97:8080\"\r\n      // }];\r\n      // this.totalvm = this.vmdata.length;\r\n    },\r\n    openCreateVM() {\r\n      this.buildvmvisible = true;\r\n    },\r\n\r\n    refreshIP() {\r\n      for (let i = 0; i < this.nodeinfo.length; i++) {\r\n        this.$axios\r\n          .get(this.baseurl + \"/VMInfo/updateip/\" + this.nodeinfo[i].nodeIp)\r\n          .then((response) => {\r\n            const data = response.data;\r\n            if (data.success) {\r\n              this.$message.success(\"更新成功！\");\r\n              this.getnodeinfo();\r\n            } else {\r\n              this.$message.success(\"更新失败！\");\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    validName() {\r\n      if (this.formData.name.includes(\".\")) {\r\n        // 输入值不是正数，可以进行相应的处理，例如清空输入框、显示错误提示等。\r\n        this.$notify.error({\r\n          message: \"虚拟机名字不能包括特殊字符\",\r\n        });\r\n      }\r\n    },\r\n\r\n    //获取/root/images/下的虚拟机镜像\r\n    nsremote() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/Images/imgList\")\r\n        .then((res) => {\r\n          let resop = [];\r\n          for (let i = 0; i < res.data.content.length; i++) {\r\n            let tmp = {};\r\n            tmp[\"label\"] = res.data.content[i].name;\r\n            tmp[\"value\"] = res.data.content[i].name;\r\n            resop.push(tmp);\r\n          }\r\n          this.images = resop;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 添加虚拟机\r\n    vmc_sumbit(formName) {\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 提交表单，创建虚拟机\r\n          // this.$refs.upload.submit();\r\n          this.buildvmvisible = false;\r\n          this.$axios\r\n            .get(\r\n              this.baseurl +\r\n                \"/addVirtual?ImgName=\" +\r\n                this.formData.ImgName +\r\n                \"&name=\" +\r\n                this.formData.name +\r\n                \"&memory=\" +\r\n                this.formData.memory +\r\n                \"&cpuNum=\" +\r\n                this.formData.cpuNum +\r\n                \"&OStype=\" +\r\n                this.formData.OStype +\r\n                \"&nettype=\" +\r\n                this.formData.nettype +\r\n                \"&serverip=\" +\r\n                this.formData.node\r\n            )\r\n            .then((res) => {\r\n              if (res.data.success === false) {\r\n                this.$notify.error({\r\n                  title: \"创建虚拟机失败\",\r\n                  message: res.data.msg,\r\n                  position: \"bottom-right\",\r\n                });\r\n              } else {\r\n                this.$notify.success({\r\n                  title: \"创建虚拟机成功\",\r\n                  message: \"创建虚拟机\" + this.formData.name + \"成功\",\r\n                  position: \"bottom-right\",\r\n                });\r\n              }\r\n              this.getnodeinfo();\r\n            })\r\n            .catch((err) => {\r\n              this.$notify.error({\r\n                title: \"创建失败\",\r\n                message: err,\r\n                position: \"bottom-right\",\r\n                duration: 6000,\r\n              });\r\n            });\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n\r\n    vmstart(row) {\r\n      this.$axios\r\n        .get(this.baseurl + \"/initiate/\" + row.name)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"启动成功！\");\r\n            this.getnodeinfo();\r\n          } else {\r\n            this.$message.success(\"启动失败！\");\r\n          }\r\n        });\r\n    },\r\n    vmsuspend(row) {\r\n      this.$axios\r\n        .get(this.baseurl + \"/suspended/\" + row.name)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"挂起成功！\");\r\n            this.getnodeinfo();\r\n          } else {\r\n            this.$message.success(\"挂起失败！\");\r\n          }\r\n        });\r\n    },\r\n    vmresume(row) {\r\n      this.$axios.get(this.baseurl + \"/resume/\" + row.name).then((response) => {\r\n        const data = response.data;\r\n        if (data.success) {\r\n          this.$message.success(\"还原成功！\");\r\n          this.getnodeinfo();\r\n        } else {\r\n          this.$message.success(\"还原失败！\");\r\n        }\r\n      });\r\n    },\r\n    vmreboot(row) {\r\n      this.$axios.get(this.baseurl + \"/reboot/\" + row.name).then((response) => {\r\n        const data = response.data;\r\n        if (data.success) {\r\n          this.$message.success(\"重启中...\");\r\n          this.getnodeinfo();\r\n        } else {\r\n          this.$message.success(\"重启失败！\");\r\n        }\r\n      });\r\n    },\r\n    vmshutdown(row) {\r\n      this.$axios\r\n        .get(this.baseurl + \"/shutdown/\" + row.name)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"关机成功！\");\r\n            this.getnodeinfo();\r\n          } else {\r\n            this.$message.success(\"关机失败！\");\r\n          }\r\n        });\r\n    },\r\n\r\n    vmshutdownMust(row) {\r\n      this.$confirm(`您确定强行关机吗?`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$axios\r\n            .get(this.baseurl + \"/shutdownMust/\" + row.name)\r\n            .then((response) => {\r\n              const data = response.data;\r\n              if (data.success) {\r\n                this.$message.success(\"强行关机成功！\");\r\n                this.getnodeinfo();\r\n              } else {\r\n                this.$message.success(\"强行关机失败！\");\r\n              }\r\n            });\r\n        })\r\n        .catch(() => {\r\n          // 取消操作\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消\",\r\n          });\r\n        });\r\n    },\r\n    vmdelete(row) {\r\n      this.$confirm(`您确定删除该虚拟机吗?`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$axios\r\n            .delete(this.baseurl + \"/delete/\" + row.name)\r\n            .then((response) => {\r\n              const data = response.data;\r\n              if (data.success) {\r\n                this.$message.success(\"删除成功！\");\r\n                this.getnodeinfo();\r\n              } else {\r\n                this.$message.success(\"删除失败！\");\r\n              }\r\n            });\r\n        })\r\n        .catch(() => {\r\n          // 取消操作\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消\",\r\n          });\r\n        });\r\n    },\r\n  },\r\n  watch: {\r\n    temparr1(nv, ov) {\r\n      if (this.temparr1 == 1 && this.temparr2 == 1 && this.temparr3 == 1) {\r\n        this.endTime = +new Date();\r\n        this.resloading = false;\r\n      }\r\n    },\r\n    temparr2(nv, ov) {\r\n      if (this.temparr1 == 1 && this.temparr2 == 1 && this.temparr3 == 1) {\r\n        this.endTime = +new Date();\r\n        this.resloading = false;\r\n      }\r\n    },\r\n    temparr3(nv, ov) {\r\n      if (this.temparr1 == 1 && this.temparr2 == 1 && this.temparr3 == 1) {\r\n        this.endTime = +new Date();\r\n        this.resloading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style>\r\n.demo-table-expand {\r\n  font-size: 0;\r\n  padding-left: 3%;\r\n}\r\n.demo-table-expand label {\r\n  width: 90px;\r\n  color: #99a9bf;\r\n}\r\n.demo-table-expand .el-form-item {\r\n  margin-right: 0;\r\n  margin-bottom: 0;\r\n  width: 50%;\r\n}\r\n\r\n.con-card {\r\n  width: 40%;\r\n}\r\n\r\n.podarea {\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n}\r\n\r\n/* 动态容器名称 */\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n.button-new-tag {\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n.input-new-tag {\r\n  width: 110px;\r\n  margin-left: 10px;\r\n  vertical-align: bottom;\r\n}\r\n.vmarea {\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n}\r\n\r\n/*带背景的分页按钮背景色begin*/\r\n.el-pagination.is-background .el-pager li:not(.disabled).active {\r\n  background-color: #08c0b9;\r\n  color: #fff;\r\n}\r\n.el-pagination.is-background .el-pager li.active {\r\n  color: #fff;\r\n  cursor: default;\r\n}\r\n.el-pagination.is-background .el-pager li:hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination.is-background .el-pager li:not(.disabled):hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination.is-background .el-pager li:not(.disabled).active:hover {\r\n  background-color: #08c0b9;\r\n  color: #fff;\r\n}\r\n/*带背景的分页按钮背景色end*/\r\n\r\n/*不带背景的分页按钮背景色begin*/\r\n.el-pager li.active {\r\n  color: #08c0b9;\r\n  cursor: default;\r\n}\r\n.el-pagination .el-pager li:hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination .el-pager li:not(.disabled):hover {\r\n  color: #08c0b9;\r\n}\r\n/*不带背景的分页按钮背景色end*/\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ResPoolView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ResPoolView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ResPoolView.vue?vue&type=template&id=c4c30d58\"\nimport script from \"./ResPoolView.vue?vue&type=script&lang=js\"\nexport * from \"./ResPoolView.vue?vue&type=script&lang=js\"\nimport style0 from \"./ResPoolView.vue?vue&type=style&index=0&id=c4c30d58&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","resloading","expression","attrs","staticStyle","_v","endTime","_s","beginTime","staticClass","nodeinfo","background","color","scopedSlots","_u","key","fn","scope","row","nodeType","nodeConnectivity","buildvmvisible","on","$event","ref","formData","vm_rules","validName","model","callback","$$v","$set","memory","_l","memory_options","item","label","cpuNum","cpunum_options","OStype","ostype_options","nsremote","ImgName","images","node","node_options","nettype","nettype_options","resetForm","vmc_sumbit","commandvisible","command_tmp_data","state","maxMem","ipaddr","commandForm","command_rules","command","slot","result","res_state","_e","start_command","fullloading","imagedrawer","imgdopen","vmimg_tmp_data","getimg","iamgename","img_list","uploadImgToVm","cidata","filter","data","pcisearch","repository","toLowerCase","includes","startimage","$index","deleteimage","poddrawer","podopen","vmpod_tmp_data","poddata","ppodsearch","image","startpod","stoppod","deletepod","refreshIP","vmdata","slice","curpage","pagesize","psearch","vmstart","vmsuspend","vmresume","vmreboot","vmshutdown","vmshutdownMust","vmdelete","openpod","openimage","length","totalvm","openCreatePod","pod_curpage","pod_pagesize","pod_psearch","metadata","props","namespace","spec","nodeName","status","phase","annotations","formatDate","creationTimestamp","info","ppname","podpath","containers","ports","port","protocol","containerPort","migrate_form","migrate_rules","noderemote","nodename","nodename_options","migrate_sumbit","startPod","stopPod","deletePod","totalpod","createpodvisible","cp_form","cp_rules","podName","namespace_options","pvcremote","pvcName","pvcName_options","containerInfoList","container","containerName","containerImage","handleClose","addvisible","addcontainer","closeadd","tmp_con_info","tmp_con_rules","imageremote","containerImage_options","showInputCon","cp_sumbit","staticRenderFns","mounted","Date","getnodeinfo","getPodList","checkcmpimage","rule","console","log","Error","required","message","trigger","validator","baseurl","execurl","$store","nodeip","serverip","formInline","edgeserver_options","pod_options","edgeserver","pod","temparr1","temparr2","temparr3","methods","timestamp","format","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formName","$refs","validate","valid","push","JSON","parse","stringify","tag","splice","indexOf","$axios","get","then","res","items","i","volumes","pvPath","catch","err","idx","method","url","podNamespace","podNodeName","headers","$notify","success","title","position","error","podInfo","pvcInfo","resetFields","rdata","resop","tmp","post","virtualMachineIp","userName","userPassword","data_resolver","imageName","imageTag","sdata","rows","split","cols","imageId","imageSize","content","getVMList","nodeIp","delete","conid","exitStatus","$message","type","get_vm_pod","errorOutput","get_vm_img","$prompt","confirmButtonText","cancelButtonText","inputPlaceholder","inputValue","imgdata","output","pop","data_resolver_pod","data_resolver_image","created","names","imageid","size","VMname","commands","suzhuchange","opencommand","ip","concat","openCreateVM","response","msg","duration","$confirm","watch","nv","ov","component"],"sourceRoot":""}