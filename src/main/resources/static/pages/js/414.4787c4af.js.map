{"version":3,"file":"js/414.4787c4af.js","mappings":"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","sources":["webpack://kfront/./src/views/TerminalWorldMap.vue","webpack://kfront/src/views/TerminalWorldMap.vue","webpack://kfront/./src/views/TerminalWorldMap.vue?3878","webpack://kfront/./src/views/TerminalWorldMap.vue?2d78"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"content\",staticStyle:{\"background-color\":\"#F5F5F5\"}},[_c('div',{staticStyle:{\"width\":\"1920px\",\"height\":\"1200px\"},attrs:{\"id\":\"myEchart\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"content\" style=\"background-color: \t#F5F5F5\">\r\n      <div id=\"myEchart\" style=\"width:1920px; height:1200px\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  // import $ from \"jquery\";/* 引入JQUERY，此处不赘述，用于调用$.get函数。 */\r\n  var echarts = require(\"echarts\");/* 引入echarts模块，此处不赘述 */\r\n  import geoJson from '../assets/world.json?v=1'\r\n  export default {\r\n    data() {\r\n      return {\r\n        myChart: undefined,/* 定义变量 */\r\n        baseurl: \"http://39.98.124.97:8080\",\r\n        nodeList: [],\r\n        scatter: []\r\n      };\r\n    },\r\n    mounted() {\r\n      // location.reload()\r\n      this.getNodes();\r\n    },\r\n    methods: {\r\n      drawChina() {\r\n        /*      $.get('../assets/world.json', function (geoJson) {/!* 请求世界地图的本地json数据 *!/*/\r\n        let fixPlaces = ['格陵兰', 'Greenland'];\r\n        // 欧洲视图 转为 中欧视图（中国在左，欧洲在右）\r\n        let features = geoJson.features;\r\n        for (let i = 0, length = features.length; i < length; ++i) {\r\n          let feature = features[i];\r\n          let geometry = feature.geometry;\r\n          let coordinates = geometry.coordinates;\r\n          if (fixPlaces.includes(feature.properties.name)) {\r\n            continue;\r\n          }\r\n          /*  if (feature.properties.cp) {\r\n            feature.properties.cp[0] = feature.properties.cp[0] >= -30 ? feature.properties.cp[0] - 180 : feature.properties.cp[0] + 180;\r\n          }*/\r\n          /*   if (feature.properties.center) {\r\n            feature.properties.center[0] = feature.properties.center[0] >= -30 ? feature.properties.center[0] - 180 : feature.properties.center[0] + 180;\r\n          }*/\r\n          for (let j = 0, length = coordinates.length; j < length; ++j) {\r\n            let coordinate = coordinates[j];\r\n            for (let k = 0, length = coordinate.length; k < length; ++k) {\r\n              if (coordinate[k].length > 2) {\r\n                for (let m = 0, length = coordinate[k].length; m < length; ++m) {\r\n                  coordinate[k][m][0] = coordinate[k][m][0] >= -30 ? coordinate[k][m][0] - 180 : coordinate[k][m][0] + 180;\r\n                  coordinate[k][m][0] += 50;\r\n                }\r\n              } else {\r\n                coordinate[k][0] = coordinate[k][0] >= -30 ? coordinate[k][0] - 180 : coordinate[k][0] + 180;\r\n                coordinate[k][0] += 50;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.myChart = echarts.init(document.getElementById('myEchart'));/* 初始画布 */\r\n        echarts.registerMap('world', geoJson);/* 注册world地图 */\r\n        this.myChart.setOption({/* 设置myChart配置项 */\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{b}'\r\n          },\r\n  \r\n          geo: {\r\n            map: 'world',\r\n            roam: true, //是否允许缩放，拖拽\r\n            zoom: 1.2, //初始化大小\r\n            //缩放大小限制\r\n            scaleLimit: {\r\n              min: 1, //最小\r\n              max: 2, //最大\r\n            },\r\n            //设置中心点\r\n            center: [10.97, 20.71],\r\n            //省份地图添加背景\r\n            // regions: this.regions,\r\n            itemStyle: {\r\n              areaColor: '#3a535e',\r\n              color: 'red',\r\n              borderColor: '#36e7ee',\r\n              borderWidth: 1.5,\r\n            },\r\n            //高亮状态\r\n            emphasis: {\r\n              itemStyle: {\r\n                areaColor: '#1af9e5',\r\n                color: '#fff'\r\n              },\r\n            },\r\n          },\r\n  \r\n          series: {\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            data: this.scatter,\r\n            showEffectOn: 'render',\r\n            rippleEffect: {\r\n              //涟漪特效相关配置\r\n              brushType: 'stroke', //波纹的绘制方式，可选 'stroke' 和 'fill'\r\n            },\r\n            hoverAnimation: true, //是否开启鼠标 hover 的提示动画效果\r\n            label: {\r\n              //图形上的文本标签，可用于说明图形的一些数据信息，比如值，名称等，\r\n              normal: {\r\n                formatter: '{b}',\r\n                position: 'right',\r\n                show: true,\r\n                fontSize: '17px',\r\n                color: '#100f0f',\r\n                fontWeight: 'bold'\r\n              },\r\n            },\r\n            /*  itemStyle: {\r\n              //图形样式，normal 是图形在默认状态下的样式；emphasis 是图形在高亮状态下的样式，比如在鼠标悬浮或者图例联动高亮时\r\n              normal: {\r\n                color: '#ffffff', //散点的颜色\r\n                shadowBlur: 10,\r\n                shadowColor: 20,\r\n                fontSize: '12px',\r\n              },\r\n            },*/\r\n            zlevel: 1,\r\n          },\r\n        }),\r\n            this.myChart.on('click', (params) => {\r\n              if (params.componentType === 'series' && params.seriesType === 'effectScatter') {\r\n                this.$router.push(\"/detail\")\r\n              }\r\n            })\r\n      },\r\n      getNodes() {\r\n        this.$axios\r\n            .get(this.baseurl + \"/log/getNodes\")\r\n            .then((res) => {\r\n              this.nodeList = res.data.content;\r\n              console.log(res.data.content);\r\n              for (let i = 0; i < this.nodeList.length; i++) {\r\n                let t = {};\r\n                let name = \"\";\r\n                name = this.nodeList[i].nodeLocation;\r\n                if (this.nodeList[i].nodeType === '云')\r\n                  name += \"(云节点)\"\r\n                else if (this.nodeList[i].nodeType === '边')\r\n                  name += \"(边节点)\"\r\n                else\r\n                  name += \"(端节点)\"\r\n                t[\"name\"] = name;\r\n                let t1 = [];\r\n  \r\n                if(this.nodeList[i].nodeLon>-30){\r\n                  t1.push(this.nodeList[i].nodeLon-180+50);\r\n                }else\r\n                  t1.push(this.nodeList[i].nodeLon+180+50);\r\n            /*    coordinate[k][0] = coordinate[k][0] >= -30 ? coordinate[k][0] - 180 : coordinate[k][0] + 180;\r\n  \r\n                */\r\n                t1.push(this.nodeList[i].nodeLat);\r\n                t1.push(9);\r\n                t[\"value\"] = t1;\r\n                t[\"symbol\"] = 'diamond'\r\n                t[\"symbolSize\"]= 15\r\n                let t2 = {};\r\n                t2[\"color\"] = this.getNodeColor(this.nodeList[i].nodeType)\r\n                t[\"itemStyle\"] = t2;\r\n                this.scatter.push(t);\r\n              }\r\n                this.drawChina()\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"errors\", err);\r\n            });\r\n      },\r\n      getNodeColor(nodeType) {\r\n        // 根据节点类型返回不同的颜色\r\n        if (nodeType === '云') {\r\n          return '#fd0000'; // 云节点颜色\r\n        } else if (nodeType === '边') {\r\n          return '#2607f1'; // 边节点颜色\r\n        } else {\r\n          return '#cbf806'; // 其他节点颜色\r\n        }\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n  ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TerminalWorldMap.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TerminalWorldMap.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TerminalWorldMap.vue?vue&type=template&id=41271d4b\"\nimport script from \"./TerminalWorldMap.vue?vue&type=script&lang=js\"\nexport * from \"./TerminalWorldMap.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","staticStyle","attrs","echarts","require","data","myChart","undefined","baseurl","nodeList","scatter","mounted","getNodes","methods","drawChina","fixPlaces","features","geoJson","i","length","feature","geometry","coordinates","includes","properties","name","j","coordinate","k","m","init","document","getElementById","registerMap","setOption","tooltip","trigger","formatter","geo","map","roam","zoom","scaleLimit","min","max","center","itemStyle","areaColor","color","borderColor","borderWidth","emphasis","series","type","coordinateSystem","showEffectOn","rippleEffect","brushType","hoverAnimation","label","normal","position","show","fontSize","fontWeight","zlevel","on","params","componentType","seriesType","$router","push","$axios","get","then","res","content","console","log","t","nodeLocation","nodeType","t1","nodeLon","nodeLat","t2","getNodeColor","catch","err","component"],"sourceRoot":""}