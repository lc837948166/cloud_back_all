{"version":3,"file":"js/727.3516897d.js","mappings":"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","sources":["webpack://kfront/./src/views/VMList.vue","webpack://kfront/src/views/VMList.vue","webpack://kfront/./src/views/VMList.vue?b0d4","webpack://kfront/./src/views/VMList.vue?7e12"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"vmarea\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":10,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"20px\"}},[_vm._v(\" 虚拟机列表 \")])]),_c('el-col',{attrs:{\"span\":3,\"offset\":9}},[_c('el-button',{attrs:{\"icon\":\"el-icon-refresh\",\"size\":\"medium\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.refreshIP}},[_vm._v(\"更新虚拟机ip地址 \")])],1),_c('el-col',{attrs:{\"span\":2,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-circle-plus-outline\",\"size\":\"medium\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.openCreateVM}},[_vm._v(\"新增虚拟机 \")])],1)],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.vmdata\n        .slice((_vm.curpage - 1) * _vm.pagesize, _vm.curpage * _vm.pagesize)\n        .filter(\n          (data) =>\n            !_vm.psearch ||\n            data.name.toLowerCase().includes(_vm.psearch.toLowerCase())\n        ),\"empty-text\":\"暂无虚拟机\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"width\":\"50\"}}),_c('el-table-column',{attrs:{\"width\":\"150\",\"sortable\":\"\",\"label\":\"名称\",\"prop\":\"name\"}}),_c('el-table-column',{attrs:{\"width\":\"100\",\"sortable\":\"\",\"label\":\"状态\",\"prop\":\"state\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state === 'VIR_DOMAIN_PAUSED')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"挂起\")]):(scope.row.state === 'VIR_DOMAIN_RUNNING')?_c('el-tag',[_vm._v(\"运行\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"关机\")])]}}])}),_c('el-table-column',{attrs:{\"width\":\"100\",\"sortable\":\"\",\"label\":\"cpu个数\",\"prop\":\"cpuNum\"}}),_c('el-table-column',{attrs:{\"width\":\"140\",\"sortable\":\"\",\"label\":\"分配内存(GiB)\",\"prop\":\"maxMem\"}}),_c('el-table-column',{attrs:{\"width\":\"180\",\"sortable\":\"\",\"label\":\"IP地址\",\"prop\":\"ipaddr\"}}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button-group',[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.vmstart(scope.row)}}},[_vm._v(\"启动\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.vmsuspend(scope.row)}}},[_vm._v(\"挂起\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.vmresume(scope.row)}}},[_vm._v(\"还原\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.vmreboot(scope.row)}}},[_vm._v(\"重启\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"info\"},on:{\"click\":function($event){return _vm.vmshutdown(scope.row)}}},[_vm._v(\"关闭\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.vmshutdownMust(scope.row)}}},[_vm._v(\"强制关闭\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.vmdelete(scope.row)}}},[_vm._v(\"删除\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.opencommand(scope.row)}}},[_vm._v(\"执行命令\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.openpod(scope.row)}}},[_vm._v(\"容器管理\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.openimage(scope.row)}}},[_vm._v(\"镜像管理\")])],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{staticStyle:{\"width\":\"30%\"},attrs:{\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.psearch),callback:function ($$v) {_vm.psearch=$$v},expression:\"psearch\"}})],1)],2)],1),(_vm.vmdata.length != 0)?_c('div',{staticStyle:{\"margin-top\":\"30px\"}},[_c('el-pagination',{attrs:{\"current-page\":_vm.curpage,\"page-sizes\":[10, 20, 30, 40, 50],\"page-size\":_vm.pagesize,\"layout\":\"sizes, total, prev, pager, next, jumper\",\"total\":_vm.totalvm,\"background\":\"\"},on:{\"update:currentPage\":function($event){_vm.curpage=$event},\"update:current-page\":function($event){_vm.curpage=$event},\"update:pageSize\":function($event){_vm.pagesize=$event},\"update:page-size\":function($event){_vm.pagesize=$event}}})],1):_vm._e(),_c('el-dialog',{attrs:{\"title\":\"创建虚拟机\",\"visible\":_vm.buildvmvisible},on:{\"update:visible\":function($event){_vm.buildvmvisible=$event}}},[_c('el-form',{ref:\"formData\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\",\"model\":_vm.formData,\"status-icon\":true,\"rules\":_vm.vm_rules}},[_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"虚拟机名称\",\"prop\":\"name\"}},[_c('el-input',{staticStyle:{\"width\":\"60%\"},attrs:{\"placeholder\":\"请输入虚拟机名称\"},on:{\"blur\":function($event){return _vm.validName()}},model:{value:(_vm.formData.name),callback:function ($$v) {_vm.$set(_vm.formData, \"name\", $$v)},expression:\"formData.name\"}})],1)],1),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"内存\",\"prop\":\"memory\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择内存大小(GiB)\"},model:{value:(_vm.formData.memory),callback:function ($$v) {_vm.$set(_vm.formData, \"memory\", $$v)},expression:\"formData.memory\"}},_vm._l((_vm.memory_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"CPU个数\",\"prop\":\"cpuNum\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择CPU个数\"},model:{value:(_vm.formData.cpuNum),callback:function ($$v) {_vm.$set(_vm.formData, \"cpuNum\", $$v)},expression:\"formData.cpuNum\"}},_vm._l((_vm.cpunum_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"系统类型\",\"prop\":\"OStype\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择系统类型\"},model:{value:(_vm.formData.OStype),callback:function ($$v) {_vm.$set(_vm.formData, \"OStype\", $$v)},expression:\"formData.OStype\"}},_vm._l((_vm.ostype_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"虚拟机镜像,#仅支持qcow2格式\",\"prop\":\"ImgName\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择虚拟机镜像\"},on:{\"visible-change\":_vm.nsremote},model:{value:(_vm.formData.ImgName),callback:function ($$v) {_vm.$set(_vm.formData, \"ImgName\", $$v)},expression:\"formData.ImgName\"}},_vm._l((_vm.images),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"节点\",\"prop\":\"node\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择创建虚拟机所在宿主机节点\"},model:{value:(_vm.formData.node),callback:function ($$v) {_vm.$set(_vm.formData, \"node\", $$v)},expression:\"formData.node\"}},_vm._l((_vm.node_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form-item',{attrs:{\"label\":\"网络类型\",\"prop\":\"nettype\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择创建虚拟机的网络类型\"},model:{value:(_vm.formData.nettype),callback:function ($$v) {_vm.$set(_vm.formData, \"nettype\", $$v)},expression:\"formData.nettype\"}},_vm._l((_vm.nettype_options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1),_c('el-form-item',{attrs:{\"size\":\"large\"}},[_c('div',{staticClass:\"vmc-sbm-area\"},[_c('el-button',{attrs:{\"round\":\"\"},on:{\"click\":function($event){return _vm.resetForm('formData')}}},[_vm._v(\"清空输入\")]),_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.vmc_sumbit('formData')}}},[_vm._v(\"立即创建\")])],1)])],1)],1),_c('el-dialog',{attrs:{\"title\":\"执行命令\",\"visible\":_vm.commandvisible},on:{\"update:visible\":function($event){_vm.commandvisible=$event}}},[_c('el-descriptions',{attrs:{\"title\":\"虚拟机信息\"}},[_c('el-descriptions-item',{attrs:{\"label\":\"名称\"}},[_vm._v(_vm._s(this.command_tmp_data.name))]),_c('el-descriptions-item',{attrs:{\"label\":\"状态\"}},[(this.command_tmp_data.state === 'VIR_DOMAIN_PAUSED')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"挂起\")]):(this.command_tmp_data.state === 'VIR_DOMAIN_RUNNING')?_c('el-tag',[_vm._v(\"运行\")]):_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"关机\")])],1),_c('el-descriptions-item',{attrs:{\"label\":\"cpu个数\"}},[_vm._v(_vm._s(this.command_tmp_data.cpuNum))]),_c('el-descriptions-item',{attrs:{\"label\":\"分配内存(GiB)\"}},[_vm._v(_vm._s(this.command_tmp_data.maxMem))]),_c('el-descriptions-item',{attrs:{\"label\":\"IP地址\"}},[_vm._v(_vm._s(this.command_tmp_data.ipaddr))])],1),_c('el-form',{ref:\"commandForm\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\",\"model\":_vm.commandForm,\"status-icon\":true,\"rules\":_vm.command_rules}},[_c('el-form-item',{attrs:{\"label\":\"命令\",\"prop\":\"command\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入要执行的命令\",\"type\":\"textarea\",\"rows\":4,\"clearable\":\"\"},model:{value:(_vm.commandForm.command),callback:function ($$v) {_vm.$set(_vm.commandForm, \"command\", $$v)},expression:\"commandForm.command\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"result\"}},[_c('template',{slot:\"label\"},[_vm._v(\" 执行结果 \")]),_c('el-input',{attrs:{\"placeholder\":\"命令执行的结果将会显示在这里\",\"type\":\"textarea\",\"rows\":4,\"clearable\":\"\"},model:{value:(_vm.commandForm.result),callback:function ($$v) {_vm.$set(_vm.commandForm, \"result\", $$v)},expression:\"commandForm.result\"}})],2),_c('el-form-item',{attrs:{\"prop\":\"res_state\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[(this.commandForm.res_state === 'yes')?_c('span',{staticStyle:{\"color\":\"#67c23a\",\"font-size\":\"15px\"}},[_c('i',{staticClass:\"el-icon-success\"}),_vm._v(\"执行成功\")]):_vm._e(),(this.commandForm.res_state === 'no')?_c('span',{staticStyle:{\"color\":\"#f56c6c\",\"font-size\":\"15px\"}},[_c('i',{staticClass:\"el-icon-error\"}),_vm._v(\"执行出错\")]):_vm._e()])]),_c('el-form-item',{attrs:{\"size\":\"large\"}},[_c('div',{staticClass:\"vmc-sbm-area\",staticStyle:{\"text-align\":\"right\",\"margin-top\":\"50px\"}},[_c('el-button',{attrs:{\"round\":\"\"},on:{\"click\":function($event){return _vm.resetForm('commandForm')}}},[_vm._v(\"清空输入\")]),_c('el-button',{attrs:{\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.start_command('commandForm')}}},[_vm._v(\"立即执行\")])],1)])],1)],1),_c('el-drawer',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.fullloading),expression:\"fullloading\"}],attrs:{\"visible\":_vm.imagedrawer,\"direction\":\"ttb\",\"size\":\"90%\"},on:{\"update:visible\":function($event){_vm.imagedrawer=$event},\"open\":_vm.imgdopen}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":5,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.vmimg_tmp_data.name)+\"-容器镜像列表 \")])]),_c('el-col',{attrs:{\"span\":3,\"offset\":0}},[_c('el-select',{staticStyle:{\"width\":\"80%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择要上传的镜像\"},on:{\"visible-change\":_vm.getimg},model:{value:(_vm.iamgename),callback:function ($$v) {_vm.iamgename=$$v},expression:\"iamgename\"}},_vm._l((_vm.img_list),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-col',{attrs:{\"span\":2,\"offset\":0}},[_c('el-button',{attrs:{\"icon\":\"el-icon-circle-plus-outline\",\"size\":\"medium\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":_vm.uploadImgToVm}},[_vm._v(\"上传镜像到虚拟机\")])],1)],1)],1),_c('div',{staticStyle:{\"margin-left\":\"20px\",\"margin-right\":\"20px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.cidata.filter(\n            (data) =>\n              !_vm.pcisearch ||\n              data.repository.toLowerCase().includes(_vm.pcisearch.toLowerCase())\n          ),\"height\":\"700\",\"empty-text\":\"暂无容器镜像\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"width\":\"80\",\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"width\":\"500\",\"sortable\":\"\",\"label\":\"仓库/镜像名\",\"prop\":\"repository\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"标签\",\"prop\":\"tag\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"镜像ID\",\"prop\":\"imageid\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"创建时间\",\"prop\":\"created\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"体积\",\"prop\":\"size\"}}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.startimage(scope.$index, scope.row)}}},[_vm._v(\"启动镜像\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deleteimage(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.pcisearch),callback:function ($$v) {_vm.pcisearch=$$v},expression:\"pcisearch\"}})],1)],2)],1)],1)]),_c('el-drawer',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.fullloading),expression:\"fullloading\"}],attrs:{\"visible\":_vm.poddrawer,\"direction\":\"ttb\",\"size\":\"90%\"},on:{\"update:visible\":function($event){_vm.poddrawer=$event},\"open\":_vm.podopen}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":5,\"offset\":0}},[_c('p',{staticStyle:{\"font-size\":\"25px\",\"font-weight\":\"600\",\"margin-bottom\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.vmpod_tmp_data.name)+\"-容器列表 \")])])],1)],1),_c('div',{staticStyle:{\"margin-left\":\"20px\",\"margin-right\":\"20px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.poddata.filter(\n            (data) =>\n              !_vm.ppodsearch ||\n              data.image.toLowerCase().includes(_vm.ppodsearch.toLowerCase())\n          ),\"height\":\"700\",\"empty-text\":\"暂无容器\",\"header-cell-style\":{ background: '#00b8a9', color: '#fff' }}},[_c('el-table-column',{attrs:{\"width\":\"80\",\"type\":\"index\",\"label\":\"序号\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"容器ID\",\"prop\":\"conid\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"镜像\",\"prop\":\"image\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"命令\",\"prop\":\"command\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"创建时间\",\"prop\":\"created\"}}),_c('el-table-column',{attrs:{\"width\":\"300\",\"sortable\":\"\",\"label\":\"状态\",\"prop\":\"status\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"sortable\":\"\",\"label\":\"名字\",\"prop\":\"names\"}}),_c('el-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button-group',[_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.startpod(scope.$index, scope.row)}}},[_vm._v(\"启动\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.stoppod(scope.$index, scope.row)}}},[_vm._v(\"停止\")]),_c('el-button',{attrs:{\"plain\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deletepod(scope.$index, scope.row)}}},[_vm._v(\"删除\")])],1)],1)]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入名称搜索\"},model:{value:(_vm.ppodsearch),callback:function ($$v) {_vm.ppodsearch=$$v},expression:\"ppodsearch\"}})],1)],2)],1)],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"vmarea\">\r\n    <!-- 头部标题操作 -->\r\n    <el-row :gutter=\"0\">\r\n      <el-col :span=\"10\" :offset=\"0\"\r\n        ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 20px\">\r\n          虚拟机列表\r\n        </p></el-col\r\n      >\r\n      <!-- <el-col :span=\"1\" :offset=\"4\">\r\n        <div style=\"font-size: 16px; line-height: 36px\">宿主机：</div>\r\n      </el-col>\r\n\r\n      <el-col :span=\"3\" :offset=\"0\">\r\n        <el-select\r\n          style=\"width: 80%\"\r\n          v-model=\"formInline.region\"\r\n          placeholder=\"请选择宿主机\"\r\n          @change=\"suzhuchange\"\r\n        >\r\n          <el-option label=\"39.98.124.97\" value=\"39.98.124.97\"></el-option>\r\n          <el-option\r\n            label=\"192.168.194.164\"\r\n            value=\"192.168.194.164\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-col> -->\r\n      <el-col :span=\"3\" :offset=\"9\">\r\n        <el-button\r\n          @click=\"refreshIP\"\r\n          icon=\"el-icon-refresh\"\r\n          size=\"medium\"\r\n          round\r\n          plain\r\n          >更新虚拟机ip地址\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"2\" :offset=\"0\">\r\n        <el-button\r\n          @click=\"openCreateVM\"\r\n          icon=\"el-icon-circle-plus-outline\"\r\n          size=\"medium\"\r\n          round\r\n          plain\r\n          >新增虚拟机\r\n        </el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 表格区域 -->\r\n    <el-table\r\n      :data=\"\r\n        vmdata\r\n          .slice((curpage - 1) * pagesize, curpage * pagesize)\r\n          .filter(\r\n            (data) =>\r\n              !psearch ||\r\n              data.name.toLowerCase().includes(psearch.toLowerCase())\r\n          )\r\n      \"\r\n      style=\"width: 100%\"\r\n      empty-text=\"暂无虚拟机\"\r\n      :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n    >\r\n      <el-table-column type=\"index\" label=\"序号\" width=\"50\"> </el-table-column>\r\n      <el-table-column width=\"150\" sortable label=\"名称\" prop=\"name\">\r\n      </el-table-column>\r\n      <el-table-column width=\"100\" sortable label=\"状态\" prop=\"state\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.state === 'VIR_DOMAIN_PAUSED'\" type=\"warning\"\r\n            >挂起</el-tag\r\n          >\r\n          <el-tag v-else-if=\"scope.row.state === 'VIR_DOMAIN_RUNNING'\"\r\n            >运行</el-tag\r\n          >\r\n          <el-tag v-else type=\"danger\">关机</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column width=\"100\" sortable label=\"cpu个数\" prop=\"cpuNum\">\r\n      </el-table-column>\r\n      <el-table-column width=\"140\" sortable label=\"分配内存(GiB)\" prop=\"maxMem\">\r\n      </el-table-column>\r\n      <el-table-column width=\"180\" sortable label=\"IP地址\" prop=\"ipaddr\">\r\n      </el-table-column>\r\n      <el-table-column align=\"right\">\r\n        <template slot=\"header\">\r\n          <el-input\r\n            style=\"width: 30%\"\r\n            v-model=\"psearch\"\r\n            placeholder=\"输入名称搜索\"\r\n          />\r\n        </template>\r\n        <template slot-scope=\"scope\">\r\n          <el-button-group>\r\n            <el-button plain type=\"success\" @click=\"vmstart(scope.row)\"\r\n              >启动</el-button\r\n            >\r\n            <el-button plain type=\"warning\" @click=\"vmsuspend(scope.row)\"\r\n              >挂起</el-button\r\n            >\r\n            <el-button plain type=\"success\" @click=\"vmresume(scope.row)\"\r\n              >还原</el-button\r\n            >\r\n            <el-button plain type=\"primary\" @click=\"vmreboot(scope.row)\"\r\n              >重启</el-button\r\n            >\r\n            <el-button plain type=\"info\" @click=\"vmshutdown(scope.row)\"\r\n              >关闭</el-button\r\n            >\r\n            <el-button plain type=\"danger\" @click=\"vmshutdownMust(scope.row)\"\r\n              >强制关闭</el-button\r\n            >\r\n            <el-button plain type=\"danger\" @click=\"vmdelete(scope.row)\"\r\n              >删除</el-button\r\n            >\r\n            <el-button plain type=\"warning\" @click=\"opencommand(scope.row)\"\r\n              >执行命令</el-button\r\n            >\r\n            <el-button plain type=\"primary\" @click=\"openpod(scope.row)\"\r\n              >容器管理</el-button\r\n            >\r\n            <el-button plain type=\"primary\" @click=\"openimage(scope.row)\"\r\n              >镜像管理</el-button\r\n            >\r\n          </el-button-group>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 分页栏 -->\r\n    <div v-if=\"vmdata.length != 0\" style=\"margin-top: 30px\">\r\n      <el-pagination\r\n        :current-page.sync=\"curpage\"\r\n        :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n        :page-size.sync=\"pagesize\"\r\n        layout=\"sizes, total, prev, pager, next, jumper\"\r\n        :total=\"totalvm\"\r\n        background\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <el-dialog title=\"创建虚拟机\" :visible.sync=\"buildvmvisible\">\r\n      <el-form\r\n        label-position=\"top\"\r\n        label-width=\"80px\"\r\n        :model=\"formData\"\r\n        :status-icon=\"true\"\r\n        :rules=\"vm_rules\"\r\n        ref=\"formData\"\r\n      >\r\n        <el-row :gutter=\"30\">\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"虚拟机名称\" prop=\"name\">\r\n              <el-input\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.name\"\r\n                placeholder=\"请输入虚拟机名称\"\r\n                @blur=\"validName()\"\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"内存\" prop=\"memory\">\r\n              <el-select\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.memory\"\r\n                clearable\r\n                placeholder=\"请选择内存大小(GiB)\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in memory_options\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"30\">\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"CPU个数\" prop=\"cpuNum\">\r\n              <el-select\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.cpuNum\"\r\n                clearable\r\n                placeholder=\"请选择CPU个数\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in cpunum_options\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"系统类型\" prop=\"OStype\">\r\n              <el-select\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.OStype\"\r\n                clearable\r\n                placeholder=\"请选择系统类型\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in ostype_options\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"30\">\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"虚拟机镜像,#仅支持qcow2格式\" prop=\"ImgName\">\r\n              <el-select\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.ImgName\"\r\n                clearable\r\n                @visible-change=\"nsremote\"\r\n                placeholder=\"请选择虚拟机镜像\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in images\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"节点\" prop=\"node\">\r\n              <el-select\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.node\"\r\n                clearable\r\n                placeholder=\"请选择创建虚拟机所在宿主机节点\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in node_options\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"30\">\r\n          <el-col :span=\"12\" :offset=\"0\">\r\n            <el-form-item label=\"网络类型\" prop=\"nettype\">\r\n              <el-select\r\n                style=\"width: 60%\"\r\n                v-model=\"formData.nettype\"\r\n                clearable\r\n                placeholder=\"请选择创建虚拟机的网络类型\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in nettype_options\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-form-item size=\"large\">\r\n          <div class=\"vmc-sbm-area\">\r\n            <el-button round @click=\"resetForm('formData')\">清空输入</el-button>\r\n            <el-button round type=\"primary\" @click=\"vmc_sumbit('formData')\"\r\n              >立即创建</el-button\r\n            >\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"执行命令\" :visible.sync=\"commandvisible\">\r\n      <el-descriptions title=\"虚拟机信息\">\r\n        <el-descriptions-item label=\"名称\">{{\r\n          this.command_tmp_data.name\r\n        }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"状态\">\r\n          <el-tag\r\n            v-if=\"this.command_tmp_data.state === 'VIR_DOMAIN_PAUSED'\"\r\n            type=\"warning\"\r\n            >挂起</el-tag\r\n          >\r\n          <el-tag\r\n            v-else-if=\"this.command_tmp_data.state === 'VIR_DOMAIN_RUNNING'\"\r\n            >运行</el-tag\r\n          >\r\n          <el-tag v-else type=\"danger\">关机</el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"cpu个数\">{{\r\n          this.command_tmp_data.cpuNum\r\n        }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"分配内存(GiB)\">{{\r\n          this.command_tmp_data.maxMem\r\n        }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"IP地址\">{{\r\n          this.command_tmp_data.ipaddr\r\n        }}</el-descriptions-item>\r\n      </el-descriptions>\r\n      <el-form\r\n        label-position=\"top\"\r\n        label-width=\"80px\"\r\n        :model=\"commandForm\"\r\n        :status-icon=\"true\"\r\n        :rules=\"command_rules\"\r\n        ref=\"commandForm\"\r\n      >\r\n        <el-form-item label=\"命令\" prop=\"command\">\r\n          <el-input\r\n            v-model=\"commandForm.command\"\r\n            placeholder=\"请输入要执行的命令\"\r\n            type=\"textarea\"\r\n            :rows=\"4\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"result\">\r\n          <template slot=\"label\"> 执行结果 </template>\r\n          <el-input\r\n            v-model=\"commandForm.result\"\r\n            placeholder=\"命令执行的结果将会显示在这里\"\r\n            type=\"textarea\"\r\n            :rows=\"4\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"res_state\">\r\n          <div style=\"float: right\">\r\n            <span\r\n              style=\"color: #67c23a; font-size: 15px\"\r\n              v-if=\"this.commandForm.res_state === 'yes'\"\r\n              ><i class=\"el-icon-success\"></i>执行成功</span\r\n            >\r\n            <span\r\n              style=\"color: #f56c6c; font-size: 15px\"\r\n              v-if=\"this.commandForm.res_state === 'no'\"\r\n              ><i class=\"el-icon-error\"></i>执行出错</span\r\n            >\r\n          </div>\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"端服务器\" prop=\"edgeserver\">\r\n          <el-select\r\n            style=\"width: 60%\"\r\n            v-model=\"commandForm.edgeserver\"\r\n            clearable\r\n            placeholder=\"请选择端服务器\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in edgeserver_options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"容器\" prop=\"pod\">\r\n          <el-select\r\n            style=\"width: 60%\"\r\n            v-model=\"commandForm.pod\"\r\n            clearable\r\n            placeholder=\"请选择执行容器\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in pod_options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item> -->\r\n\r\n        <el-form-item size=\"large\">\r\n          <div style=\"text-align: right; margin-top: 50px\" class=\"vmc-sbm-area\">\r\n            <el-button round @click=\"resetForm('commandForm')\"\r\n              >清空输入</el-button\r\n            >\r\n            <el-button\r\n              round\r\n              type=\"primary\"\r\n              @click=\"start_command('commandForm')\"\r\n              >立即执行</el-button\r\n            >\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n    <!-- 虚拟机镜像 -->\r\n    <el-drawer\r\n      :visible.sync=\"imagedrawer\"\r\n      direction=\"ttb\"\r\n      size=\"90%\"\r\n      @open=\"imgdopen\"\r\n      v-loading=\"fullloading\"\r\n    >\r\n      <!-- 头部标题操作 -->\r\n      <div slot=\"title\">\r\n        <el-row :gutter=\"0\">\r\n          <el-col :span=\"5\" :offset=\"0\"\r\n            ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 0px\">\r\n              {{ vmimg_tmp_data.name }}-容器镜像列表\r\n            </p></el-col\r\n          >\r\n          <el-col :span=\"3\" :offset=\"0\">\r\n            <el-select\r\n              style=\"width: 80%\"\r\n              v-model=\"iamgename\"\r\n              clearable\r\n              @visible-change=\"getimg\"\r\n              placeholder=\"请选择要上传的镜像\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in img_list\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-col>\r\n\r\n          <el-col :span=\"2\" :offset=\"0\">\r\n            <el-button\r\n              @click=\"uploadImgToVm\"\r\n              icon=\"el-icon-circle-plus-outline\"\r\n              size=\"medium\"\r\n              round\r\n              plain\r\n              >上传镜像到虚拟机</el-button\r\n            >\r\n          </el-col>\r\n        </el-row>\r\n      </div>\r\n      <div style=\"margin-left: 20px; margin-right: 20px\">\r\n        <!-- 表格区域 -->\r\n        <el-table\r\n          :data=\"\r\n            cidata.filter(\r\n              (data) =>\r\n                !pcisearch ||\r\n                data.repository.toLowerCase().includes(pcisearch.toLowerCase())\r\n            )\r\n          \"\r\n          style=\"width: 100%\"\r\n          height=\"700\"\r\n          empty-text=\"暂无容器镜像\"\r\n          :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n        >\r\n          <!-- <el-table-column type=\"selection\" width=\"55\"> </el-table-column> -->\r\n          <el-table-column width=\"80\" type=\"index\" label=\"序号\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            width=\"500\"\r\n            sortable\r\n            label=\"仓库/镜像名\"\r\n            prop=\"repository\"\r\n          >\r\n          </el-table-column>\r\n          <el-table-column width=\"300\" sortable label=\"标签\" prop=\"tag\">\r\n          </el-table-column>\r\n          <el-table-column width=\"200\" sortable label=\"镜像ID\" prop=\"imageid\">\r\n          </el-table-column>\r\n          <el-table-column width=\"200\" sortable label=\"创建时间\" prop=\"created\">\r\n          </el-table-column>\r\n          <el-table-column width=\"200\" sortable label=\"体积\" prop=\"size\">\r\n          </el-table-column>\r\n          <el-table-column align=\"right\">\r\n            <template slot=\"header\">\r\n              <el-input\r\n                v-model=\"pcisearch\"\r\n                size=\"mini\"\r\n                placeholder=\"输入名称搜索\"\r\n              />\r\n            </template>\r\n            <template slot-scope=\"scope\">\r\n              <div style=\"text-align: center\">\r\n                <el-button\r\n                  plain\r\n                  type=\"success\"\r\n                  @click=\"startimage(scope.$index, scope.row)\"\r\n                  >启动镜像</el-button\r\n                >\r\n                <el-button\r\n                  plain\r\n                  type=\"danger\"\r\n                  @click=\"deleteimage(scope.$index, scope.row)\"\r\n                  >删除</el-button\r\n                >\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-drawer>\r\n    <!-- 虚拟机容器 -->\r\n    <el-drawer\r\n      :visible.sync=\"poddrawer\"\r\n      direction=\"ttb\"\r\n      size=\"90%\"\r\n      @open=\"podopen\"\r\n      v-loading=\"fullloading\"\r\n    >\r\n      <!-- 头部标题操作 -->\r\n      <div slot=\"title\">\r\n        <el-row :gutter=\"0\">\r\n          <el-col :span=\"5\" :offset=\"0\"\r\n            ><p style=\"font-size: 25px; font-weight: 600; margin-bottom: 0px\">\r\n              {{ vmpod_tmp_data.name }}-容器列表\r\n            </p></el-col\r\n          >\r\n        </el-row>\r\n      </div>\r\n      <div style=\"margin-left: 20px; margin-right: 20px\">\r\n        <!-- 表格区域 -->\r\n        <el-table\r\n          :data=\"\r\n            poddata.filter(\r\n              (data) =>\r\n                !ppodsearch ||\r\n                data.image.toLowerCase().includes(ppodsearch.toLowerCase())\r\n            )\r\n          \"\r\n          style=\"width: 100%\"\r\n          height=\"700\"\r\n          empty-text=\"暂无容器\"\r\n          :header-cell-style=\"{ background: '#00b8a9', color: '#fff' }\"\r\n        >\r\n          <!-- <el-table-column type=\"selection\" width=\"55\"> </el-table-column> -->\r\n          <el-table-column width=\"80\" type=\"index\" label=\"序号\">\r\n          </el-table-column>\r\n          <el-table-column width=\"200\" sortable label=\"容器ID\" prop=\"conid\">\r\n          </el-table-column>\r\n          <el-table-column width=\"300\" sortable label=\"镜像\" prop=\"image\">\r\n          </el-table-column>\r\n          <el-table-column width=\"200\" sortable label=\"命令\" prop=\"command\">\r\n          </el-table-column>\r\n          <el-table-column width=\"300\" sortable label=\"创建时间\" prop=\"created\">\r\n          </el-table-column>\r\n          <el-table-column width=\"300\" sortable label=\"状态\" prop=\"status\">\r\n          </el-table-column>\r\n          <!-- <el-table-column width=\"200\" sortable label=\"端口\" prop=\"ports\">\r\n          </el-table-column> -->\r\n          <el-table-column width=\"200\" sortable label=\"名字\" prop=\"names\">\r\n          </el-table-column>\r\n          <el-table-column align=\"right\">\r\n            <template slot=\"header\">\r\n              <el-input\r\n                v-model=\"ppodsearch\"\r\n                size=\"mini\"\r\n                placeholder=\"输入名称搜索\"\r\n              />\r\n            </template>\r\n            <template slot-scope=\"scope\">\r\n              <div style=\"text-align: center\">\r\n                <el-button-group>\r\n                  <el-button\r\n                    plain\r\n                    type=\"success\"\r\n                    @click=\"startpod(scope.$index, scope.row)\"\r\n                    >启动</el-button\r\n                  >\r\n                  <el-button\r\n                    plain\r\n                    type=\"warning\"\r\n                    @click=\"stoppod(scope.$index, scope.row)\"\r\n                    >停止</el-button\r\n                  >\r\n                  <el-button\r\n                    plain\r\n                    type=\"danger\"\r\n                    @click=\"deletepod(scope.$index, scope.row)\"\r\n                    >删除</el-button\r\n                  >\r\n                </el-button-group>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"VMList\",\r\n  mounted() {\r\n    this.getVMList(\"http://\" + this.$store.state.nodeip + \":8080\");\r\n  },\r\n  data() {\r\n    return {\r\n      // 抽屉显示控制\r\n      poddrawer: false,\r\n      imagedrawer: false,\r\n      // 命令执行结果flag\r\n      res_state: \"\",\r\n      baseurl: \"http://\" + this.$store.state.nodeip + \":8080\",\r\n      execurl: \"http://\" + this.$store.state.nodeip + \":8081\",\r\n      // baseurl: \"http://127.0.0.1:8080\",\r\n      vmdata: [],\r\n      psearch: \"\",\r\n      serverip: \"\",\r\n      images: [],\r\n      curpage: 1,\r\n      totalvm: 0,\r\n      pagesize: 10,\r\n      formInline: {},\r\n      buildvmvisible: false,\r\n      commandvisible: false,\r\n      command_tmp_data: {\r\n        name: \"无\",\r\n        state: \"无\",\r\n        cpuNum: \"无\",\r\n        ipaddr: \"无\",\r\n        maxMem: \"无\",\r\n      },\r\n      nettype_options: [\r\n        {\r\n          label: \"bridge\",\r\n          value: \"bridge\",\r\n        },\r\n        {\r\n          label: \"nat\",\r\n          value: \"nat\",\r\n        },\r\n      ],\r\n      node_options: [\r\n        {\r\n          label: \"云节点:39.98.124.97\",\r\n          value: \"192.168.194.178\",\r\n        },\r\n        {\r\n          label: \"端节点1:192.168.194.45\",\r\n          value: \"192.168.194.45\",\r\n        },\r\n        {\r\n          label: \"端节点2:192.168.194.164\",\r\n          value: \"192.168.194.164\",\r\n        },\r\n      ],\r\n      ostype_options: [\r\n        {\r\n          label: \"x86\",\r\n          value: \"X86\",\r\n        },\r\n        {\r\n          label: \"arm\",\r\n          value: \"arm\",\r\n        },\r\n      ],\r\n      cpunum_options: [\r\n        {\r\n          label: \"1 个\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          label: \"2 个\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          label: \"4 个\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          label: \"6 个\",\r\n          value: \"6\",\r\n        },\r\n        {\r\n          label: \"8 个\",\r\n          value: \"8\",\r\n        },\r\n        {\r\n          label: \"10 个\",\r\n          value: \"10\",\r\n        },\r\n      ],\r\n      memory_options: [\r\n        {\r\n          label: \"1 GiB\",\r\n          value: \"1\",\r\n        },\r\n        {\r\n          label: \"2 GiB\",\r\n          value: \"2\",\r\n        },\r\n        {\r\n          label: \"4 GiB\",\r\n          value: \"4\",\r\n        },\r\n        {\r\n          label: \"6 GiB\",\r\n          value: \"6\",\r\n        },\r\n        {\r\n          label: \"8 GiB\",\r\n          value: \"8\",\r\n        },\r\n        {\r\n          label: \"16 GiB\",\r\n          value: \"16\",\r\n        },\r\n        {\r\n          label: \"24 GiB\",\r\n          value: \"24\",\r\n        },\r\n        {\r\n          label: \"32 GiB\",\r\n          value: \"32\",\r\n        },\r\n      ],\r\n      edgeserver_options: [\r\n        {\r\n          label: \"端1\",\r\n          value: \"worker1\",\r\n        },\r\n      ],\r\n      pod_options: [\r\n        {\r\n          label: \"容器1\",\r\n          value: \"pod1\",\r\n        },\r\n      ],\r\n      // 虚拟机信息\r\n      formData: {\r\n        name: \"\",\r\n        memory: \"\",\r\n        cpuNum: \"\",\r\n        OStype: \"\",\r\n        node: \"\",\r\n        nettype: \"\",\r\n      },\r\n      commandForm: {\r\n        command: \"\",\r\n        edgeserver: \"\",\r\n        pod: \"\",\r\n        res_state: \"\",\r\n        result: \"\",\r\n      },\r\n      // 校验规则\r\n      vm_rules: {\r\n        name: [\r\n          { required: true, message: \"请输入虚拟机名称\", trigger: \"blur\" },\r\n        ],\r\n        memory: [\r\n          { required: true, message: \"请选择内存大小\", trigger: \"change\" },\r\n        ],\r\n        node: [\r\n          {\r\n            required: true,\r\n            message: \"请选择创建虚拟机所在的节点\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n        nettype: [\r\n          {\r\n            required: true,\r\n            message: \"请选择创建虚拟机的网络类型\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n        cpuNum: [\r\n          { required: true, message: \"请选择CPU个数\", trigger: \"change\" },\r\n        ],\r\n        OStype: [\r\n          { required: true, message: \"请选择系统类型\", trigger: \"change\" },\r\n        ],\r\n      },\r\n      command_rules: {\r\n        command: [{ required: true, message: \"请输入命令\", trigger: \"blur\" }],\r\n        // edgeserver: [\r\n        //   { required: true, message: \"请选择端服务器\", trigger: \"change\" },\r\n        // ],\r\n        // pod: [\r\n        //   { required: true, message: \"请选择要执行的容器\", trigger: \"change\" },\r\n        // ]\r\n      },\r\n      vmpod_tmp_data: {},\r\n      vmimg_tmp_data: {},\r\n      // 虚拟机镜像\r\n      cidata: [],\r\n      pcisearch: \"\",\r\n      iamgename: \"\",\r\n      img_list: [],\r\n      fullloading: false,\r\n      // 虚拟机容器\r\n      poddata: [],\r\n      ppodsearch: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    // 删除容器\r\n    deletepod(idx, row) {\r\n      this.$axios\r\n        .delete(\r\n          this.baseurl +\r\n            \"/docker/deleteContainer?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&containerId=\" +\r\n            row.conid\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"容器\" + row.conid + \"删除成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_pod();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"删除失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 停止容器\r\n    stoppod(idx, row) {\r\n      this.$axios\r\n        .post(\r\n          this.baseurl +\r\n            \"/docker/stopContainer?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&containerId=\" +\r\n            row.conid\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"容器\" + row.conid + \"停止成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_pod();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"停止失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 启动容器\r\n    startpod(idx, row) {\r\n      this.$axios\r\n        .post(\r\n          this.baseurl +\r\n            \"/docker/startContainer?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&containerId=\" +\r\n            row.conid\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"容器\" + row.conid + \"启动成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_pod();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"启动失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 删除镜像\r\n    deleteimage(idx, row) {\r\n      this.$axios\r\n        .delete(\r\n          this.baseurl +\r\n            \"/docker/deleteImage?vmName=\" +\r\n            this.vmimg_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip +\r\n            \"&imageName=\" +\r\n            row.repository +\r\n            \":\" +\r\n            row.tag\r\n        )\r\n        .then((res) => {\r\n          if (res.data.exitStatus == 0) {\r\n            this.$message({\r\n              message: \"镜像\" + row.repository + \"删除成功\",\r\n              type: \"success\",\r\n            });\r\n            this.get_vm_img();\r\n          } else {\r\n            this.$message({\r\n              message: res.data.errorOutput,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n          this.$message({\r\n            message: \"删除失败，请检查网络设置\",\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    // 启动镜像\r\n    startimage(idx, row) {\r\n      this.$prompt(\"请输入启动命令\", \"启动提示\", {\r\n        confirmButtonText: \"启动\",\r\n        cancelButtonText: \"取消\",\r\n        inputPlaceholder: \"请输入启动命令\",\r\n        inputValue: \"docker run -d \" + row.repository + \":\" + row.tag\r\n      }).then(({ value }) => {\r\n        this.$axios\r\n          .post(\r\n            this.baseurl +\r\n              \"/docker/run?vmName=\" +\r\n              this.vmimg_tmp_data.name +\r\n              \"&endIp=\" +\r\n              this.$store.state.nodeip +\r\n              \"&command=\" + value\r\n          )\r\n          .then((res) => {\r\n            if (res.data.exitStatus == 0) {\r\n              this.$message({\r\n                message: \"镜像\" + row.repository + \"启动成功\",\r\n                type: \"success\",\r\n              });\r\n              this.get_vm_img();\r\n            } else {\r\n              this.$message({\r\n                message: res.data.errorOutput,\r\n                type: \"error\",\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"errors\", err);\r\n            this.$message({\r\n              message: \"启动失败，请检查网络设置\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      });\r\n    },\r\n    // 上传镜像到虚拟机\r\n    uploadImgToVm() {\r\n      if (this.iamgename === \"\") {\r\n        this.$message({\r\n          message: \"请先选择要上传的镜像\",\r\n          type: \"error\",\r\n        });\r\n      } else {\r\n        this.fullloading = true;\r\n        // 防止没有文件夹，先创建\r\n        this.$axios\r\n          .post(\r\n            this.baseurl +\r\n              \"/docker/mkdir?vmName=\" +\r\n              this.vmimg_tmp_data.name +\r\n              \"&endIp=\" +\r\n              this.$store.state.nodeip +\r\n              \"&targetPath=/testimg\"\r\n          )\r\n          .then((res) => {\r\n            if (res.data.exitStatus == 0) {\r\n              // 上传镜像到文件夹\r\n              this.$axios\r\n                .post(\r\n                  this.baseurl +\r\n                    \"/docker/upload?vmName=\" +\r\n                    this.vmimg_tmp_data.name +\r\n                    \"&endIp=\" +\r\n                    this.$store.state.nodeip +\r\n                    \"&fileName=\" +\r\n                    this.iamgename +\r\n                    \"&targetPath=/testimg&sourceIp=39.98.124.97\"\r\n                )\r\n                .then((res) => {\r\n                  if (res.data.exitStatus == 0) {\r\n                    this.$message({\r\n                      message: \"上传成功，等待导入到Docker\",\r\n                      type: \"success\",\r\n                    });\r\n                    // 导入镜像到Docker\r\n                    this.$axios\r\n                      .post(\r\n                        this.baseurl +\r\n                          \"/docker/import?vmName=\" +\r\n                          this.vmimg_tmp_data.name +\r\n                          \"&endIp=\" +\r\n                          this.$store.state.nodeip +\r\n                          \"&targetPath=/testimg/&imageFileName=\" +\r\n                          this.iamgename\r\n                      )\r\n                      .then((res) => {\r\n                        if (res.data.exitStatus == 0) {\r\n                          this.$message({\r\n                            message: \"导入镜像\" + this.iamgename + \"成功\",\r\n                            type: \"success\",\r\n                          });\r\n                          this.fullloading = false;\r\n                          this.get_vm_img();\r\n                        } else {\r\n                          if (\r\n                            res.data.errorOutput !=\r\n                            \"Command execution timed out or the file is still uploading.\"\r\n                          ) {\r\n                            this.$message({\r\n                              message: res.data.errorOutput,\r\n                              type: \"error\",\r\n                            });\r\n                          } else {\r\n                            this.$message({\r\n                              message:\r\n                                \"镜像\" +\r\n                                this.iamgename +\r\n                                \"导入进行中，请稍后查看\",\r\n                              type: \"success\",\r\n                            });\r\n                            this.fullloading = false;\r\n                            this.get_vm_img();\r\n                          }\r\n                        }\r\n                      })\r\n                      .catch((err) => {\r\n                        console.log(\"errors\", err);\r\n                        this.$message({\r\n                          message: \"导入失败，请检查网络设置\",\r\n                          type: \"error\",\r\n                        });\r\n                      });\r\n                  } else {\r\n                    this.$message({\r\n                      message: res.data.errorOutput,\r\n                      type: \"error\",\r\n                    });\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(\"errors\", err);\r\n                  this.$message({\r\n                    message: \"上传失败，请检查网络设置\",\r\n                    type: \"error\",\r\n                  });\r\n                });\r\n            } else {\r\n              this.$message({\r\n                message: \"创建文件夹失败，请检查虚拟机目录\",\r\n                type: \"error\",\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"errors\", err);\r\n            this.$message({\r\n              message: \"创建文件夹失败，请检查网络问题\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    // 获取镜像\r\n    getimg() {\r\n      this.img_list = [];\r\n      this.$axios\r\n        .get(\"http://39.98.124.97:8081/api/ssh/imgListByIP?ip=39.98.124.97\")\r\n        .then((res) => {\r\n          let imgdata = res.data.output.split(\"\\n\");\r\n          imgdata.pop();\r\n          for (let i = 0; i < imgdata.length; i++) {\r\n            this.img_list.push({\r\n              label: imgdata[i],\r\n              value: imgdata[i],\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 镜像抽屉打开\r\n    imgdopen() {\r\n      this.cidata = [];\r\n      this.iamgename = \"\";\r\n      this.img_list = [];\r\n      this.get_vm_img();\r\n    },\r\n    // 镜像抽屉打开\r\n    podopen() {\r\n      this.poddata = [];\r\n      this.get_vm_pod();\r\n    },\r\n    // 获取虚拟机镜像数据\r\n    get_vm_pod() {\r\n      this.$axios\r\n        .get(\r\n          this.baseurl +\r\n            \"/docker/containerList?vmName=\" +\r\n            this.vmpod_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip\r\n        )\r\n        .then((res) => {\r\n          this.poddata = this.data_resolver_pod(JSON.parse(res.data[0]).output);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 获取虚拟机镜像数据\r\n    get_vm_img() {\r\n      this.$axios\r\n        .get(\r\n          this.baseurl +\r\n            \"/docker/imageList?vmName=\" +\r\n            this.vmimg_tmp_data.name +\r\n            \"&endIp=\" +\r\n            this.$store.state.nodeip\r\n        )\r\n        .then((res) => {\r\n          this.cidata = this.data_resolver_image(\r\n            JSON.parse(res.data[0]).output\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 解析pod数据\r\n    data_resolver_pod(sdata) {\r\n      let res = [];\r\n      let rows = sdata.split(\"\\n\");\r\n      let i = 1;\r\n      for (; i < rows.length - 1; i++) {\r\n        let cols = rows[i].split(\"   \");\r\n        let j = 0;\r\n        cols = cols.filter(function (item) {\r\n          return item !== \"\";\r\n        });\r\n        res.push({\r\n          conid: cols[0],\r\n          image: cols[1],\r\n          command: cols[2],\r\n          created: cols[3],\r\n          status: cols[4],\r\n          ports: \"\",\r\n          names: cols[5],\r\n        });\r\n      }\r\n      return res;\r\n    },\r\n    // 解析数据\r\n    data_resolver_image(sdata) {\r\n      let res = [];\r\n      let rows = sdata.split(\"\\n\");\r\n      let i = 1;\r\n      for (; i < rows.length - 1; i++) {\r\n        let cols = rows[i].split(\"   \");\r\n        let j = 0;\r\n        cols = cols.filter(function (item) {\r\n          return item !== \"\";\r\n        });\r\n        res.push({\r\n          repository: cols[0],\r\n          tag: cols[1],\r\n          imageid: cols[2],\r\n          created: cols[3],\r\n          size: cols[4],\r\n        });\r\n      }\r\n      return res;\r\n    },\r\n    // 打开pod\r\n    openpod(row) {\r\n      this.poddrawer = true;\r\n      this.vmpod_tmp_data = row;\r\n    },\r\n    // 打开image\r\n    openimage(row) {\r\n      this.imagedrawer = true;\r\n      this.vmimg_tmp_data = row;\r\n    },\r\n    // 发送执行命令\r\n    start_command(formName) {\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 处理命令\r\n          this.$axios({\r\n            method: \"post\",\r\n            url: this.execurl + \"/api/ssh/execute\",\r\n            data: {\r\n              VMname: this.command_tmp_data.name,\r\n              commands: this.commandForm.command.split(\"\\n\"),\r\n            },\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }).then(\r\n            (res) => {\r\n              console.log(res);\r\n              if (res.data.exitStatus === 0) {\r\n                this.commandForm.res_state = \"yes\";\r\n                this.commandForm.result = res.data.output;\r\n              } else {\r\n                this.commandForm.res_state = \"no\";\r\n                this.commandForm.result = res.data.errorOutput;\r\n              }\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.commandForm.result = \"网络错误，请检查网络\";\r\n              this.commandForm.res_state = \"no\";\r\n            }\r\n          );\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 选择宿主机ip来更改baseurl，根据ip获取虚拟机数据\r\n    suzhuchange(item) {\r\n      this.serverip = item;\r\n      this.baseurl = \"http://\" + this.serverip + \":8080\";\r\n      this.execurl = \"http://\" + this.serverip + \":8081\";\r\n      this.getVMList();\r\n    },\r\n    // 打开执行命令\r\n    opencommand(row) {\r\n      this.commandvisible = true;\r\n      this.command_tmp_data = row;\r\n    },\r\n    // 获取虚拟机列表数据\r\n    getVMList(ip) {\r\n      this.$axios\r\n        .get(ip + \"/getVMList\")\r\n        .then((res) => {\r\n          this.vmdata = res.data;\r\n          this.totalvm = res.data.length;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n      // this.vmdata = [{\r\n      //   name: 'vm1',\r\n      //   state: 'VIR_DOMAIN_RUNNING',\r\n      //   cpuNum: 1,\r\n      //   maxMem: 1,\r\n      //   ipaddr: \"39.98.124.97:8080\"\r\n      // }];\r\n      // this.totalvm = this.vmdata.length;\r\n    },\r\n    openCreateVM() {\r\n      this.buildvmvisible = true;\r\n    },\r\n\r\n    refreshIP() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/VMInfo/updateip/\" + this.$store.state.nodeip)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"更新成功！\");\r\n            this.getVMList();\r\n          } else {\r\n            this.$message.success(\"更新失败！\");\r\n          }\r\n        });\r\n    },\r\n\r\n    validName() {\r\n      if (this.formData.name.includes(\".\")) {\r\n        // 输入值不是正数，可以进行相应的处理，例如清空输入框、显示错误提示等。\r\n        this.$notify.error({\r\n          message: \"虚拟机名字不能包括特殊字符\",\r\n        });\r\n      }\r\n    },\r\n\r\n    //获取/root/images/下的虚拟机镜像\r\n    nsremote() {\r\n      this.$axios\r\n        .get(this.baseurl + \"/Images/imgList\")\r\n        .then((res) => {\r\n          let resop = [];\r\n          for (let i = 0; i < res.data.content.length; i++) {\r\n            let tmp = {};\r\n            tmp[\"label\"] = res.data.content[i].name;\r\n            tmp[\"value\"] = res.data.content[i].name;\r\n            resop.push(tmp);\r\n          }\r\n          this.images = resop;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"errors\", err);\r\n        });\r\n    },\r\n    // 添加虚拟机\r\n    vmc_sumbit(formName) {\r\n      // 校验表单\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 提交表单，创建虚拟机\r\n          // this.$refs.upload.submit();\r\n          this.buildvmvisible = false;\r\n          this.$axios\r\n            .get(\r\n              this.baseurl +\r\n                \"/addVirtual?ImgName=\" +\r\n                this.formData.ImgName +\r\n                \"&name=\" +\r\n                this.formData.name +\r\n                \"&memory=\" +\r\n                this.formData.memory +\r\n                \"&cpuNum=\" +\r\n                this.formData.cpuNum +\r\n                \"&OStype=\" +\r\n                this.formData.OStype +\r\n                \"&nettype=\" +\r\n                this.formData.nettype +\r\n                \"&serverip=\" +\r\n                this.formData.node\r\n            )\r\n            .then((res) => {\r\n              if (res.data.success === false) {\r\n                this.$notify.error({\r\n                  title: \"创建虚拟机失败\",\r\n                  message: res.data.msg,\r\n                  position: \"bottom-right\",\r\n                });\r\n              } else {\r\n                this.$notify.success({\r\n                  title: \"创建虚拟机成功\",\r\n                  message: \"创建虚拟机\" + this.formData.name + \"成功\",\r\n                  position: \"bottom-right\",\r\n                });\r\n              }\r\n              this.getVMList();\r\n            })\r\n            .catch((err) => {\r\n              this.$notify.error({\r\n                title: \"创建失败\",\r\n                message: err,\r\n                position: \"bottom-right\",\r\n                duration: 6000,\r\n              });\r\n            });\r\n        } else {\r\n          console.log(\"表单验证不通过\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n\r\n    vmstart(row) {\r\n      this.$axios\r\n        .get(this.baseurl + \"/initiate/\" + row.name)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"启动成功！\");\r\n            this.getVMList();\r\n          } else {\r\n            this.$message.success(\"启动失败！\");\r\n          }\r\n        });\r\n    },\r\n    vmsuspend(row) {\r\n      this.$axios\r\n        .get(this.baseurl + \"/suspended/\" + row.name)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"挂起成功！\");\r\n            this.getVMList();\r\n          } else {\r\n            this.$message.success(\"挂起失败！\");\r\n          }\r\n        });\r\n    },\r\n    vmresume(row) {\r\n      this.$axios.get(this.baseurl + \"/resume/\" + row.name).then((response) => {\r\n        const data = response.data;\r\n        if (data.success) {\r\n          this.$message.success(\"还原成功！\");\r\n          this.getVMList();\r\n        } else {\r\n          this.$message.success(\"还原失败！\");\r\n        }\r\n      });\r\n    },\r\n    vmreboot(row) {\r\n      this.$axios.get(this.baseurl + \"/reboot/\" + row.name).then((response) => {\r\n        const data = response.data;\r\n        if (data.success) {\r\n          this.$message.success(\"重启中...\");\r\n          this.getVMList();\r\n        } else {\r\n          this.$message.success(\"重启失败！\");\r\n        }\r\n      });\r\n    },\r\n    vmshutdown(row) {\r\n      this.$axios\r\n        .get(this.baseurl + \"/shutdown/\" + row.name)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            this.$message.success(\"关机成功！\");\r\n            this.getVMList();\r\n          } else {\r\n            this.$message.success(\"关机失败！\");\r\n          }\r\n        });\r\n    },\r\n\r\n    vmshutdownMust(row) {\r\n      this.$confirm(`您确定强行关机吗?`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$axios\r\n            .get(this.baseurl + \"/shutdownMust/\" + row.name)\r\n            .then((response) => {\r\n              const data = response.data;\r\n              if (data.success) {\r\n                this.$message.success(\"强行关机成功！\");\r\n                this.getVMList();\r\n              } else {\r\n                this.$message.success(\"强行关机失败！\");\r\n              }\r\n            });\r\n        })\r\n        .catch(() => {\r\n          // 取消操作\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消\",\r\n          });\r\n        });\r\n    },\r\n    vmdelete(row) {\r\n      this.$confirm(`您确定删除该虚拟机吗?`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$axios\r\n            .delete(this.baseurl + \"/delete/\" + row.name)\r\n            .then((response) => {\r\n              const data = response.data;\r\n              if (data.success) {\r\n                this.$message.success(\"删除成功！\");\r\n                this.getVMList();\r\n              } else {\r\n                this.$message.success(\"删除失败！\");\r\n              }\r\n            });\r\n        })\r\n        .catch(() => {\r\n          // 取消操作\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消\",\r\n          });\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    tmp_nodename_w() {\r\n      return this.$store.state.nodename;\r\n    },\r\n  },\r\n  watch: {\r\n    tmp_nodename_w(nv, ov) {\r\n      this.vmdata = [];\r\n      this.totalvm = this.vmdata.length;\r\n      this.getVMList(\"http://\" + this.$store.state.nodeip + \":8080\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.vmarea {\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n}\r\n\r\n/*带背景的分页按钮背景色begin*/\r\n.el-pagination.is-background .el-pager li:not(.disabled).active {\r\n  background-color: #08c0b9;\r\n  color: #fff;\r\n}\r\n.el-pagination.is-background .el-pager li.active {\r\n  color: #fff;\r\n  cursor: default;\r\n}\r\n.el-pagination.is-background .el-pager li:hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination.is-background .el-pager li:not(.disabled):hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination.is-background .el-pager li:not(.disabled).active:hover {\r\n  background-color: #08c0b9;\r\n  color: #fff;\r\n}\r\n/*带背景的分页按钮背景色end*/\r\n\r\n/*不带背景的分页按钮背景色begin*/\r\n.el-pager li.active {\r\n  color: #08c0b9;\r\n  cursor: default;\r\n}\r\n.el-pagination .el-pager li:hover {\r\n  color: #08c0b9;\r\n}\r\n.el-pagination .el-pager li:not(.disabled):hover {\r\n  color: #08c0b9;\r\n}\r\n/*不带背景的分页按钮背景色end*/\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VMList.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VMList.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./VMList.vue?vue&type=template&id=0d0a62a2\"\nimport script from \"./VMList.vue?vue&type=script&lang=js\"\nexport * from \"./VMList.vue?vue&type=script&lang=js\"\nimport style0 from \"./VMList.vue?vue&type=style&index=0&id=0d0a62a2&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","staticStyle","_v","on","refreshIP","openCreateVM","vmdata","slice","curpage","pagesize","filter","data","psearch","name","toLowerCase","includes","background","color","scopedSlots","_u","key","fn","scope","row","state","$event","vmstart","vmsuspend","vmresume","vmreboot","vmshutdown","vmshutdownMust","vmdelete","opencommand","openpod","openimage","slot","model","value","callback","$$v","expression","length","totalvm","_e","buildvmvisible","ref","formData","vm_rules","validName","$set","memory","_l","memory_options","item","label","cpuNum","cpunum_options","OStype","ostype_options","nsremote","ImgName","images","node","node_options","nettype","nettype_options","resetForm","vmc_sumbit","commandvisible","_s","command_tmp_data","maxMem","ipaddr","commandForm","command_rules","command","result","res_state","start_command","directives","rawName","fullloading","imagedrawer","imgdopen","vmimg_tmp_data","getimg","iamgename","img_list","uploadImgToVm","cidata","pcisearch","repository","startimage","$index","deleteimage","poddrawer","podopen","vmpod_tmp_data","poddata","ppodsearch","image","startpod","stoppod","deletepod","staticRenderFns","mounted","getVMList","$store","nodeip","baseurl","execurl","serverip","formInline","edgeserver_options","pod_options","edgeserver","pod","required","message","trigger","methods","idx","$axios","delete","conid","then","res","exitStatus","$message","type","get_vm_pod","errorOutput","catch","err","console","log","post","tag","get_vm_img","$prompt","confirmButtonText","cancelButtonText","inputPlaceholder","inputValue","get","imgdata","output","split","pop","i","push","data_resolver_pod","JSON","parse","data_resolver_image","sdata","rows","cols","created","status","ports","names","imageid","size","formName","$refs","validate","valid","method","url","VMname","commands","headers","suzhuchange","ip","response","success","$notify","error","resop","content","tmp","title","msg","position","duration","resetFields","$confirm","computed","tmp_nodename_w","nodename","watch","nv","ov","component"],"sourceRoot":""}