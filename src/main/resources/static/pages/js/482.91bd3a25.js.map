{"version":3,"file":"js/482.91bd3a25.js","mappings":"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","sources":["webpack://kfront/./src/views/resourceScheduler/AlgorithmFile.vue","webpack://kfront/src/views/resourceScheduler/AlgorithmFile.vue","webpack://kfront/./src/views/resourceScheduler/AlgorithmFile.vue?e5f7","webpack://kfront/./src/views/resourceScheduler/AlgorithmFile.vue?9062","webpack://kfront/./src/api/algorithm.js","webpack://kfront/./src/utils/index.js","webpack://kfront/./src/utils/request.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"padding\":\"12px\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.showUploadDrawer}},[_vm._v(\"上传算法\")]),(_vm.currentAlgorithmValue)?_c('div',{staticStyle:{\"padding\":\"12px\",\"display\":\"flex\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\" 加载算法信息：当前算法是\"+_vm._s(_vm.currentAlgorithmValue)+\" \")]),_c('el-popconfirm',{attrs:{\"title\":\"是否确认卸载该算法?\"},on:{\"confirm\":_vm.confirmRemove}},[_c('el-button',{staticStyle:{\"margin-left\":\"16px\"},attrs:{\"slot\":\"reference\",\"loading\":_vm.removeLoading,\"type\":\"danger\",\"plain\":\"\"},slot:\"reference\"},[_vm._v(\"卸载算法\")])],1)],1):_vm._e(),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tableLoading),expression:\"tableLoading\"}],attrs:{\"data\":_vm.algorithmsData}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"算法ID\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"算法名\"}}),_c('el-table-column',{attrs:{\"prop\":\"info\",\"label\":\"算法描述\"}}),_c('el-table-column',{attrs:{\"prop\":\"class_name\",\"label\":\"算法类名\"}}),_c('el-table-column',{attrs:{\"prop\":\"action\",\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"loading\":_vm.reloadLoading,\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":()=> _vm.reload(scope.row)}},[_vm._v(\"加载\")]),_c('el-divider',{attrs:{\"direction\":\"vertical\"}}),_c('el-popconfirm',{attrs:{\"title\":\"是否确认删除?\"},on:{\"confirm\":()=> _vm.confirmDelete(scope.row)}},[_c('el-button',{attrs:{\"slot\":\"reference\",\"loading\":_vm.deleteLoading,\"type\":\"danger\",\"plain\":\"\"},slot:\"reference\"},[_vm._v(\"删除\")])],1),_c('el-divider',{attrs:{\"direction\":\"vertical\"}}),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":()=> _vm.download(scope.row)}},[_vm._v(\"下载\")])]}}])})],1),_c('el-drawer',{attrs:{\"visible\":_vm.visible,\"title\":\"上传算法文件\",\"size\":\"40%\",\"show-close\":false},on:{\"update:visible\":function($event){_vm.visible=$event}}},[_c('el-form',{ref:\"dynamicValidateForm\",staticStyle:{\"padding\":\"10px\"},attrs:{\"model\":_vm.dynamicValidateForm,\"label-width\":\"120px\"}},[_c('el-form-item',{attrs:{\"rules\":{required: true,message: '缺少算法名',},\"label\":\"算法名\",\"prop\":\"filename\"}},[_c('el-input',{model:{value:(_vm.dynamicValidateForm.filename),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm, \"filename\", $$v)},expression:\"dynamicValidateForm.filename\"}})],1),_c('el-form-item',{attrs:{\"rules\":{required: true,message: '缺少算法描述',},\"label\":\"算法描述\",\"prop\":\"info\"}},[_c('el-input',{model:{value:(_vm.dynamicValidateForm.info),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm, \"info\", $$v)},expression:\"dynamicValidateForm.info\"}})],1),_c('el-form-item',{attrs:{\"rules\":{required: true,message: '缺少算法类名',},\"label\":\"算法类名\",\"prop\":\"classname\"}},[_c('el-input',{model:{value:(_vm.dynamicValidateForm.classname),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm, \"classname\", $$v)},expression:\"dynamicValidateForm.classname\"}})],1)],1),_c('el-upload',{staticStyle:{\"width\":\"100%\"},attrs:{\"action\":\"//81.70.164.10:8750/algorithmFile/uploadAlgorithm\",\"before-upload\":_vm.beforeUpload,\"on-error\":_vm.onError,\"on-success\":_vm.onSuccess,\"show-file-list\":false,\"data\":{\n          ..._vm.dynamicValidateForm\n        }}},[_c('el-button',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"primary\"}},[_vm._v(\"选择文件（jar格式）\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"padding: 12px\">\r\n    <el-button @click=\"showUploadDrawer\" type=\"primary\" icon=\"el-icon-plus\">上传算法</el-button>\r\n    <div v-if=\"currentAlgorithmValue\" style=\"padding: 12px; display: flex; align-items: center\">\r\n      <div style=\"font-size: 18px\">\r\n        加载算法信息：当前算法是{{ currentAlgorithmValue }}\r\n      </div>\r\n      <el-popconfirm\r\n          title=\"是否确认卸载该算法?\"\r\n          @confirm=\"confirmRemove\"\r\n      >\r\n        <el-button style=\"margin-left: 16px\" :loading=\"removeLoading\" slot=\"reference\" type=\"danger\" plain>卸载算法</el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n    <el-table\r\n        :data=\"algorithmsData\"\r\n        v-loading=\"tableLoading\"\r\n    >\r\n      <el-table-column\r\n          prop=\"id\"\r\n          label=\"算法ID\"\r\n          width=\"180\"></el-table-column>\r\n      <el-table-column\r\n          prop=\"name\"\r\n          label=\"算法名\"\r\n      ></el-table-column>\r\n      <el-table-column\r\n          prop=\"info\"\r\n          label=\"算法描述\"\r\n      ></el-table-column>\r\n      <el-table-column\r\n          prop=\"class_name\"\r\n          label=\"算法类名\"\r\n      >\r\n      </el-table-column>\r\n      <el-table-column\r\n          prop=\"action\"\r\n          label=\"操作\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button :loading=\"reloadLoading\" @click=\"()=> reload(scope.row)\" type=\"primary\" plain>加载</el-button>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-popconfirm\r\n              title=\"是否确认删除?\"\r\n              @confirm=\"()=> confirmDelete(scope.row)\"\r\n          >\r\n            <el-button :loading=\"deleteLoading\" slot=\"reference\" type=\"danger\" plain>删除</el-button>\r\n          </el-popconfirm>\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n          <el-button @click=\"()=> download(scope.row)\" type=\"primary\" plain>下载</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-drawer\r\n        :visible.sync=\"visible\"\r\n        title=\"上传算法文件\"\r\n        size=\"40%\"\r\n        :show-close=\"false\"\r\n    >\r\n      <el-form\r\n          ref=\"dynamicValidateForm\"\r\n          :model=\"dynamicValidateForm\"\r\n          style=\"padding:10px\"\r\n          label-width=\"120px\"\r\n      >\r\n        <el-form-item\r\n            :rules=\"{required: true,message: '缺少算法名',}\"\r\n            label=\"算法名\" prop=\"filename\">\r\n          <el-input\r\n              v-model=\"dynamicValidateForm.filename\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n            :rules=\"{required: true,message: '缺少算法描述',}\"\r\n            label=\"算法描述\" prop=\"info\">\r\n          <el-input\r\n              v-model=\"dynamicValidateForm.info\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n            :rules=\"{required: true,message: '缺少算法类名',}\"\r\n            label=\"算法类名\" prop=\"classname\">\r\n          <el-input\r\n              v-model=\"dynamicValidateForm.classname\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-upload\r\n          style=\"width: 100%\"\r\n          action=\"//81.70.164.10:8750/algorithmFile/uploadAlgorithm\"\r\n          :before-upload=\"beforeUpload\"\r\n          :on-error=\"onError\"\r\n          :on-success=\"onSuccess\"\r\n          :show-file-list=\"false\"\r\n          :data=\"{\r\n            ...dynamicValidateForm\r\n          }\"\r\n      >\r\n        <el-button style=\"width: 100%\" type=\"primary\">选择文件（jar格式）</el-button>\r\n      </el-upload>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {isSuccess} from \"@/utils\";\r\nimport {currentAlgorithm, deleteAlgorithm, fetchAllAlgorithms, reloadAlgorithm, removeAlgorithm} from \"@/api/algorithm\";\r\n\r\nexport default {\r\n  name: \"AlgorithmFile\",\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      tableLoading: false,\r\n      reloadLoading: false,\r\n      deleteLoading: false,\r\n      removeLoading: false,\r\n      dynamicValidateForm: {\r\n        filename: '',\r\n        info: '',\r\n        classname: ''\r\n      },\r\n      algorithmsData: [],\r\n      currentAlgorithmValue: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchAllAlgorithms()\r\n    this.getCurrentAlgorithm()\r\n  },\r\n  methods: {\r\n    async fetchAllAlgorithms() {\r\n      const result = await fetchAllAlgorithms().catch(e => e);\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.algorithmsData = result.data\r\n    },\r\n    showUploadDrawer() {\r\n      this.visible = true\r\n    },\r\n    onClose() {\r\n      this.visible = false\r\n    },\r\n    beforeUpload(file) {\r\n      return new Promise((resolve, reject) => {\r\n        this.$refs.dynamicValidateForm.validate((valid) => {\r\n          if (!valid) {\r\n            this.$message.error('请先填写表单信息')\r\n            reject()\r\n            return\r\n          }\r\n          console.log(file)\r\n          const isJAR = file.name.endsWith('.jar')\r\n          if (!isJAR) {\r\n            this.$message.error('只能上传jar格式文件!');\r\n            reject()\r\n            return\r\n          }\r\n          resolve()\r\n        })\r\n      })\r\n    },\r\n    onSuccess(file) {\r\n      this.$message.success('文件上传成功')\r\n      this.visible = false\r\n      this.fetchAllAlgorithms()\r\n    },\r\n    onError(err) {\r\n      this.$message.error(err)\r\n    },\r\n    async confirmDelete({id}) {\r\n      this.deleteLoading = true\r\n      const result = await deleteAlgorithm({id}).catch(e => e);\r\n      this.deleteLoading = false\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.$message.success('算法删除成功')\r\n      this.fetchAllAlgorithms()\r\n    },\r\n    async reload({id}) {\r\n      this.reloadLoading = true\r\n      const result = await reloadAlgorithm({id}).catch(e => e);\r\n      this.reloadLoading = false\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.$message.success('算法加载成功')\r\n      this.getCurrentAlgorithm()\r\n    },\r\n    async getCurrentAlgorithm() {\r\n      const result = await currentAlgorithm().catch(e => e)\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.currentAlgorithmValue = result.data?.name\r\n    },\r\n    async confirmRemove() {\r\n      this.removeLoading = true\r\n      const result = await removeAlgorithm().catch(e => e);\r\n      this.removeLoading = false\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.$message.success('算法卸载成功')\r\n      this.getCurrentAlgorithm()\r\n    },\r\n    download() {\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>\r\n<style>\r\n.el-drawer__header {\r\n  font-size: 20px !important;\r\n}\r\n\r\n.el-upload {\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AlgorithmFile.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AlgorithmFile.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AlgorithmFile.vue?vue&type=template&id=52a0f072&scoped=true\"\nimport script from \"./AlgorithmFile.vue?vue&type=script&lang=js\"\nexport * from \"./AlgorithmFile.vue?vue&type=script&lang=js\"\nimport style1 from \"./AlgorithmFile.vue?vue&type=style&index=1&id=52a0f072&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"52a0f072\",\n  null\n  \n)\n\nexport default component.exports","import {get, post} from \"@/utils/request\";\r\n\r\nexport const fetchAllAlgorithms = () => {\r\n    return get({\r\n        url: '/algorithmFile/fetchAllAlgorithms',\r\n        data: {}\r\n    })\r\n}\r\nexport const runAlgorithm = (data) => {\r\n    return post({\r\n        url: '/algorithm/run',\r\n        data\r\n    })\r\n}\r\nexport const removeAlgorithm = () => {\r\n    return post({\r\n        url: '/algorithm/remove',\r\n        data:{}\r\n    })\r\n}\r\nexport const reloadAlgorithm = (data) => {\r\n    return post({\r\n        url: '/algorithm/reload',\r\n        params: data\r\n    })\r\n}\r\n\r\nexport const currentAlgorithm = () => {\r\n    return get({\r\n        url: '/algorithm/current',\r\n        data: {}\r\n    })\r\n}\r\n\r\nexport const deleteAlgorithm = (data) => {\r\n    return post({\r\n        url: '/algorithmFile/deleteAlgorithm',\r\n        params: data\r\n    })\r\n}\r\n","export const isSuccess = (data) => {\r\n    return data.code === 200;\r\n}\r\n","import axios from 'axios'\r\n\r\nconst request = axios.create({\r\n    baseURL: '//81.70.164.10:8750/',\r\n})\r\n\r\n\r\nfunction http(\r\n    {url, data, method, config, params}\r\n) {\r\n    const successHandler = (res) => {\r\n        if (res.data.code === 200)\r\n            return res.data\r\n        return Promise.reject(res.data)\r\n    }\r\n\r\n    const failHandler = (error) => {\r\n        throw new Error(error?.message || 'Error')\r\n    }\r\n\r\n    method = method || 'GET'\r\n\r\n    if (method === 'GET') {\r\n        const params = Object.assign(typeof data === 'function' ? data() : data ?? {}, {})\r\n        return request.get(url, {params, ...config}).then(successHandler, failHandler)\r\n    }\r\n\r\n    if (method === 'POST') {\r\n        if (data) {\r\n            return request.post(url, data, config).then(successHandler, failHandler)\r\n        }\r\n        if (params) {\r\n            return request.post(url, null, {params, ...config}).then(successHandler, failHandler)\r\n        }\r\n    }\r\n}\r\n\r\nexport function get(\r\n    {url, data, method = 'GET'}\r\n) {\r\n    return http({\r\n        url,\r\n        method,\r\n        data,\r\n    })\r\n}\r\n\r\nexport function post(\r\n    {url, data, params, method = 'POST'}\r\n) {\r\n    return http({\r\n        url,\r\n        method,\r\n        params,\r\n        data,\r\n    })\r\n}\r\n"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","on","showUploadDrawer","_v","currentAlgorithmValue","_s","confirmRemove","removeLoading","slot","_e","directives","name","rawName","value","tableLoading","expression","algorithmsData","scopedSlots","_u","key","fn","scope","reloadLoading","click","reload","row","confirm","confirmDelete","deleteLoading","download","visible","$event","ref","dynamicValidateForm","required","message","model","filename","callback","$$v","$set","info","classname","beforeUpload","onError","onSuccess","staticRenderFns","data","mounted","fetchAllAlgorithms","getCurrentAlgorithm","methods","result","catch","e","isSuccess","$message","error","onClose","file","Promise","resolve","reject","$refs","validate","valid","console","log","isJAR","endsWith","success","err","id","deleteAlgorithm","reloadAlgorithm","currentAlgorithm","removeAlgorithm","component","get","url","runAlgorithm","post","params","code","request","axios","create","baseURL","http","method","config","successHandler","res","failHandler","Error","Object","assign","then"],"sourceRoot":""}