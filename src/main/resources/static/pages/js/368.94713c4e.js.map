{"version":3,"file":"js/368.94713c4e.js","mappings":"yJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,CAAC,QAAU,SAAS,CAACF,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,KAAO,gBAAgBC,GAAG,CAAC,MAAQN,EAAIO,UAAU,CAACP,EAAIQ,GAAG,YAAYN,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAWC,GAAG,CAAC,MAAQN,EAAIS,gBAAgB,CAACT,EAAIQ,GAAG,cAAcN,EAAG,MAAM,CAACE,YAAY,CAAC,YAAY,OAAO,QAAU,eAAe,cAAc,SAAS,CAACJ,EAAIQ,GAAG,eAAeN,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,SAASC,MAAM,CAAC,UAAY,IAAIC,GAAG,CAAC,OAASN,EAAIU,eAAeC,MAAM,CAACC,MAAOZ,EAAIa,OAAQC,SAAS,SAAUC,GAAMf,EAAIa,OAAOE,CAAG,EAAEC,WAAW,WAAWhB,EAAIiB,GAAIjB,EAAIkB,iBAAiB,SAASC,GAAM,OAAOjB,EAAG,YAAY,CAACkB,IAAID,EAAKP,MAAMP,MAAM,CAAC,MAAQc,EAAKE,MAAM,MAAQF,EAAKP,QAAQ,IAAG,GAAGV,EAAG,WAAW,CAACoB,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYZ,MAAOZ,EAAIyB,aAAcT,WAAW,iBAAiBX,MAAM,CAAC,KAAOL,EAAI0B,WAAW,CAACxB,EAAG,kBAAkB,CAACG,MAAM,CAAC,KAAO,KAAK,MAAQ,OAAO,MAAQ,SAASH,EAAG,kBAAkB,CAACG,MAAM,CAAC,KAAO,OAAO,MAAQ,UAAUH,EAAG,kBAAkB,CAACG,MAAM,CAAC,KAAO,cAAc,MAAQ,UAAUH,EAAG,kBAAkB,CAACG,MAAM,CAAC,KAAO,oBAAoB,MAAQ,QAAQsB,YAAY3B,EAAI4B,GAAG,CAAC,CAACR,IAAI,UAAUS,GAAG,SAASC,GAAO,OAAO9B,EAAIiB,GAAIa,EAAMC,IAAIC,mBAAmB,SAASpB,EAAMQ,GAAK,OAAOlB,EAAG,MAAM,CAACA,EAAG,OAAO,CAACF,EAAIQ,GAAGR,EAAIiC,GAAGb,GAAK,OAAOlB,EAAG,OAAO,CAACF,EAAIQ,GAAGR,EAAIiC,GAAGrB,OAAW,GAAE,OAAOV,EAAG,kBAAkB,CAACG,MAAM,CAAC,KAAO,SAAS,MAAQ,MAAMsB,YAAY3B,EAAI4B,GAAG,CAAC,CAACR,IAAI,UAAUS,GAAG,SAASC,GAAO,MAAO,CAAC5B,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,cAAcC,GAAG,CAAC,QAAU4B,IAAKlC,EAAImC,cAAcL,EAAMC,OAAO,CAAC7B,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,YAAY,KAAO,SAAS,MAAQ,IAAI+B,KAAK,aAAa,CAACpC,EAAIQ,GAAG,SAAS,GAAG,QAAQ,GAAGN,EAAG,YAAY,CAACG,MAAM,CAAC,QAAUL,EAAIqC,KAAK,MAAQ,OAAO,KAAO,MAAM,cAAa,GAAO/B,GAAG,CAAC,iBAAiB,SAASgC,GAAQtC,EAAIqC,KAAKC,CAAM,IAAI,CAACpC,EAAG,MAAM,CAACE,YAAY,CAAC,SAAW,WAAW,IAAM,OAAO,MAAQ,SAAS,CAACF,EAAG,YAAY,CAACE,YAAY,CAAC,eAAe,OAAOE,GAAG,CAAC,MAAQN,EAAIuC,UAAU,CAACvC,EAAIQ,GAAG,QAAQN,EAAG,YAAY,CAACG,MAAM,CAAC,QAAUL,EAAIwC,cAAc,KAAO,WAAWlC,GAAG,CAAC,MAAQN,EAAIyC,SAAS,CAACzC,EAAIQ,GAAG,SAAS,GAAGN,EAAG,UAAU,CAACwC,IAAI,sBAAsBtC,YAAY,CAAC,QAAU,QAAQC,MAAM,CAAC,MAAQL,EAAI2C,oBAAoB,cAAc,UAAU,CAACzC,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,CAACuC,UAAU,EAAKC,QAAS,UAAW,MAAQ,OAAO,KAAO,SAAS,CAAC3C,EAAG,WAAW,CAACS,MAAM,CAACC,MAAOZ,EAAI2C,oBAAoBpB,KAAMT,SAAS,SAAUC,GAAMf,EAAI8C,KAAK9C,EAAI2C,oBAAqB,OAAQ5B,EAAI,EAAEC,WAAW,+BAA+B,GAAGd,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,CAACuC,UAAU,EAAKC,QAAS,UAAW,MAAQ,OAAO,KAAO,gBAAgB,CAAC3C,EAAG,WAAW,CAACS,MAAM,CAACC,MAAOZ,EAAI2C,oBAAoBI,YAAajC,SAAS,SAAUC,GAAMf,EAAI8C,KAAK9C,EAAI2C,oBAAqB,cAAe5B,EAAI,EAAEC,WAAW,sCAAsC,GAAGd,EAAG,eAAe,CAACG,MAAM,CAAC,KAAO,UAAU,MAAQ,CAACuC,UAAU,EAAKC,QAAS,YAAa,MAAQ,SAAS,CAAC3C,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,QAAQC,MAAM,CAAC,YAAc,aAAaM,MAAM,CAACC,MAAOZ,EAAI2C,oBAAoBK,QAASlC,SAAS,SAAUC,GAAMf,EAAI8C,KAAK9C,EAAI2C,oBAAqB,UAAW5B,EAAI,EAAEC,WAAW,gCAAgChB,EAAIiB,GAAIjB,EAAIkB,iBAAiB,SAASC,GAAM,OAAOjB,EAAG,YAAY,CAACkB,IAAID,EAAKP,MAAMP,MAAM,CAAC,MAAQc,EAAKE,MAAM,MAAQF,EAAKP,QAAQ,IAAG,IAAI,GAAGZ,EAAIiB,GAAIjB,EAAIiD,oBAAoB,SAAS9B,EAAK+B,GAAO,OAAOhD,EAAG,eAAe,CAACkB,IAAI8B,EAAM7C,MAAM,CAAC,MAAQc,EAAKgC,KAAK,KAAO,CAAC,oBAAqBhC,EAAKI,MAAM6B,KAAK,KAAK,MAAQ,CAAC,CAAER,UAAU,EAAMS,UAAWA,CAACC,EAAM1C,IAAQZ,EAAIuD,eAAe3C,EAAOO,EAAKqC,gBAAiBC,QAAS,WAAY,CAA0B,WAAxBtC,EAAKqC,eAA6BtD,EAAG,WAAW,CAACS,MAAM,CAACC,MAAOZ,EAAI2C,oBAAoBX,kBAAkBb,EAAKI,MAAOT,SAAS,SAAUC,GAAMf,EAAI8C,KAAK9C,EAAI2C,oBAAoBX,kBAAmBb,EAAKI,KAAMR,EAAI,EAAEC,WAAW,sDAA+E,QAAxBG,EAAKqC,gBAAyU,UAAxBrC,EAAKqC,gBAA2U,WAAxBrC,EAAKqC,gBAA4U,SAAxBrC,EAAKqC,eAA74BtD,EAAG,kBAAkB,CAACE,YAAY,CAAC,MAAQ,QAAQO,MAAM,CAACC,MAAOZ,EAAI2C,oBAAoBX,kBAAkBb,EAAKI,MAAOT,SAAS,SAAUC,GAAMf,EAAI8C,KAAK9C,EAAI2C,oBAAoBX,kBAAmBb,EAAKI,KAAMR,EAAI,EAAEC,WAAW,sDAAu/B,YAAxBG,EAAKqC,eAA8BtD,EAAG,WAAW,CAACS,MAAM,CAACC,MAAOZ,EAAI2C,oBAAoBX,kBAAkBb,EAAKI,MAAOT,SAAS,SAAUC,GAAMf,EAAI8C,KAAK9C,EAAI2C,oBAAoBX,kBAAmBb,EAAKI,KAAMR,EAAI,EAAEC,WAAW,sDAAsDhB,EAAI0D,MAAM,EAAE,KAAI,IAAI,IAAI,EAC52K,EACIC,EAAkB,G,sBCmKtB,GACApC,KAAA,aACAqC,IAAAA,GACA,OACAlC,SAAA,GACAmC,aAAA,GACAC,SAAA,GACArC,cAAA,EACAe,eAAA,EACAH,MAAA,EACA0B,SAAA,KACAlD,OAAA,GACA8B,oBAAA,CACApB,KAAA,GACAwB,YAAA,GACAC,aAAAgB,EACAhC,kBAAA,IAGA,EACAiC,SAAA,CACA/C,eAAAA,GACA,YAAA2C,aAAAK,KAAA/C,IACA,CACAE,MAAAF,EAAAgD,UAAA5C,KACAX,MAAAO,EAAAgD,UAAAC,MAGA,EACAnB,kBAAAA,GACA,MAAAoB,EAAA,KAAAR,aAAAS,MAAAnD,GAAAA,EAAAgD,UAAAC,KAAA,KAAAzB,oBAAAK,UACA,OAAAqB,GAAAE,YAAA,EACA,GAEAC,MAAA,CACAnC,IAAAA,CAAAzB,GACAA,IACA,KAAA6D,MAAA9B,qBAAA+B,cACA,KAAA/B,oBAAA,CACApB,KAAA,GACAwB,YAAA,GACAC,aAAAgB,EACAhC,kBAAA,IAGA,GAEA2C,OAAAA,GACA,MAAAC,EAAA,KAAAC,OAAAD,OAAA,GACA,KAAAE,kBACAF,EAAAG,cACA,KAAAlE,OAAAmE,OAAAJ,EAAAG,cACA,KAAArE,iBAEA,KAAAuE,gBAEA,EACAC,QAAA,CACA3C,OAAAA,GACA,KAAAF,MAAA,CACA,EACA,mBAAA3B,GACA,SAAAG,OAAA,YAAAoE,iBACA,KAAAxD,cAAA,EACA,MAAA0D,QAAAC,EAAAA,EAAAA,IAAA,KAAAvE,QAAAwE,OAAAC,GAAAA,IAEA,GADA,KAAA7D,cAAA,IACA8D,EAAAA,EAAAA,GAAAJ,GACA,YAAAK,SAAAC,MAAAN,EAAAtC,SAAA,QAEA,KAAAnB,SAAAyD,EAAAvB,IACA,EACA,oBAAAqB,GACA,KAAAxD,cAAA,EACA,MAAA0D,QAAAO,EAAAA,EAAAA,MAAAL,OAAAC,GAAAA,IAEA,GADA,KAAA7D,cAAA,IACA8D,EAAAA,EAAAA,GAAAJ,GACA,YAAAK,SAAAC,MAAAN,EAAAtC,SAAA,QAEA,KAAAnB,SAAAyD,EAAAvB,IACA,EACArD,OAAAA,GACA,KAAA8B,MAAA,EACA,KAAAyC,iBACA,EACArE,aAAAA,GACA,KAAAsD,UAAA,CAEA,EACA,qBAAAe,GACA,KAAArD,cAAA,EACA,MAAA0D,QAAAQ,EAAAA,EAAAA,MAAAN,OAAAC,GAAAA,IAGA,SAFA,KAAAM,kBAAAP,OAAAC,GAAAA,IACA,KAAA7D,cAAA,IACA8D,EAAAA,EAAAA,GAAAJ,GACA,YAAAK,SAAAC,MAAAN,EAAAtC,SAAA,QAEA,KAAAgB,aAAAsB,EAAAvB,MAAAM,KAAA/C,IACAA,EAAAoD,WAAApD,EAAAoD,WAAAL,KAAA2B,IACA,MAAAC,EAAA,KAAAhC,SAAAQ,MAAAwB,GAAAA,EAAA1B,KAAAyB,EAAAE,YACA,UACAF,EACArC,eAAAsC,GAAAvE,KACA,IAEAJ,IAEA,EACA,qBAAAyE,GACA,MAAAT,QAAAa,EAAAA,EAAAA,MAAAX,OAAAC,GAAAA,IACA,KAAAC,EAAAA,EAAAA,GAAAJ,GACA,YAAAK,SAAAC,MAAAN,EAAAtC,SAAA,QAEA,KAAAiB,SAAAqB,EAAAvB,IACA,EACA,mBAAAzB,EAAA,GAAAiC,IACA,MAAAe,QAAAc,EAAAA,EAAAA,IAAA7B,GAAAiB,OAAAC,GAAAA,IACA,KAAAC,EAAAA,EAAAA,GAAAJ,GACA,YAAAK,SAAAC,MAAAN,EAAAtC,SAAA,QAEA,KAAA2C,SAAAU,QAAA,QACA,KAAAjB,gBACA,EACA,oBAAA1B,CAAA3C,EAAAkD,GACA,OAAAlD,EACA,QAAAkD,GACAkB,OAAAmB,UAAAvF,GAIA,UAAAkD,GAAA,WAAAA,GACA,kBAAAlD,EAIA,YAAAkD,GACA,SAAAlD,GAAA,UAAAA,EACAwF,QAAAC,OAAA,sBAGAD,QAAAE,UARAF,QAAAC,OAAA,SALAD,QAAAC,OAAA,SAHAD,QAAAC,OAAA,KAiBA,EACA,YAAA5D,GACA,KAAAD,eAAA,EACA,KAAAiC,MAAA9B,oBAAA4D,UAAA,UACA,IAAAC,EAAA,YAAAhE,eAAA,EACA,wBAAAR,EAAA,QAAAgB,EAAA,KAAAzB,EAAA,YAAAwB,GAAA,KAAAJ,oBACAiB,EAAA,CACArC,OACAwB,cACAC,UACAhB,qBAEAyE,QAAAC,EAAAA,EAAAA,IAAA9C,GAAAyB,OAAAC,GAAAA,IACA,KAAAC,EAAAA,EAAAA,GAAAkB,GAEA,OADA,KAAAjE,eAAA,EACA,KAAAgD,SAAAC,MAAAgB,EAAA5D,SAAA,QAEA,KAAAL,eAAA,EACA,KAAAH,MAAA,EACA,KAAAmD,SAAAU,QAAA,QACA,KAAAjB,gBAAA,GAEA,ICvUkQ,I,UCQ9P0B,GAAY,OACd,EACA5G,EACA4D,GACA,EACA,KACA,WACA,MAIF,EAAegD,EAAiB,O,wTCjBzB,MAAMhB,EAAmBA,KACrBiB,EAAAA,EAAAA,GAAI,CACPC,IAAK,yBACLjD,KAAM,CAAC,IAIFkD,EAAkBlD,IACpBmD,EAAAA,EAAAA,GAAK,CACRF,IAAK,uBACLjD,SAIKoD,EAAkBjC,IACpBgC,EAAAA,EAAAA,GAAK,CACRF,IAAK,uBACLI,OAAQ,CACJlC,kBAMCK,EAAaL,IACf6B,EAAAA,EAAAA,GAAI,CACPC,IAAK,kBACLjD,KAAM,CACFmB,kBAKCW,EAAgBA,KAClBkB,EAAAA,EAAAA,GAAI,CACPC,IAAK,sBACLjD,KAAM,CAAC,IAIF8C,EAAc9C,IAChBmD,EAAAA,EAAAA,GAAK,CACRF,IAAK,mBACLjD,SASKqC,EAAciB,IAChBH,EAAAA,EAAAA,GAAK,CACRF,IAAK,mBACLI,OAAQ,CACJC,aAKClB,EAAmBA,KACrBY,EAAAA,EAAAA,GAAI,CACPC,IAAK,6BACLjD,KAAM,CAAC,IAIFuD,EAAkBvD,IACpBmD,EAAAA,EAAAA,GAAK,CACRF,IAAK,2BACLjD,SAIKwD,EAAkBC,IACpBN,EAAAA,EAAAA,GAAK,CACRF,IAAK,2BACLI,OAAQ,CACJI,kBAKCC,EAAqB1D,IACvBmD,EAAAA,EAAAA,GAAK,CACRF,IAAK,8BACLjD,Q,wDCzFD,MAAM2B,EAAa3B,GACD,MAAdA,EAAK2D,I,8FCChB,MAAMC,EAAUC,EAAAA,EAAMC,OAAO,CACzBC,QAAS,yBAIb,SAASC,GACL,IAACf,EAAG,KAAEjD,EAAI,OAAEiE,EAAM,OAAEC,EAAM,OAAEb,IAE5B,MAAMc,EAAkBC,GACE,MAAlBA,EAAIpE,KAAK2D,KACFS,EAAIpE,KACRwC,QAAQC,OAAO2B,EAAIpE,MAGxBqE,EAAexC,IACjB,MAAM,IAAIyC,MAAMzC,GAAO5C,SAAW,QAAQ,EAK9C,GAFAgF,EAASA,GAAU,MAEJ,QAAXA,EAAkB,CAClB,MAAMZ,EAASkB,OAAOC,OAAuB,oBAATxE,EAAsBA,IAASA,GAAQ,CAAC,EAAG,CAAC,GAChF,OAAO4D,EAAQZ,IAAIC,EAAK,CAACI,YAAWa,IAASO,KAAKN,EAAgBE,EACtE,CAEA,GAAe,SAAXJ,EAAmB,CACnB,GAAIjE,EACA,OAAO4D,EAAQT,KAAKF,EAAKjD,EAAMkE,GAAQO,KAAKN,EAAgBE,GAEhE,GAAIhB,EACA,OAAOO,EAAQT,KAAKF,EAAK,KAAM,CAACI,YAAWa,IAASO,KAAKN,EAAgBE,EAEjF,CACJ,CAEO,SAASrB,GACZ,IAACC,EAAG,KAAEjD,EAAI,OAAEiE,EAAS,QAErB,OAAOD,EAAK,CACRf,MACAgB,SACAjE,QAER,CAEO,SAASmD,GACZ,IAACF,EAAG,KAAEjD,EAAI,OAAEqD,EAAM,OAAEY,EAAS,SAE7B,OAAOD,EAAK,CACRf,MACAgB,SACAZ,SACArD,QAER,C","sources":["webpack://kfront/./src/views/resourceScheduler/TaskManage.vue","webpack://kfront/src/views/resourceScheduler/TaskManage.vue","webpack://kfront/./src/views/resourceScheduler/TaskManage.vue?5dfe","webpack://kfront/./src/views/resourceScheduler/TaskManage.vue?ae78","webpack://kfront/./src/api/task.js","webpack://kfront/./src/utils/index.js","webpack://kfront/./src/utils/request.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"padding\":\"12px\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.addTask}},[_vm._v(\" 新增任务 \")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addTaskByFile}},[_vm._v(\" 文件上传任务 \")]),_c('div',{staticStyle:{\"font-size\":\"16px\",\"display\":\"inline-block\",\"margin-left\":\"12px\"}},[_vm._v(\" 选择任务类型： \")]),_c('el-select',{staticStyle:{\"width\":\"180px\"},attrs:{\"clearable\":\"\"},on:{\"change\":_vm.fetchTaskData},model:{value:(_vm.taskId),callback:function ($$v) {_vm.taskId=$$v},expression:\"taskId\"}},_vm._l((_vm.taskTypeOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tableLoading),expression:\"tableLoading\"}],attrs:{\"data\":_vm.taskData}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"任务ID\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"任务名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"任务描述\"}}),_c('el-table-column',{attrs:{\"prop\":\"attributes_values\",\"label\":\"任务属性\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return _vm._l((scope.row.attributes_values),function(value,key){return _c('div',[_c('span',[_vm._v(_vm._s(key)+\"：\")]),_c('span',[_vm._v(_vm._s(value))])])})}}])}),_c('el-table-column',{attrs:{\"prop\":\"action\",\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-popconfirm',{attrs:{\"title\":\"是否确认删除该任务？\"},on:{\"confirm\":()=> _vm.confirmDelete(scope.row)}},[_c('el-button',{attrs:{\"slot\":\"reference\",\"type\":\"danger\",\"plain\":\"\"},slot:\"reference\"},[_vm._v(\"删除\")])],1)]}}])})],1),_c('el-drawer',{attrs:{\"visible\":_vm.open,\"title\":\"新增任务\",\"size\":\"40%\",\"show-close\":false},on:{\"update:visible\":function($event){_vm.open=$event}}},[_c('div',{staticStyle:{\"position\":\"absolute\",\"top\":\"10px\",\"right\":\"10px\"}},[_c('el-button',{staticStyle:{\"margin-right\":\"8px\"},on:{\"click\":_vm.onClose}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"loading\":_vm.submitLoading,\"type\":\"primary\"},on:{\"click\":_vm.submit}},[_vm._v(\"提交\")])],1),_c('el-form',{ref:\"dynamicValidateForm\",staticStyle:{\"padding\":\"10px\"},attrs:{\"model\":_vm.dynamicValidateForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"rules\":{required: true,message: '缺少任务名称',},\"label\":\"任务名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.dynamicValidateForm.name),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm, \"name\", $$v)},expression:\"dynamicValidateForm.name\"}})],1),_c('el-form-item',{attrs:{\"rules\":{required: true,message: '缺少任务描述',},\"label\":\"任务描述\",\"prop\":\"description\"}},[_c('el-input',{model:{value:(_vm.dynamicValidateForm.description),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm, \"description\", $$v)},expression:\"dynamicValidateForm.description\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"type_id\",\"rules\":{required: true,message: '缺少任务属性类型',},\"label\":\"任务类型\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择任务属性类型\"},model:{value:(_vm.dynamicValidateForm.type_id),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm, \"type_id\", $$v)},expression:\"dynamicValidateForm.type_id\"}},_vm._l((_vm.taskTypeOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._l((_vm.taskTypeAttributes),function(item,index){return _c('el-form-item',{key:index,attrs:{\"label\":item.info,\"prop\":['attributes_values', item.name].join('.'),\"rules\":[{ required: true, validator: (rule, value)=>_vm.checkAttribute(value, item.data_type_name), trigger: 'blur' }]}},[(item.data_type_name === 'string')?_c('el-input',{model:{value:(_vm.dynamicValidateForm.attributes_values[item.name]),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm.attributes_values, item.name, $$v)},expression:\"dynamicValidateForm.attributes_values[item.name]\"}}):(item.data_type_name === 'int')?_c('el-input-number',{staticStyle:{\"width\":\"100%\"},model:{value:(_vm.dynamicValidateForm.attributes_values[item.name]),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm.attributes_values, item.name, $$v)},expression:\"dynamicValidateForm.attributes_values[item.name]\"}}):(item.data_type_name === 'float')?_c('el-input-number',{staticStyle:{\"width\":\"100%\"},model:{value:(_vm.dynamicValidateForm.attributes_values[item.name]),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm.attributes_values, item.name, $$v)},expression:\"dynamicValidateForm.attributes_values[item.name]\"}}):(item.data_type_name === 'double')?_c('el-input-number',{staticStyle:{\"width\":\"100%\"},model:{value:(_vm.dynamicValidateForm.attributes_values[item.name]),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm.attributes_values, item.name, $$v)},expression:\"dynamicValidateForm.attributes_values[item.name]\"}}):(item.data_type_name === 'long')?_c('el-input-number',{staticStyle:{\"width\":\"100%\"},model:{value:(_vm.dynamicValidateForm.attributes_values[item.name]),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm.attributes_values, item.name, $$v)},expression:\"dynamicValidateForm.attributes_values[item.name]\"}}):(item.data_type_name === 'boolean')?_c('el-input',{model:{value:(_vm.dynamicValidateForm.attributes_values[item.name]),callback:function ($$v) {_vm.$set(_vm.dynamicValidateForm.attributes_values, item.name, $$v)},expression:\"dynamicValidateForm.attributes_values[item.name]\"}}):_vm._e()],1)})],2)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"padding: 12px\">\r\n    <el-button @click=\"addTask\" type=\"primary\" icon=\"el-icon-plus\">\r\n      新增任务\r\n    </el-button>\r\n    <el-button @click=\"addTaskByFile\" type=\"primary\">\r\n      文件上传任务\r\n    </el-button>\r\n    <div style=\"font-size: 16px;display: inline-block;margin-left: 12px\">\r\n      选择任务类型：\r\n    </div>\r\n    <el-select\r\n        v-model=\"taskId\"\r\n        style=\"width: 180px\"\r\n        @change=\"fetchTaskData\"\r\n        clearable\r\n    >\r\n      <el-option\r\n          v-for=\"item in taskTypeOptions\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\">\r\n      </el-option>\r\n    </el-select>\r\n    <el-table\r\n        :data=\"taskData\"\r\n        v-loading=\"tableLoading\"\r\n    >\r\n      <el-table-column\r\n          prop=\"id\"\r\n          label=\"任务ID\"\r\n          width=\"180\"></el-table-column>\r\n      <el-table-column\r\n          prop=\"name\"\r\n          label=\"任务名称\"\r\n      ></el-table-column>\r\n      <el-table-column\r\n          prop=\"description\"\r\n          label=\"任务描述\"\r\n      ></el-table-column>\r\n      <el-table-column\r\n          prop=\"attributes_values\"\r\n          label=\"任务属性\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <div v-for=\"(value,key) in scope.row.attributes_values\">\r\n            <span>{{ key }}：</span>\r\n            <span>{{ value }}</span>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n          prop=\"action\"\r\n          label=\"操作\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-popconfirm\r\n              title=\"是否确认删除该任务？\"\r\n              @confirm=\"()=> confirmDelete(scope.row)\"\r\n          >\r\n            <el-button slot=\"reference\" type=\"danger\" plain>删除</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-drawer\r\n        :visible.sync=\"open\"\r\n        title=\"新增任务\"\r\n        size=\"40%\"\r\n        :show-close=\"false\"\r\n    >\r\n      <div style=\"position: absolute;top: 10px;right:10px;\">\r\n        <el-button style=\"margin-right: 8px\" @click=\"onClose\">取消</el-button>\r\n        <el-button :loading=\"submitLoading\" @click=\"submit\" type=\"primary\">提交</el-button>\r\n      </div>\r\n      <el-form\r\n          ref=\"dynamicValidateForm\"\r\n          :model=\"dynamicValidateForm\"\r\n          style=\"padding:10px\"\r\n          label-width=\"100px\"\r\n      >\r\n        <el-form-item\r\n            :rules=\"{required: true,message: '缺少任务名称',}\"\r\n            label=\"任务名称\" prop=\"name\">\r\n          <el-input\r\n              v-model=\"dynamicValidateForm.name\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n            :rules=\"{required: true,message: '缺少任务描述',}\"\r\n            label=\"任务描述\" prop=\"description\">\r\n          <el-input\r\n              v-model=\"dynamicValidateForm.description\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n            prop=\"type_id\"\r\n            :rules=\"{required: true,message: '缺少任务属性类型',}\"\r\n            label=\"任务类型\"\r\n        >\r\n          <el-select\r\n              style=\"width: 100%\"\r\n              v-model=\"dynamicValidateForm.type_id\"\r\n              placeholder=\"请选择任务属性类型\"\r\n          >\r\n            <el-option\r\n                v-for=\"item in taskTypeOptions\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n            v-for=\"(item, index) in taskTypeAttributes\"\r\n            :key=\"index\"\r\n            :label=\"item.info\"\r\n            :prop=\"['attributes_values', item.name].join('.')\"\r\n            :rules=\"[{ required: true, validator: (rule, value)=>checkAttribute(value, item.data_type_name), trigger: 'blur' }]\"\r\n        >\r\n          <el-input\r\n              v-if=\"item.data_type_name === 'string'\"\r\n              v-model=\"dynamicValidateForm.attributes_values[item.name]\"\r\n          />\r\n          <el-input-number\r\n              style=\"width: 100%\"\r\n              v-else-if=\"item.data_type_name === 'int'\"\r\n              v-model=\"dynamicValidateForm.attributes_values[item.name]\"\r\n          />\r\n          <el-input-number\r\n              style=\"width: 100%\"\r\n              v-else-if=\"item.data_type_name === 'float'\"\r\n              v-model=\"dynamicValidateForm.attributes_values[item.name]\"\r\n          />\r\n          <el-input-number\r\n              style=\"width: 100%\"\r\n              v-else-if=\"item.data_type_name === 'double'\"\r\n              v-model=\"dynamicValidateForm.attributes_values[item.name]\"\r\n          />\r\n          <el-input-number\r\n              style=\"width: 100%\"\r\n              v-else-if=\"item.data_type_name === 'long'\"\r\n              v-model=\"dynamicValidateForm.attributes_values[item.name]\"\r\n          />\r\n          <el-input\r\n              v-else-if=\"item.data_type_name === 'boolean'\"\r\n              v-model=\"dynamicValidateForm.attributes_values[item.name]\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  createTask,\r\n  deleteTask,\r\n  fetchAllDataType,\r\n  fetchAllTasks,\r\n  fetchAllTaskType, fetchTask\r\n} from \"@/api/task\";\r\nimport {isSuccess} from \"@/utils\";\r\n\r\nexport default {\r\n  name: \"TaskManage\",\r\n  data() {\r\n    return {\r\n      taskData: [],\r\n      taskTypeData: [],\r\n      dataType: [],\r\n      tableLoading: false,\r\n      submitLoading: false,\r\n      open: false,\r\n      taskFile: null,\r\n      taskId: '',\r\n      dynamicValidateForm: {\r\n        name: '',\r\n        description: '',\r\n        type_id: undefined,\r\n        attributes_values: {},\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    taskTypeOptions() {\r\n      return this.taskTypeData.map(item => {\r\n        return {\r\n          label: item.task_type.name,\r\n          value: item.task_type.id\r\n        }\r\n      })\r\n    },\r\n    taskTypeAttributes() {\r\n      const taskType = this.taskTypeData.find(item => item.task_type.id === this.dynamicValidateForm.type_id)\r\n      return taskType?.attributes || []\r\n    }\r\n  },\r\n  watch: {\r\n    open(value) {\r\n      if (value) {\r\n        this.$refs.dynamicValidateForm?.resetFields()\r\n        this.dynamicValidateForm = {\r\n          name: '',\r\n          description: '',\r\n          type_id: undefined,\r\n          attributes_values: {}\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    const query = this.$route.query || {}\r\n    this.getTaskTypeData();\r\n    if (query.task_type_id) {\r\n      this.taskId = Number(query.task_type_id)\r\n      this.fetchTaskData()\r\n    } else {\r\n      this.getAllTaskData();\r\n    }\r\n  },\r\n  methods: {\r\n    onClose() {\r\n      this.open = false\r\n    },\r\n    async fetchTaskData() {\r\n      if (!this.taskId) return this.getAllTaskData()\r\n      this.tableLoading = true;\r\n      const result = await fetchTask(this.taskId).catch(e => e);\r\n      this.tableLoading = false;\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.taskData = result.data\r\n    },\r\n    async getAllTaskData() {\r\n      this.tableLoading = true;\r\n      const result = await fetchAllTasks().catch(e => e);\r\n      this.tableLoading = false;\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.taskData = result.data\r\n    },\r\n    addTask() {\r\n      this.open = true;\r\n      this.getTaskTypeData()\r\n    },\r\n    addTaskByFile() {\r\n      this.taskFile = true;\r\n      // this.getTaskTypeData()\r\n    },\r\n    async getTaskTypeData() {\r\n      this.tableLoading = true;\r\n      const result = await fetchAllTaskType().catch(e => e);\r\n      await this.getTaskDataType().catch(e => e);\r\n      this.tableLoading = false;\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.taskTypeData = result.data?.map(item => {\r\n        item.attributes = item.attributes.map(attribute => {\r\n          const dataTypeItem = this.dataType.find(dataTypeItem => dataTypeItem.id === attribute.data_type)\r\n          return {\r\n            ...attribute,\r\n            data_type_name: dataTypeItem?.name\r\n          }\r\n        })\r\n        return item\r\n      })\r\n    },\r\n    async getTaskDataType() {\r\n      const result = await fetchAllDataType().catch(e => e);\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.dataType = result.data\r\n    },\r\n    async confirmDelete({id}) {\r\n      const result = await deleteTask(id).catch(e => e);\r\n      if (!isSuccess(result)) {\r\n        return this.$message.error(result.message || '请求失败');\r\n      }\r\n      this.$message.success('删除成功')\r\n      this.getAllTaskData()\r\n    },\r\n    async checkAttribute(value, dataType) {\r\n      if (!value) return Promise.reject('必填');\r\n      if (dataType === 'int') {\r\n        if (!Number.isInteger(value)) {\r\n          return Promise.reject('只能是整数');\r\n        }\r\n      }\r\n      if (dataType === 'float' || dataType === 'double') {\r\n        if (typeof value !== 'number') {\r\n          return Promise.reject('只能是数字');\r\n        }\r\n      }\r\n      if (dataType === 'boolean') {\r\n        if (value !== 'true' && value !== 'false') {\r\n          return Promise.reject('只能是布尔值，true或者false');\r\n        }\r\n      }\r\n      return Promise.resolve();\r\n    },\r\n    async submit() {\r\n      this.submitLoading = true;\r\n      this.$refs.dynamicValidateForm.validate(async (valid) => {\r\n        if (!valid) return this.submitLoading = false;\r\n        const {attributes_values, type_id, name, description} = this.dynamicValidateForm\r\n        const data = {\r\n          name,\r\n          description,\r\n          type_id,\r\n          attributes_values\r\n        }\r\n        const submitResult = await createTask(data).catch(e => e);\r\n        if (!isSuccess(submitResult)) {\r\n          this.submitLoading = false;\r\n          return this.$message.error(submitResult.message || '请求失败');\r\n        }\r\n        this.submitLoading = false;\r\n        this.open = false;\r\n        this.$message.success('新增成功')\r\n        this.getAllTaskData()\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n<style>\r\n.el-drawer__header {\r\n  font-size: 20px !important;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TaskManage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TaskManage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TaskManage.vue?vue&type=template&id=0bba18ce&scoped=true\"\nimport script from \"./TaskManage.vue?vue&type=script&lang=js\"\nexport * from \"./TaskManage.vue?vue&type=script&lang=js\"\nimport style1 from \"./TaskManage.vue?vue&type=style&index=1&id=0bba18ce&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bba18ce\",\n  null\n  \n)\n\nexport default component.exports","import { get, post } from \"@/utils/request\";\r\n\r\nexport const fetchAllTaskType = () => {\r\n    return get({\r\n        url: '/task/fetchAllTaskType',\r\n        data: {}\r\n    })\r\n}\r\n\r\nexport const createTaskType = (data) => {\r\n    return post({\r\n        url: '/task/createTaskType',\r\n        data\r\n    })\r\n}\r\n\r\nexport const deleteTaskType = (task_type_id)=>{\r\n    return post({\r\n        url: '/task/deleteTaskType',\r\n        params: {\r\n            task_type_id\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const fetchTask = (task_type_id)=>{\r\n    return get({\r\n        url: '/task/fetchTask',\r\n        data: {\r\n            task_type_id\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchAllTasks = ()=>{\r\n    return get({\r\n        url: '/task/fetchAllTasks',\r\n        data: {}\r\n    })\r\n}\r\n\r\nexport const createTask = (data) =>{\r\n    return post({\r\n        url: '/task/createTask',\r\n        data\r\n    })\r\n}\r\nexport const createMultiTask = (data) =>{\r\n    return post({\r\n        url: '/task/createMultiTask',\r\n        data\r\n    })\r\n}\r\nexport const deleteTask = (task_id)=>{\r\n    return post({\r\n        url: '/task/deleteTask',\r\n        params: {\r\n            task_id\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchAllDataType = ()=>{\r\n    return get({\r\n        url: '/dataType/fetchAllDataType',\r\n        data: {}\r\n    })\r\n}\r\n\r\nexport const createDataType = (data)=>{\r\n    return post({\r\n        url: '/dataType/createDataType',\r\n        data\r\n    })\r\n}\r\n\r\nexport const deleteDataType = (data_type_id)=>{\r\n    return post({\r\n        url: '/dataType/deleteDataType',\r\n        params: {\r\n            data_type_id\r\n        }\r\n    })\r\n}\r\n\r\nexport const addTaskToResource = (data)=>{\r\n    return post({\r\n        url: '/relation/addTaskToResource',\r\n        data\r\n    })\r\n}\r\n","export const isSuccess = (data) => {\r\n    return data.code === 200;\r\n}\r\n","import axios from 'axios'\r\n\r\nconst request = axios.create({\r\n    baseURL: '//81.70.164.10:8750/',\r\n})\r\n\r\n\r\nfunction http(\r\n    {url, data, method, config, params}\r\n) {\r\n    const successHandler = (res) => {\r\n        if (res.data.code === 200)\r\n            return res.data\r\n        return Promise.reject(res.data)\r\n    }\r\n\r\n    const failHandler = (error) => {\r\n        throw new Error(error?.message || 'Error')\r\n    }\r\n\r\n    method = method || 'GET'\r\n\r\n    if (method === 'GET') {\r\n        const params = Object.assign(typeof data === 'function' ? data() : data ?? {}, {})\r\n        return request.get(url, {params, ...config}).then(successHandler, failHandler)\r\n    }\r\n\r\n    if (method === 'POST') {\r\n        if (data) {\r\n            return request.post(url, data, config).then(successHandler, failHandler)\r\n        }\r\n        if (params) {\r\n            return request.post(url, null, {params, ...config}).then(successHandler, failHandler)\r\n        }\r\n    }\r\n}\r\n\r\nexport function get(\r\n    {url, data, method = 'GET'}\r\n) {\r\n    return http({\r\n        url,\r\n        method,\r\n        data,\r\n    })\r\n}\r\n\r\nexport function post(\r\n    {url, data, params, method = 'POST'}\r\n) {\r\n    return http({\r\n        url,\r\n        method,\r\n        params,\r\n        data,\r\n    })\r\n}\r\n"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","on","addTask","_v","addTaskByFile","fetchTaskData","model","value","taskId","callback","$$v","expression","_l","taskTypeOptions","item","key","label","directives","name","rawName","tableLoading","taskData","scopedSlots","_u","fn","scope","row","attributes_values","_s","confirm","confirmDelete","slot","open","$event","onClose","submitLoading","submit","ref","dynamicValidateForm","required","message","$set","description","type_id","taskTypeAttributes","index","info","join","validator","rule","checkAttribute","data_type_name","trigger","_e","staticRenderFns","data","taskTypeData","dataType","taskFile","undefined","computed","map","task_type","id","taskType","find","attributes","watch","$refs","resetFields","mounted","query","$route","getTaskTypeData","task_type_id","Number","getAllTaskData","methods","result","fetchTask","catch","e","isSuccess","$message","error","fetchAllTasks","fetchAllTaskType","getTaskDataType","attribute","dataTypeItem","data_type","fetchAllDataType","deleteTask","success","isInteger","Promise","reject","resolve","validate","valid","submitResult","createTask","component","get","url","createTaskType","post","deleteTaskType","params","task_id","createDataType","deleteDataType","data_type_id","addTaskToResource","code","request","axios","create","baseURL","http","method","config","successHandler","res","failHandler","Error","Object","assign","then"],"sourceRoot":""}