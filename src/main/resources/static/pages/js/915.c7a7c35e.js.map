{"version":3,"file":"js/915.c7a7c35e.js","mappings":"yJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,UAAU,CAACE,YAAY,aAAa,CAACF,EAAG,QAAQ,CAACG,MAAM,CAAC,IAAM,gBAAgB,CAACL,EAAIM,GAAG,kBAAkBJ,EAAG,YAAY,CAACG,MAAM,CAAC,GAAK,cAAc,YAAc,UAAUE,MAAM,CAACC,MAAOR,EAAIS,aAAcC,SAAS,SAAUC,GAAMX,EAAIS,aAAaE,CAAG,EAAEC,WAAW,iBAAiBZ,EAAIa,GAAIb,EAAIc,OAAO,SAASC,GAAM,OAAOb,EAAG,YAAY,CAACc,IAAID,EAAKE,GAAGZ,MAAM,CAAC,MAAS,GAAEU,EAAKG,UAAUH,EAAKE,KAAK,MAAQF,EAAKE,KAAK,IAAG,GAAGf,EAAG,eAAe,CAACiB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,SAAW,CAACnB,EAAG,MAAM,CAACoB,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQjB,MAAM,CAAC,GAAK,iBAAiB,IAAI,EAChqB,EACIkB,EAAkB,G,sBCuBtB,MAAAC,EAAA,UACAC,EAAA,KACA,MAAAC,EAGAC,WAAAA,GACA,KAAAC,YAAA,IACA,CAEAC,iBAAAA,CAAAC,GACA,MAAAC,EAAA,WAAAC,OAAAC,SAAAF,SAAA,iBACA,SAAAA,IAAAD,EAAAI,QAAAT,IAAAD,GACA,CAEAW,OAAAA,CAAAL,GACA,MAAAM,EAAA,KAAAP,kBAAAC,GAEA,KAAAF,cACA,KAAAA,YAAAS,QACA,KAAAT,YAAA,MAGAI,OAAAM,WACA,KAAAV,YAAA,IAAAU,UAAAF,GAMA,KAAAR,YAAAW,QAAA,KACAT,EAAAU,QAAA,iCAGA,KAAAZ,YAAAa,OAAA,KACAX,EAAAY,WAAA,EAGA,KAAAd,YAAAe,UAAAC,IACA,MAAAC,EAAAD,EAAAC,KAAAC,WACAhB,EAAAiB,OAAAF,EAAA,EAGA,KAAAjB,YAAAoB,QAAA,KACAlB,EAAAmB,SAAA,GAlBAnB,EAAAU,QAAA,0BAoBA,CAEAH,KAAAA,GACA,KAAAa,WACA,KAAAA,SAAAC,UACA,KAAAD,SAAA,MAGA,KAAAtB,cACA,KAAAA,YAAAS,QACA,KAAAT,YAAA,KAEA,CAEAwB,IAAAA,CAAAP,GACA,KAAAjB,aAAAwB,KAAAC,KAAAC,UAAAT,GACA,CAEAU,YAAAA,CAAAzB,GACA,KAAAF,aAAAwB,KAAAC,KAAAC,UAAAxB,GACA,CAEA0B,cAAAA,CAAAX,GACA,KAAAjB,aAAA6B,aAAAnB,UAAAoB,KACA,KAAA9B,YAAAwB,KAAAC,KAAAC,UAAA,2BAAAT,KACAc,QAAAC,MAAA,yDACA,EAGA,OACA1C,KAAA,SACA2B,IAAAA,GACA,OACA/B,MAAA,CACA,CAAAI,KAAA,WAAAD,GAAA,gBACA,CAAAC,KAAA,WAAAD,GAAA,kBACA,CAAAC,KAAA,WAAAD,GAAA,gBACA,CAAAC,KAAA,WAAAD,GAAA,gBACA,CAAAC,KAAA,WAAAD,GAAA,mBACA,CAAAC,KAAA,WAAAD,GAAA,mBACA,CAAAC,KAAA,WAAAD,GAAA,mBACA,CAAAC,KAAA,WAAAD,GAAA,oBAEAiC,SAAA,KACAW,WAAA,IAAAnC,EACAI,QAAA,CACAgC,QAAA,UACA5B,KAAA,eACA6B,KAAA,KACAC,SAAA,OACAC,SAAA,cAEAxD,aAAA,GACAyD,YAAA,EACAC,eAAA,EAEA,EACAC,MAAA,CACA,aAAAC,GACA,KAAAH,WACA,KAAAA,YAAA,EAEA,KAAAI,SAAA,SAAAD,EAAA,kBACAE,kBAAA,KACAC,iBAAA,KACAC,KAAA,YACAC,MAAA,KACA,KAAA5C,QAAAI,KAAAmC,EACA,KAAAR,WAAAxB,QACA,KAAA8B,eAAA,EACA,KAAAjB,UACA,KAAAA,SAAAC,UAEAwB,YAAA,KACA,KAAAC,aAAA,KAAA9C,QAAA,GACA,QACA+C,OAAA,QAIA,GAEAC,OAAAA,GACA,KAAAC,WAAA,KACA,KAAAtE,aAAA,KAAAqB,QAAAI,KACA,KAAA0C,aAAA,KAAA9C,QAAA,GAEA,EACAkD,QAAA,CACAJ,YAAAA,CAAA9C,GACA,KAAAoB,SAAA,IAAA+B,EAAAA,SAAA,CACAC,aAAA,SACAC,YAAA,EACAC,SAAA,GACAC,cAAA,EACAC,KAAA,GACAC,aAAA,EACAC,YAAA,QACAC,WAAA,IACAC,aAAA,EACAC,YAAA,EACAC,MAAA,CACAC,WAAA,SACAC,WAAA,UACAC,OAAA,UAIA,MAAAC,EAAA,IAAAC,EAAAA,SACA,KAAA/C,SAAAgD,UAAAF,GACAA,EAAAG,MAEA,KAAAjD,SAAAH,QAAAF,IACA,KAAAsB,eACA,KAAAN,WAAAL,eAAAX,EACA,IAGA,KAAAK,SAAAkD,KAAAC,SAAAC,eAAA,aACA,KAAApD,SAAAqD,MAAA,iBAEA,KAAA1C,WAAA1B,QAAA,CACAO,UAAAA,KACA,KAAAyB,eAAA,EACA,KAAAN,WAAAN,aAAAzB,EAAA,EAEAiB,OAAAF,IACA,KAAAK,SAAAqD,MAAA1D,EAAA,EAEAI,QAAAA,KACA,KAAAC,SACA,KAAAA,SAAAqD,MAAA,uBAEA5C,QAAAC,MAAA,8CACA,EAEApB,QAAAoB,IACA,KAAAV,SAAAqD,MAAA,SAAA3C,EAAA,SAEA1B,KAAAJ,EAAAI,MAEA,ICnNqP,I,UCQjPsE,GAAY,OACd,EACAzG,EACAwB,GACA,EACA,KACA,WACA,MAIF,EAAeiF,EAAiB,O,qBCnBhC,SAA2CC,EAAMC,GAE/CC,EAAOC,QAAUF,GAOlB,CATD,CASGG,MAAM,IAAM,M,6GCcfH,EAAAT,SAAA,MAGSa,QAAAA,CAASL,GACdxG,KAAK8G,UAAYN,CACnB,CAEOtD,OAAAA,GAAiB,CAEjBgD,GAAAA,GACL,MAAMM,EAAOxG,KAAK+G,oBAClB,IAAKP,IAASxG,KAAK8G,WAAaE,MAAMR,EAAKS,OAASD,MAAMR,EAAKnB,MAC7D,OAIF,MAAMoB,EAAQzG,KAAK8G,UAAkBI,MAGjClH,KAAK8G,UAAUzB,OAASmB,EAAKnB,MAAQrF,KAAK8G,UAAUG,OAAST,EAAKS,OACpER,EAAKU,eAAeC,QACpBpH,KAAK8G,UAAUO,OAAOb,EAAKS,KAAMT,EAAKnB,MAE1C,CAEO0B,iBAAAA,GACL,IAAK/G,KAAK8G,UACR,OAGF,IAAK9G,KAAK8G,UAAUQ,UAAYtH,KAAK8G,UAAUQ,QAAQC,cACrD,OAIF,MAAMf,EAAQxG,KAAK8G,UAAkBI,MAC/BT,EAA0BD,EAAKW,eAAeK,WAEpD,GAA4B,IAAxBf,EAAKgB,IAAIC,KAAKC,OAAwC,IAAzBlB,EAAKgB,IAAIC,KAAKvG,OAC7C,OAGF,MAAMyG,EAAuD,IAAtC5H,KAAK8G,UAAUjF,QAAQ2D,WAC5C,EAAIgB,EAAKqB,SAASC,eAEdC,EAAqBhG,OAAOiG,iBAAiBhI,KAAK8G,UAAUQ,QAAQC,eACpEU,EAAsBC,SAASH,EAAmBI,iBAAiB,WACnEC,EAAqBC,KAAKC,IAAI,EAAGJ,SAASH,EAAmBI,iBAAiB,WAC9EI,EAAexG,OAAOiG,iBAAiBhI,KAAK8G,UAAUQ,SAStDkB,EAAkBP,GAPjBC,SAASK,EAAaJ,iBAAiB,gBACpCD,SAASK,EAAaJ,iBAAiB,oBAO3CM,EAAiBL,GANdF,SAASK,EAAaJ,iBAAiB,kBACxCD,SAASK,EAAaJ,iBAAiB,kBAKiBP,EAKhE,MAJiB,CACfX,KAAMoB,KAAKC,IA/DI,EA+DcD,KAAKK,MAAMD,EAAiBhC,EAAKgB,IAAIC,KAAKC,QACvEtC,KAAMgD,KAAKC,IA/DI,EA+DcD,KAAKK,MAAMF,EAAkB/B,EAAKgB,IAAIC,KAAKvG,SAG5E,E,QD9Ea,I,gGETf,SAA2CqF,EAAMC,GAE/CC,EAAOC,QAAUF,GAOlB,CATD,CASGG,MAAM,IAAM,M,6hBCJf,MAAA2B,EAAAR,EAAA,MAEAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,KACAa,EAAAb,EAAA,MACAS,EAAAT,EAAA,MACAc,EAAAd,EAAA,MAUO,IAAMe,EAAoBrC,EAAAsC,qBAA1B,cAAmCJ,EAAAK,WA4BxCtH,WAAAA,CACmB8E,EACDC,GAEhBwC,QAHiB,KAAAnC,UAAAN,EACgB,KAAAW,eAAAV,EAvB3B,KAAAyC,qBAA+B,EAiB/B,KAAAC,gBAA4B,GAE5B,KAAAC,iBAA2B,GAOjCpJ,KAAKqJ,wBAA0BjD,SAASkD,cAAc,OACtDtJ,KAAKqJ,wBAAwBE,UAAUC,IAAI,uBAE3CxJ,KAAKyJ,cAAgBrD,SAASkD,cAAc,OAC5CtJ,KAAKyJ,cAAcC,aAAa,OAAQ,QACxC1J,KAAKyJ,cAAcF,UAAUC,IAAI,4BACjCxJ,KAAK2J,aAAe,GACpB,IAAK,IAAInD,EAAI,EAAGA,EAAIxG,KAAK8G,UAAUzB,KAAMmB,IACvCxG,KAAK2J,aAAanD,GAAKxG,KAAK4J,+BAC5B5J,KAAKyJ,cAAcI,YAAY7J,KAAK2J,aAAanD,IAiBnD,GAdAxG,KAAK8J,0BAA4BtD,GAAKxG,KAAK+J,qBAAqBvD,EAAG,GACnExG,KAAKgK,6BAA+BxD,GAAKxG,KAAK+J,qBAAqBvD,EAAG,GACtExG,KAAK2J,aAAa,GAAGM,iBAAiB,QAASjK,KAAK8J,2BACpD9J,KAAK2J,aAAa3J,KAAK2J,aAAaO,OAAS,GAAGD,iBAAiB,QAASjK,KAAKgK,8BAE/EhK,KAAKmK,yBACLnK,KAAKqJ,wBAAwBQ,YAAY7J,KAAKyJ,eAE9CzJ,KAAKoK,YAAchE,SAASkD,cAAc,OAC1CtJ,KAAKoK,YAAYb,UAAUC,IAAI,eAC/BxJ,KAAKoK,YAAYV,aAAa,YAAa,aAC3C1J,KAAKqJ,wBAAwBQ,YAAY7J,KAAKoK,aAC9CpK,KAAKqK,qBAAuBrK,KAAKsK,SAAS,IAAI7B,EAAA8B,mBAAmBvK,KAAKwK,YAAYC,KAAKzK,SAElFA,KAAK8G,UAAUQ,QAClB,MAAM,IAAIoD,MAAM,oDAElB1K,KAAK8G,UAAUQ,QAAQqD,sBAAsB,aAAc3K,KAAKqJ,yBAEhErJ,KAAKsK,SAAStK,KAAK8G,UAAU8D,UAASpE,GAAKxG,KAAK6K,cAAcrE,EAAEnB,SAChErF,KAAKsK,SAAStK,KAAK8G,UAAUgE,UAAStE,GAAKxG,KAAK+K,aAAavE,EAAEwE,MAAOxE,EAAEyE,QACxEjL,KAAKsK,SAAStK,KAAK8G,UAAUoE,UAAS,IAAMlL,KAAK+K,kBAEjD/K,KAAKsK,SAAStK,KAAK8G,UAAUqE,YAAW3E,GAAQxG,KAAKoL,YAAY5E,MACjExG,KAAKsK,SAAStK,KAAK8G,UAAUuE,YAAW,IAAMrL,KAAKoL,YAAY,SAC/DpL,KAAKsK,SAAStK,KAAK8G,UAAUwE,WAAU9E,GAAcxG,KAAKuL,WAAW/E,MACrExG,KAAKsK,SAAStK,KAAK8G,UAAU0E,OAAMhF,GAAKxG,KAAKyL,WAAWjF,EAAEzF,QAC1Df,KAAKsK,SAAStK,KAAK8G,UAAU4E,QAAO,IAAM1L,KAAK2L,sBAC/C3L,KAAKsK,SAAStK,KAAKmH,eAAeyE,oBAAmB,IAAM5L,KAAKmK,4BAEhEnK,KAAK6L,kBAAoB,IAAIjD,EAAAkD,iBAAiB/J,QAC9C/B,KAAKsK,SAAStK,KAAK6L,mBACnB7L,KAAK6L,kBAAkBE,aAAY,IAAM/L,KAAKmK,2BAG9CnK,KAAKsK,UAAA,EAASzB,EAAAmD,0BAAyBjK,OAAQ,UAAU,IAAM/B,KAAKmK,4BAEpEnK,KAAK+K,eACL/K,KAAKsK,UAAA,EAAS3B,EAAAsD,eAAa,KACzBjM,KAAKqJ,wBAAwB6C,SAC7BlM,KAAK2J,aAAaO,OAAS,CAAC,IAEhC,CAEQqB,UAAAA,CAAW/E,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAYC,IAC9BzG,KAAKoL,YAAY,IAErB,CAEQA,WAAAA,CAAY5E,GACdxG,KAAKkJ,qBAAuB,KAC1BlJ,KAAKmJ,gBAAgBe,OAAS,EAEZlK,KAAKmJ,gBAAgBgD,UACrB3F,IAClBxG,KAAKoJ,kBAAoB5C,GAG3BxG,KAAKoJ,kBAAoB5C,EAGd,OAATA,IACFxG,KAAKkJ,uBAC6B,KAA9BlJ,KAAKkJ,uBACPlJ,KAAKoK,YAAYgC,aAAe7D,EAAQ8D,gBAKxCpE,EAAAqE,OACEtM,KAAKoK,YAAYgC,aAAepM,KAAKoK,YAAYgC,YAAYlC,OAAS,IAAMlK,KAAKoK,YAAYmC,YAC/F7H,YAAW,KACT1E,KAAKqJ,wBAAwBQ,YAAY7J,KAAKoK,YAAY,GACzD,GAIX,CAEQuB,gBAAAA,GACN3L,KAAKoK,YAAYgC,YAAc,GAC/BpM,KAAKkJ,qBAAuB,EAGxBjB,EAAAqE,OACFtM,KAAKoK,YAAY8B,QAErB,CAEQT,UAAAA,CAAWjF,GACjBxG,KAAK2L,mBAEA,eAAea,KAAKhG,IACvBxG,KAAKmJ,gBAAgBsD,KAAKjG,EAE9B,CAEQuE,YAAAA,CAAavE,EAAgBC,GACnCzG,KAAKqK,qBAAqBqC,QAAQlG,EAAOC,EAAKzG,KAAK8G,UAAUzB,KAC/D,CAEQmF,WAAAA,CAAYhE,EAAeC,GACjC,MAAMsB,EAAkB/H,KAAK8G,UAAU6F,OACjCvE,EAAUL,EAAO6E,MAAM1C,OAAOrH,WACpC,IAAK,IAAI+E,EAAIpB,EAAOoB,GAAKnB,EAAKmB,IAAK,CACjC,MAAMpB,EAAWuB,EAAO8E,4BAA4B9E,EAAO+E,MAAQlF,GAAA,GAC7DnB,GAAYsB,EAAO+E,MAAQlF,EAAI,GAAG/E,WAClC0F,EAAUvI,KAAK2J,aAAa/B,GAC9BW,IACsB,IAApB/B,EAAS0D,OACX3B,EAAQwE,UAAY,IAEpBxE,EAAQ6D,YAAc5F,EAExB+B,EAAQmB,aAAa,gBAAiBjD,GACtC8B,EAAQmB,aAAa,eAAgBtB,G,CAGzCpI,KAAKgN,qBACP,CAEQA,mBAAAA,GAC+B,IAAjChN,KAAKoJ,iBAAiBc,SAG1BlK,KAAKoK,YAAYgC,aAAepM,KAAKoJ,iBACrCpJ,KAAKoJ,iBAAmB,GAC1B,CAEQW,oBAAAA,CAAqBvD,EAAeC,GAC1C,MAAMsB,EAAkBvB,EAAEyG,OACpB7E,EAAwBpI,KAAK2J,aAA0B,IAAblD,EAAoC,EAAIzG,KAAK2J,aAAaO,OAAS,GAKnH,GAFiBnC,EAAgBmF,aAAa,oBACd,IAAbzG,EAAoC,IAAM,GAAGzG,KAAK8G,UAAU6F,OAAOC,MAAM1C,UAE1F,OAKF,GAAI1D,EAAE2G,gBAAkB/E,EACtB,OAIF,IAAIR,EACAW,EAgBJ,GAfiB,IAAb9B,GACFmB,EAAqBG,EACrBQ,EAAwBvI,KAAK2J,aAAayD,MAC1CpN,KAAKyJ,cAAc4D,YAAY9E,KAE/BX,EAAqB5H,KAAK2J,aAAawC,QACvC5D,EAAwBR,EACxB/H,KAAKyJ,cAAc4D,YAAYzF,IAIjCA,EAAmB0F,oBAAoB,QAAStN,KAAK8J,2BACrDvB,EAAsB+E,oBAAoB,QAAStN,KAAKgK,8BAGvC,IAAbvD,EAAmC,CACrC,MAAMD,EAAaxG,KAAK4J,+BACxB5J,KAAK2J,aAAa4D,QAAQ/G,GAC1BxG,KAAKyJ,cAAckB,sBAAsB,aAAcnE,E,KAClD,CACL,MAAMA,EAAaxG,KAAK4J,+BACxB5J,KAAK2J,aAAa8C,KAAKjG,GACvBxG,KAAKyJ,cAAcI,YAAYrD,E,CAIjCxG,KAAK2J,aAAa,GAAGM,iBAAiB,QAASjK,KAAK8J,2BACpD9J,KAAK2J,aAAa3J,KAAK2J,aAAaO,OAAS,GAAGD,iBAAiB,QAASjK,KAAKgK,8BAG/EhK,KAAK8G,UAAU0G,YAAyB,IAAb/G,GAAqC,EAAI,GAGpEzG,KAAK2J,aAA0B,IAAblD,EAAoC,EAAIzG,KAAK2J,aAAaO,OAAS,GAAGuD,QAGxFjH,EAAEkH,iBACFlH,EAAEmH,0BACJ,CAEQ9C,aAAAA,CAAcrE,GAEpBxG,KAAK2J,aAAa3J,KAAK2J,aAAaO,OAAS,GAAGoD,oBAAoB,QAAStN,KAAKgK,8BAGlF,IAAK,IAAIxD,EAAIxG,KAAKyJ,cAAcmE,SAAS1D,OAAQ1D,EAAIxG,KAAK8G,UAAUzB,KAAMmB,IACxExG,KAAK2J,aAAanD,GAAKxG,KAAK4J,+BAC5B5J,KAAKyJ,cAAcI,YAAY7J,KAAK2J,aAAanD,IAGnD,KAAOxG,KAAK2J,aAAaO,OAAS1D,GAChCxG,KAAKyJ,cAAc4D,YAAYrN,KAAK2J,aAAayD,OAInDpN,KAAK2J,aAAa3J,KAAK2J,aAAaO,OAAS,GAAGD,iBAAiB,QAASjK,KAAKgK,8BAE/EhK,KAAKmK,wBACP,CAEQP,4BAAAA,GACN,MAAMpD,EAAUJ,SAASkD,cAAc,OAIvC,OAHA9C,EAAQkD,aAAa,OAAQ,YAC7BlD,EAAQqH,UAAY,EACpB7N,KAAK8N,sBAAsBtH,GACpBA,CACT,CACQ2D,sBAAAA,GACN,GAAKnK,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OAA7C,CAGAnB,KAAKqJ,wBAAwBnI,MAAMyG,MAAQ,GAAG3H,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAOpG,UACpF3H,KAAK2J,aAAaO,SAAWlK,KAAK8G,UAAUzB,MAC9CrF,KAAK6K,cAAc7K,KAAK8G,UAAUzB,MAEpC,IAAK,IAAImB,EAAI,EAAGA,EAAIxG,KAAK8G,UAAUzB,KAAMmB,IACvCxG,KAAK8N,sBAAsB9N,KAAK2J,aAAanD,G,CAEjD,CACQsH,qBAAAA,CAAsBtH,GAC5BA,EAAQtF,MAAMC,OAAS,GAAGnB,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,UACpE,G,uBApRW2H,EAAoBV,EAAA,CA8B5BR,EAAA,EAAAY,EAAAwF,iBA9BQlF,E,eCVb,SAAgBf,EAAuBvB,GACrC,OAAOA,EAAKyH,QAAQ,SAAU,KAChC,CAMA,SAAgB7F,EAAoB5B,EAAcC,GAChD,OAAIA,EACK,SAAcD,EAAO,SAEvBA,CACT,CAyBA,SAAgBoB,EAAMpB,EAAcC,EAA+BmB,EAA2BW,GAE5F/B,EAAO4B,EADP5B,EAAOuB,EAAuBvB,GACGoB,EAAYsG,gBAAgBC,qBAAA,IAAsB5F,EAAe6F,WAAWC,0BAC7GzG,EAAY0G,iBAAiB9H,GAAA,GAC7BC,EAASlG,MAAQ,EACnB,CAOA,SAAgBgI,EAA6B/B,EAAgBC,EAA+BsB,GAG1F,MAAMK,EAAML,EAAcwG,wBACpB3G,EAAOpB,EAAGgI,QAAUpG,EAAIqG,KAAO,GAC/BlG,EAAM/B,EAAGkI,QAAUtG,EAAIuG,IAAM,GAGnClI,EAASvF,MAAMyG,MAAQ,OACvBlB,EAASvF,MAAMC,OAAS,OACxBsF,EAASvF,MAAMuN,KAAO,GAAG7G,MACzBnB,EAASvF,MAAMyN,IAAM,GAAGpG,MACxB9B,EAASvF,MAAM0N,OAAS,OAExBnI,EAASgH,OACX,C,mMAjEAhH,EAAAoI,uBAAA9G,EAQAtB,EAAAqI,oBAAA1G,EAWA3B,EAAAsI,YAAA,SAA4BvI,EAAoBC,GAC1CD,EAAGwI,eACLxI,EAAGwI,cAAcC,QAAQ,aAAcxI,EAAiByI,eAG1D1I,EAAGkH,gBACL,EAKAjH,EAAA0I,iBAAA,SAAiC3I,EAAoBC,EAA+BsB,EAA2BK,GAC7G5B,EAAG4I,kBACC5I,EAAGwI,eAELpH,EADapB,EAAGwI,cAAcK,QAAQ,cAC1B5I,EAAUsB,EAAaK,EAEvC,EAEA3B,EAAA6I,MAAA1H,EAYAnB,EAAA8I,6BAAAhH,EAoBA9B,EAAA+I,kBAAA,SAAkChJ,EAAgBC,EAA+BsB,EAA4BK,EAAqCR,GAChJW,EAA6B/B,EAAIC,EAAUsB,GAEvCH,GACFQ,EAAiBqH,iBAAiBjJ,GAIpCC,EAASlG,MAAQ6H,EAAiB8G,cAClCzI,EAASiJ,QACX,CAAC,E,4FCrFD,MAAAtH,EAAAL,EAAA,MAEAtB,EAAAkJ,mBAAA,MAAAjO,WAAAA,GACU,KAAAkO,OAAmE,IAAIxH,EAAAyH,UACvE,KAAAC,KAAiE,IAAI1H,EAAAyH,SAsB/E,CApBSE,MAAAA,CAAOvJ,EAAYC,EAAYsB,GACpC/H,KAAK8P,KAAKE,IAAIxJ,EAAIC,EAAIsB,EACxB,CAEOkI,MAAAA,CAAOzJ,EAAYC,GACxB,OAAOzG,KAAK8P,KAAKI,IAAI1J,EAAIC,EAC3B,CAEO0J,QAAAA,CAAS3J,EAAYC,EAAYsB,GACtC/H,KAAK4P,OAAOI,IAAIxJ,EAAIC,EAAIsB,EAC1B,CAEOqI,QAAAA,CAAS5J,EAAYC,GAC1B,OAAOzG,KAAK4P,OAAOM,IAAI1J,EAAIC,EAC7B,CAEOW,KAAAA,GACLpH,KAAK4P,OAAOxI,QACZpH,KAAK8P,KAAK1I,OACZ,EAAC,E,gGCjBHX,EAAAuF,yBAAA,SACExF,EACAC,EACAsB,EACAK,GAEA5B,EAAKyD,iBAAiBxD,EAAMsB,EAASK,GACrC,IAAIR,GAAA,EACJ,MAAO,CACL1E,QAASA,KACH0E,IAGJA,GAAA,EACApB,EAAK8G,oBAAoB7G,EAAMsB,EAASK,GAAQ,EAGtD,CAAC,E,+fC3BD,MAAAG,EAAAR,EAAA,MAEAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,KAEAY,EAAAZ,EAAA,MAGO,IAAMa,EAAUnC,EAAA4J,WAAhB,cAAyB5H,EAAAO,WAK9B,eAAAsH,GAAuD,OAAOtQ,KAAKuQ,YAAc,CAgBjF7O,WAAAA,CACkB8E,GAEhByC,QAFiC,KAAAuH,eAAAhK,EAlB3B,KAAAiK,eAAkC,GAKlC,KAAAC,sBAAuC,GAEvC,KAAAC,aAAA,EACA,KAAAC,aAAA,EAEA,KAAAC,aAAuB,EAEd,KAAAC,qBAAuB9Q,KAAKsK,SAAS,IAAIrC,EAAA8I,cAC1C,KAAAC,oBAAsBhR,KAAK8Q,qBAAqBG,MAC/C,KAAAC,qBAAuBlR,KAAKsK,SAAS,IAAIrC,EAAA8I,cAC1C,KAAAI,oBAAsBnR,KAAKkR,qBAAqBD,MAM9DjR,KAAKsK,UAAA,EAAS7B,EAAA2I,2BAA0BpR,KAAK0Q,wBAC7C1Q,KAAKsK,UAAA,EAAS7B,EAAAwD,eAAa,KACzBjM,KAAKqR,qBAAA,CAA2B,KAGlCrR,KAAKsK,SAAStK,KAAKwQ,eAAe5F,UAAS,KACzC5K,KAAKsR,oBACLtR,KAAK4Q,aAAA,CAAkB,IAE3B,CAEOW,oBAAAA,CAAqB/K,GAE1B,OADAxG,KAAKyQ,eAAehE,KAAKjG,GAClB,CACLtD,QAASA,KAEP,MAAMuD,EAAgBzG,KAAKyQ,eAAee,QAAQhL,IAE3B,IAAnBC,GACFzG,KAAKyQ,eAAegB,OAAOhL,EAAe,EAAE,EAIpD,CAEOiL,WAAAA,CAAYlL,EAAsBC,EAA6BsB,GACpE/H,KAAK2R,SAAWnL,EAChBxG,KAAK4R,cAAgBnL,EACrBzG,KAAKmH,eAAiBY,EAEtB/H,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBhM,KAAK2R,SAAU,cAAc,KAClE3R,KAAK2Q,aAAA,EACL3Q,KAAKsR,mBAAmB,KAE1BtR,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBhM,KAAK2R,SAAU,YAAa3R,KAAK6R,iBAAiBpH,KAAKzK,QAC9FA,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBhM,KAAK2R,SAAU,YAAa3R,KAAK8R,iBAAiBrH,KAAKzK,QAC9FA,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBhM,KAAK2R,SAAU,UAAW3R,KAAK+R,eAAetH,KAAKzK,OAC5F,CAEQ6R,gBAAAA,CAAiBrL,GAGvB,GAFAxG,KAAKqR,gBAAkB7K,GAElBxG,KAAK2R,WAAa3R,KAAK4R,cAC1B,OAGF,MAAMnL,EAAWzG,KAAKgS,wBAAwBxL,EAAOxG,KAAK2R,SAAU3R,KAAK4R,eACzE,IAAKnL,EACH,OAEFzG,KAAK2Q,aAAA,EAGL,MAAM5I,EAAevB,EAAMyL,eAC3B,IAAK,IAAIzL,EAAI,EAAGA,EAAIuB,EAAamC,OAAQ1D,IAAK,CAC5C,MAAMC,EAASsB,EAAavB,GAE5B,GAAIC,EAAO8C,UAAU2I,SAAS,SAC5B,MAGF,GAAIzL,EAAO8C,UAAU2I,SAAS,eAC5B,M,CAIClS,KAAKmS,iBAAoB1L,EAAS2L,IAAMpS,KAAKmS,gBAAgBC,GAAK3L,EAAS4L,IAAMrS,KAAKmS,gBAAgBE,IACzGrS,KAAKsS,aAAa7L,GAClBzG,KAAKmS,gBAAkB1L,EAE3B,CAEQ6L,YAAAA,CAAa9L,GAInB,GAAIxG,KAAK6Q,cAAgBrK,EAAS6L,GAAKrS,KAAK4Q,YAI1C,OAHA5Q,KAAKsR,oBACLtR,KAAKuS,YAAY/L,GAAA,QACjBxG,KAAK4Q,aAAA,GAKyB5Q,KAAKuQ,cAAgBvQ,KAAKwS,gBAAgBxS,KAAKuQ,aAAakC,KAAMjM,KAEhGxG,KAAKsR,oBACLtR,KAAKuS,YAAY/L,GAAA,GAErB,CAEQ+L,WAAAA,CAAY/L,EAA+BC,G,QAC5CzG,KAAK0S,wBAA2BjM,IACR,QAA3BsB,EAAA/H,KAAK0S,8BAAA,IAAsB3K,GAAAA,EAAE4K,SAAQnM,IACnC,MAAAA,GAAAA,EAAOmM,SAAQnM,IACTA,EAAciM,KAAKvP,SACrBsD,EAAciM,KAAKvP,SAAA,GAErB,IAEJlD,KAAK0S,uBAAyB,IAAIE,IAClC5S,KAAK6Q,YAAcrK,EAAS6L,GAE9B,IAAIzK,GAAA,EAGJ,IAAK,MAAOG,EAAGQ,KAAiBvI,KAAKyQ,eAAeoC,UAC9CpM,GAC+C,QAA3B2B,EAAApI,KAAK0S,8BAAA,IAAsBtK,OAAA,EAAAA,EAAE8H,IAAInI,MAOrDH,EAAe5H,KAAK8S,yBAAyB/K,EAAGvB,EAAUoB,IAG5DW,EAAawK,aAAavM,EAAS6L,GAAI5L,I,QACrC,GAAIzG,KAAK2Q,YACP,OAEF,MAAM1I,EAA+C,MAAAxB,OAAA,EAAAA,EAAOuM,KAAIxM,IAAA,CAAYiM,KAAAjM,MACjD,QAA3B4B,EAAApI,KAAK0S,8BAAA,IAAsBtK,GAAAA,EAAE4H,IAAIjI,EAAGE,GACpCL,EAAe5H,KAAK8S,yBAAyB/K,EAAGvB,EAAUoB,IAI3B,QAA3BW,EAAAvI,KAAK0S,8BAAA,IAAsBnK,OAAA,EAAAA,EAAE0K,QAASjT,KAAKyQ,eAAevG,QAC5DlK,KAAKkT,yBAAyB1M,EAAS6L,EAAGrS,KAAK0S,uBAAA,GAKzD,CAEQQ,wBAAAA,CAAyB1M,EAAWC,GAC1C,MAAMsB,EAAgB,IAAIoL,IAC1B,IAAK,IAAI/K,EAAI,EAAGA,EAAI3B,EAAQwM,KAAM7K,IAAK,CACrC,MAAMR,EAAgBnB,EAAQyJ,IAAI9H,GAClC,GAAKR,EAGL,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAAcsC,OAAQzD,IAAK,CAC7C,MAAM2B,EAAgBR,EAAcnB,GAC9B8B,EAASH,EAAcqK,KAAKW,MAAMpI,MAAMqH,EAAI7L,EAAI,EAAI4B,EAAcqK,KAAKW,MAAMpI,MAAMoH,EACnFnK,EAAOG,EAAcqK,KAAKW,MAAMnI,IAAIoH,EAAI7L,EAAIxG,KAAKwQ,eAAevJ,KAAOmB,EAAcqK,KAAKW,MAAMnI,IAAImH,EAC1G,IAAK,IAAI5L,EAAI+B,EAAQ/B,GAAKyB,EAAMzB,IAAK,CACnC,GAAIuB,EAAcsL,IAAI7M,GAAI,CACxBoB,EAAc6J,OAAOhL,IAAK,GAC1B,K,CAEFsB,EAAcyB,IAAIhD,E,GAI1B,CAEQsM,wBAAAA,CAAyBtM,EAAeC,EAA+BsB,G,MAC7E,IAAK/H,KAAK0S,uBACR,OAAO3K,EAGT,MAAMH,EAAQ5H,KAAK0S,uBAAuBxC,IAAI1J,GAG9C,IAAI+B,GAAA,EACJ,IAAK,IAAI9B,EAAI,EAAGA,EAAID,EAAOC,IACpBzG,KAAK0S,uBAAuBW,IAAI5M,KAAMzG,KAAK0S,uBAAuBxC,IAAIzJ,KACzE8B,GAAA,GAMJ,IAAKA,GAAiBX,EAAO,CAC3B,MAAMpB,EAAiBoB,EAAM0L,MAAK9M,GAAQxG,KAAKwS,gBAAgBhM,EAAKiM,KAAMhM,KACtED,IACFuB,GAAA,EACA/H,KAAKuT,eAAe/M,G,CAKxB,GAAIxG,KAAK0S,uBAAuBO,OAASjT,KAAKyQ,eAAevG,SAAWnC,EAEtE,IAAK,IAAIvB,EAAI,EAAGA,EAAIxG,KAAK0S,uBAAuBO,KAAMzM,IAAK,CACzD,MAAMoB,EAAgD,QAAlCQ,EAAApI,KAAK0S,uBAAuBxC,IAAI1J,UAAA,IAAE4B,OAAA,EAAAA,EAAEkL,MAAK9M,GAAQxG,KAAKwS,gBAAgBhM,EAAKiM,KAAMhM,KACrG,GAAImB,EAAa,CACfG,GAAA,EACA/H,KAAKuT,eAAe3L,GACpB,K,EAKN,OAAOG,CACT,CAEQ+J,gBAAAA,GACN9R,KAAKwT,eAAiBxT,KAAKuQ,YAC7B,CAEQwB,cAAAA,CAAevL,GACrB,IAAKxG,KAAK2R,WAAa3R,KAAK4R,gBAAkB5R,KAAKuQ,aACjD,OAGF,MAAM9J,EAAWzG,KAAKgS,wBAAwBxL,EAAOxG,KAAK2R,SAAU3R,KAAK4R,eACpEnL,GAIDzG,KAAKwT,iBAAmBxT,KAAKuQ,cAAgBvQ,KAAKwS,gBAAgBxS,KAAKuQ,aAAakC,KAAMhM,IAC5FzG,KAAKuQ,aAAakC,KAAK5L,SAASL,EAAOxG,KAAKuQ,aAAakC,KAAKgB,KAElE,CAEQnC,iBAAAA,CAAkB9K,EAAmBC,GACtCzG,KAAK2R,UAAa3R,KAAKuQ,cAAiBvQ,KAAKqR,mBAK7C7K,IAAaC,GAAWzG,KAAKuQ,aAAakC,KAAKW,MAAMpI,MAAMqH,GAAK7L,GAAYxG,KAAKuQ,aAAakC,KAAKW,MAAMnI,IAAIoH,GAAK5L,KACrHzG,KAAK0T,WAAW1T,KAAK2R,SAAU3R,KAAKuQ,aAAakC,KAAMzS,KAAKqR,iBAC5DrR,KAAKuQ,kBAAA,GAAe,EACpB9H,EAAAkL,cAAa3T,KAAK0Q,uBAEtB,CAEQ6C,cAAAA,CAAe/M,GACrB,IAAKxG,KAAK2R,WAAa3R,KAAKqR,kBAAoBrR,KAAK4R,cACnD,OAGF,MAAMnL,EAAWzG,KAAKgS,wBAAwBhS,KAAKqR,gBAAiBrR,KAAK2R,SAAU3R,KAAK4R,eAEnFnL,GAKDzG,KAAKwS,gBAAgBhM,EAAciM,KAAMhM,KAC3CzG,KAAKuQ,aAAe/J,EACpBxG,KAAKuQ,aAAaqD,MAAQ,CACxBC,YAAa,CACXC,eAAA,IAAWtN,EAAciM,KAAKoB,aAAmCrN,EAAciM,KAAKoB,YAAYC,UAChGC,mBAAA,IAAevN,EAAciM,KAAKoB,aAAmCrN,EAAciM,KAAKoB,YAAYE,eAEtGC,WAAA,GAEFhU,KAAKiU,WAAWjU,KAAK2R,SAAUnL,EAAciM,KAAMzS,KAAKqR,iBAGxD7K,EAAciM,KAAKoB,YAAc,CAAC,EAClCK,OAAOC,iBAAiB3N,EAAciM,KAAKoB,YAAa,CACtDE,cAAe,CACb7D,IAAKA,KAAK,IAAA1J,EAAAC,EAAC,OAAwB,QAAxBA,EAAiB,QAAjBD,EAAAxG,KAAKuQ,oBAAA,IAAY/J,OAAA,EAAAA,EAAEoN,aAAA,IAAKnN,OAAA,EAAAA,EAAEoN,YAAYE,aAAa,EAC9D/D,IAAKxJ,I,SACkB,QAAjBC,EAAAzG,KAAKuQ,oBAAA,IAAY9J,OAAA,EAAAA,EAAEmN,QAAS5T,KAAKuQ,aAAaqD,MAAMC,YAAYE,gBAAkBvN,IACpFxG,KAAKuQ,aAAaqD,MAAMC,YAAYE,cAAgBvN,EAChDxG,KAAKuQ,aAAaqD,MAAMI,YACb,QAAbjM,EAAA/H,KAAK2R,gBAAA,IAAQ5J,GAAAA,EAAEwB,UAAU6K,OAAO,uBAAwB5N,IAAA,GAKhEsN,UAAW,CACT5D,IAAKA,KAAK,IAAA1J,EAAAC,EAAC,OAAwB,QAAxBA,EAAiB,QAAjBD,EAAAxG,KAAKuQ,oBAAA,IAAY/J,OAAA,EAAAA,EAAEoN,aAAA,IAAKnN,OAAA,EAAAA,EAAEoN,YAAYC,SAAS,EAC1D9D,IAAKvJ,I,WACkB,QAAjBsB,EAAA/H,KAAKuQ,oBAAA,IAAYxI,OAAA,EAAAA,EAAE6L,SAAiC,QAAxBhM,EAAiB,QAAjBQ,EAAApI,KAAKuQ,oBAAA,IAAYnI,OAAA,EAAAA,EAAEwL,aAAA,IAAKhM,OAAA,EAAAA,EAAEiM,YAAYC,aAAcrN,IAClFzG,KAAKuQ,aAAaqD,MAAMC,YAAYC,UAAYrN,EAC5CzG,KAAKuQ,aAAaqD,MAAMI,WAC1BhU,KAAKqU,oBAAoB7N,EAAciM,KAAMhM,GAAA,KASnDzG,KAAKmH,gBACPnH,KAAK0Q,sBAAsBjE,KAAKzM,KAAKmH,eAAemN,0BAAyB9N,IAE3E,IAAKxG,KAAKuQ,aACR,OAIF,MAAM9J,EAAoB,IAAZD,EAAEwE,MAAc,EAAIxE,EAAEwE,MAAQ,EAAIhL,KAAKwQ,eAAe7D,OAAOG,MACrE/E,EAAM/H,KAAKwQ,eAAe7D,OAAOG,MAAQ,EAAItG,EAAEyE,IAErD,GAAIjL,KAAKuQ,aAAakC,KAAKW,MAAMpI,MAAMqH,GAAK5L,GAASzG,KAAKuQ,aAAakC,KAAKW,MAAMnI,IAAIoH,GAAKtK,IACzF/H,KAAKsR,kBAAkB7K,EAAOsB,GAC1B/H,KAAKqR,iBAAmBrR,KAAK2R,UAAU,CAEzC,MAAMnL,EAAWxG,KAAKgS,wBAAwBhS,KAAKqR,gBAAiBrR,KAAK2R,SAAU3R,KAAK4R,eACpFpL,GACFxG,KAAKuS,YAAY/L,GAAA,E,MAO/B,CAEUyN,UAAAA,CAAWzN,EAAsBC,EAAasB,G,OACjC,QAAjBK,EAAApI,KAAKuQ,oBAAA,IAAYnI,OAAA,EAAAA,EAAEwL,SACrB5T,KAAKuQ,aAAaqD,MAAMI,WAAA,EACpBhU,KAAKuQ,aAAaqD,MAAMC,YAAYC,WACtC9T,KAAKqU,oBAAoB5N,GAAA,GAEvBzG,KAAKuQ,aAAaqD,MAAMC,YAAYE,eACtCvN,EAAQ+C,UAAUC,IAAI,yBAItB/C,EAAK8N,OACP9N,EAAK8N,MAAMxM,EAAOtB,EAAKgN,KAE3B,CAEQY,mBAAAA,CAAoB7N,EAAaC,GACvC,MAAMsB,EAAQvB,EAAK4M,MACbhL,EAAepI,KAAKwQ,eAAe7D,OAAOG,MAC1ClF,EAAQ5H,KAAKwU,0BAA0BzM,EAAMiD,MAAMoH,EAAI,EAAGrK,EAAMiD,MAAMqH,EAAIjK,EAAe,EAAGL,EAAMkD,IAAImH,EAAGrK,EAAMkD,IAAIoH,EAAIjK,EAAe,OAAG,IAC/H3B,EAAYzG,KAAK8Q,qBAAuB9Q,KAAKkR,sBACrDuD,KAAK7M,EACf,CAEU8L,UAAAA,CAAWlN,EAAsBC,EAAasB,G,OACjC,QAAjBK,EAAApI,KAAKuQ,oBAAA,IAAYnI,OAAA,EAAAA,EAAEwL,SACrB5T,KAAKuQ,aAAaqD,MAAMI,WAAA,EACpBhU,KAAKuQ,aAAaqD,MAAMC,YAAYC,WACtC9T,KAAKqU,oBAAoB5N,GAAA,GAEvBzG,KAAKuQ,aAAaqD,MAAMC,YAAYE,eACtCvN,EAAQ+C,UAAU2C,OAAO,yBAIzBzF,EAAKiO,OACPjO,EAAKiO,MAAM3M,EAAOtB,EAAKgN,KAE3B,CAOQjB,eAAAA,CAAgBhM,EAAaC,GACnC,MAAMsB,EAAQvB,EAAK4M,MAAMpI,MAAMqH,EAAIrS,KAAKwQ,eAAevJ,KAAOT,EAAK4M,MAAMpI,MAAMoH,EACzEhK,EAAQ5B,EAAK4M,MAAMnI,IAAIoH,EAAIrS,KAAKwQ,eAAevJ,KAAOT,EAAK4M,MAAMnI,IAAImH,EACrExK,EAAUnB,EAAS4L,EAAIrS,KAAKwQ,eAAevJ,KAAOR,EAAS2L,EACjE,OAAQrK,GAASH,GAAWA,GAAWQ,CACzC,CAMQ4J,uBAAAA,CAAwBxL,EAAmBC,EAAsBsB,GACvE,MAAMK,EAASL,EAAa4M,UAAUnO,EAAOC,EAASzG,KAAKwQ,eAAevJ,KAAMjH,KAAKwQ,eAAenL,MACpG,GAAK+C,EAIL,MAAO,CAAEgK,EAAGhK,EAAO,GAAIiK,EAAGjK,EAAO,GAAKpI,KAAKwQ,eAAe7D,OAAOG,MACnE,CAEQ0H,yBAAAA,CAA0BhO,EAAYC,EAAYsB,EAAYK,EAAYR,GAChF,MAAO,CAAEgN,GAAApO,EAAIqO,GAAApO,EAAIqO,GAAA/M,EAAIgN,GAAA3M,EAAInB,KAAMjH,KAAKwQ,eAAevJ,KAAM+N,GAAApN,EAC3D,G,aAjZWgB,EAAUR,EAAA,CAsBlBR,EAAA,EAAAe,EAAAsM,iBAtBQrM,E,qGCLFnC,EAAAyO,YAAc,iBAGdzO,EAAA4F,cAAgB,kE,ogBCL3B,MAAA9D,EAAAR,EAAA,KACAE,EAAAF,EAAA,MAEO,IAAMU,EAAehC,EAAA0O,gBAArB,MACLzT,WAAAA,CACmC8E,EACCC,EACAsB,GAFD,KAAAyI,eAAAhK,EACC,KAAA4O,gBAAA3O,EACA,KAAA4O,gBAAAtN,CAEpC,CAEOgL,YAAAA,CAAavM,EAAWC,G,MAC7B,MAAM2B,EAAOpI,KAAKwQ,eAAe7D,OAAOC,MAAMsD,IAAI1J,EAAI,GACtD,IAAK4B,EAEH,YADA3B,OAAA,GAIF,MAAMmB,EAAkB,GAClBK,EAAcjI,KAAKoV,gBAAgBhH,WAAWkH,YAC9C7M,EAAO,IAAIF,EAAAgN,SACX3M,EAAaR,EAAKoN,mBACxB,IAAIhN,GAAiB,EACjBK,GAAgB,EAChBC,GAAA,EACJ,IAAK,IAAIrC,EAAI,EAAGA,EAAImC,EAAYnC,IAG9B,IAAsB,IAAlBoC,GAAwBT,EAAKqN,WAAWhP,GAA5C,CAKA,GADA2B,EAAKsN,SAASjP,EAAGgC,GACbA,EAAKkN,oBAAsBlN,EAAKmN,SAASC,MAAO,CAClD,IAAsB,IAAlBhN,EAAqB,CACvBA,EAAepC,EACf+B,EAAgBC,EAAKmN,SAASC,MAC9B,Q,CAEA/M,EAAaL,EAAKmN,SAASC,QAAUrN,C,MAGjB,IAAlBK,IACFC,GAAA,GAIJ,GAAIA,IAAiC,IAAlBD,GAAuBpC,IAAMmC,EAAa,EAAI,CAC/D,MAAMR,EAAsD,QAA/CL,EAAA/H,KAAKqV,gBAAgBS,YAAYtN,UAAA,IAAcT,OAAA,EAAAA,EAAEgO,IAC9D,GAAI3N,EAAM,CAER,MAAML,EAAsB,CAC1BiD,MAAO,CACLoH,EAAGvJ,EAAe,EAClBwJ,EAAA7L,GAEFyE,IAAK,CAEHmH,EAAG3L,GAAMqC,GAAcrC,IAAMmC,EAAa,EAAQ,EAAJ,GAC9CyJ,EAAA7L,IAIJ,IAAI+B,GAAA,EACJ,KAAK,MAAAN,OAAA,EAAAA,EAAa+N,uBAChB,IACE,MAAMxP,EAAS,IAAIyP,IAAI7N,GAClB,CAAC,QAAS,UAAU8N,SAAS1P,EAAO1E,YACvCyG,GAAA,E,CAEF,MAAO/B,GAEP+B,GAAA,C,CAICA,GAEHX,EAAO6E,KAAK,CACVgH,KAAArL,EACAgL,MAAArL,EACAlB,SAAUA,CAACL,EAAGC,IAAUwB,EAAcA,EAAYpB,SAASL,EAAGC,EAAMsB,GAASY,EAAgB,EAAGlC,GAChG8N,MAAOA,CAAC/N,EAAGC,KAAQ,IAAA2B,EAAC,OAAkB,QAAlBA,EAAA,MAAAH,OAAA,EAAAA,EAAasM,aAAA,IAAKnM,OAAA,EAAAA,EAAA+N,KAAAlO,EAAGzB,EAAGC,EAAMsB,EAAM,EACxD2M,MAAOA,CAAClO,EAAGC,KAAQ,IAAA2B,EAAC,OAAkB,QAAlBA,EAAA,MAAAH,OAAA,EAAAA,EAAayM,aAAA,IAAKtM,OAAA,EAAAA,EAAA+N,KAAAlO,EAAGzB,EAAGC,EAAMsB,EAAM,G,CAI9De,GAAA,EAGIL,EAAKkN,oBAAsBlN,EAAKmN,SAASC,OAC3ChN,EAAepC,EACf+B,EAAgBC,EAAKmN,SAASC,QAE9BhN,GAAgB,EAChBL,GAAiB,E,EAOvB/B,EAASmB,EACX,GAGF,SAASe,EAAgBnC,EAAeC,GAEtC,GADe2P,QAAQ,8BAA8B3P,2DACzC,CACV,MAAMD,EAAYzE,OAAOoE,OACzB,GAAIK,EAAW,CACb,IACEA,EAAU6P,OAAS,I,CACnB,MAAA7P,GAAA,CAGFA,EAAUxE,SAASsU,KAAO7P,C,MAE1B/C,QAAQ6S,KAAK,sD,CAGnB,C,kBAtHa9N,EAAeL,EAAA,CAEvBR,EAAA,EAAAK,EAAAgN,gBACArN,EAAA,EAAAK,EAAAuO,iBACA5O,EAAA,EAAAK,EAAAwO,kBAJQhO,E,yFCCbhC,EAAAiQ,gBAAA,MAOEhV,WAAAA,CACU8E,EACAC,GADA,KAAAkQ,cAAAnQ,EACA,KAAAoQ,gBAAAnQ,EAJF,KAAAoQ,kBAA4C,EAMpD,CAEO3T,OAAAA,GACDlD,KAAK8W,kBACP9W,KAAK2W,cAAcI,qBAAqB/W,KAAK8W,iBAC7C9W,KAAK8W,qBAAA,EAET,CAEOE,kBAAAA,CAAmBxQ,GAKxB,OAJAxG,KAAK6W,kBAAkBpK,KAAKjG,GACvBxG,KAAK8W,kBACR9W,KAAK8W,gBAAkB9W,KAAK2W,cAAcM,uBAAsB,IAAMjX,KAAKkX,mBAEtElX,KAAK8W,eACd,CAEOpK,OAAAA,CAAQlG,EAA8BC,EAA4BsB,GACvE/H,KAAKmX,UAAYpP,EAEjBvB,OAAA,IAAWA,EAAyBA,EAAW,EAC/CC,OAAA,IAASA,EAAuBA,EAASzG,KAAKmX,UAAY,EAE1DnX,KAAKoX,eAAA,IAAYpX,KAAKoX,UAA0B/O,KAAKgP,IAAIrX,KAAKoX,UAAW5Q,GAAYA,EACrFxG,KAAKsX,aAAA,IAAUtX,KAAKsX,QAAwBjP,KAAKC,IAAItI,KAAKsX,QAAS7Q,GAAUA,EAEzEzG,KAAK8W,kBAIT9W,KAAK8W,gBAAkB9W,KAAK2W,cAAcM,uBAAsB,IAAMjX,KAAKkX,kBAC7E,CAEQA,aAAAA,GAIN,GAHAlX,KAAK8W,qBAAA,OAAkB,IAGnB9W,KAAKoX,gBAAA,IAA2BpX,KAAKsX,cAAA,IAAyBtX,KAAKmX,UAErE,YADAnX,KAAKuX,uBAKP,MAAM/Q,EAAQ6B,KAAKC,IAAItI,KAAKoX,UAAW,GACjC3Q,EAAM4B,KAAKgP,IAAIrX,KAAKsX,QAAStX,KAAKmX,UAAY,GAGpDnX,KAAKoX,eAAA,EACLpX,KAAKsX,aAAA,EAGLtX,KAAK4W,gBAAgBpQ,EAAOC,GAC5BzG,KAAKuX,sBACP,CAEQA,oBAAAA,GACN,IAAK,MAAM/Q,KAAYxG,KAAK6W,kBAC1BrQ,EAAS,GAEXxG,KAAK6W,kBAAoB,EAC3B,EAAC,E,0FC5EH,MAAAzO,EAAAL,EAAA,KAcA,MAAaH,UAAyBQ,EAAAY,WAMpCtH,WAAAA,CAAoB8E,GAClByC,QADkB,KAAA0N,cAAAnQ,EAElBxG,KAAKwX,yBAA2BxX,KAAK2W,cAAcc,iBACnDzX,KAAKsK,UAAA,EAASlC,EAAA6D,eAAa,KACzBjM,KAAK0X,eAAe,IAExB,CAEO3L,WAAAA,CAAYvF,GACbxG,KAAK2X,WACP3X,KAAK0X,gBAEP1X,KAAK2X,UAAYnR,EACjBxG,KAAK4X,eAAiB,KACf5X,KAAK2X,YAGV3X,KAAK2X,UAAU3X,KAAK2W,cAAcc,iBAAkBzX,KAAKwX,0BACzDxX,KAAK6X,aAAY,EAEnB7X,KAAK6X,YACP,CAEQA,UAAAA,G,MACD7X,KAAK4X,iBAKoB,QAA9BpR,EAAAxG,KAAK8X,iCAAA,IAAyBtR,GAAAA,EAAEuR,eAAe/X,KAAK4X,gBAGpD5X,KAAKwX,yBAA2BxX,KAAK2W,cAAcc,iBACnDzX,KAAK8X,0BAA4B9X,KAAK2W,cAAcqB,WAAW,2BAA2BhY,KAAK2W,cAAcc,yBAC7GzX,KAAK8X,0BAA0BG,YAAYjY,KAAK4X,gBAClD,CAEOF,aAAAA,GACA1X,KAAK8X,2BAA8B9X,KAAK2X,WAAc3X,KAAK4X,iBAGhE5X,KAAK8X,0BAA0BC,eAAe/X,KAAK4X,gBACnD5X,KAAK8X,+BAAA,EACL9X,KAAK2X,eAAA,EACL3X,KAAK4X,oBAAA,EACP,EAnDFnR,EAAAqF,iBAAAlE,CAAAA,E,kFCIA,MAAAQ,EAAAL,EAAA,MACAH,EAAAG,EAAA,MACAQ,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MAEAY,EAAAZ,EAAA,MACAa,EAAAb,EAAA,MACAS,EAAAT,EAAA,MACAc,EAAAd,EAAA,MACAe,EAAAf,EAAA,MAEAmQ,EAAAnQ,EAAA,KACAoQ,EAAApQ,EAAA,MACAqQ,EAAArQ,EAAA,MACAsQ,EAAAtQ,EAAA,MACAuQ,EAAAvQ,EAAA,MACAwQ,EAAAxQ,EAAA,MACAyQ,EAAAzQ,EAAA,MACA0Q,EAAA1Q,EAAA,MACA2Q,EAAA3Q,EAAA,MACAsK,EAAAtK,EAAA,MACA4Q,EAAA5Q,EAAA,MACA6Q,EAAA7Q,EAAA,KACA8Q,EAAA9Q,EAAA,MAEA+Q,EAAA/Q,EAAA,MAEAgR,EAAAhR,EAAA,MACAiR,EAAAjR,EAAA,MACAqK,EAAArK,EAAA,MACAkR,EAAAlR,EAAA,MACAmR,EAAAnR,EAAA,MAEAoR,EAAApR,EAAA,MACAqR,EAAArR,EAAA,MAGMsR,EAAwC,oBAAXtX,OAA0BA,OAAOqE,SAAW,KAE/E,MAAakT,UAAiBjH,EAAAkH,aAyE5B,WAAAC,GAAqC,OAAOxZ,KAAKyZ,SAASxI,KAAO,CAEjE,UAAAvF,GAAoC,OAAO1L,KAAK0Z,QAAQzI,KAAO,CAE/D,cAAA9F,GAA0C,OAAOnL,KAAK2Z,mBAAmB1I,KAAO,CAEhF,aAAA3F,GAAyC,OAAOtL,KAAK4Z,kBAAkB3I,KAAO,CAE9E,cAAA4I,GAA+C,OAAO7Z,KAAK8Z,YAAY7I,KAAO,CAE9EvP,WAAAA,CACE8E,EAAqC,CAAC,GAEtCyC,MAAMzC,GAzED,KAAAuT,QAAoBlB,EAmBnB,KAAAmB,iBAAA,EAMA,KAAAC,cAAA,EAOA,KAAAC,kBAAA,EAOA,KAAAC,qBAAA,EAKA,KAAAC,sBAAiEpa,KAAKsK,SAAS,IAAIsO,EAAAyB,mBAE1E,KAAAC,cAAgBta,KAAKsK,SAAS,IAAIqO,EAAA5H,cACnC,KAAAwJ,aAAeva,KAAKsa,cAAcrJ,MACjC,KAAAuJ,OAASxa,KAAKsK,SAAS,IAAIqO,EAAA5H,cAC5B,KAAAvF,MAAQxL,KAAKwa,OAAOvJ,MACnB,KAAAwJ,UAAYza,KAAKsK,SAAS,IAAIqO,EAAA5H,cAC/B,KAAAjG,SAAW9K,KAAKya,UAAUxJ,MACzB,KAAAyJ,mBAAqB1a,KAAKsK,SAAS,IAAIqO,EAAA5H,cACxC,KAAA4J,kBAAoB3a,KAAK0a,mBAAmBzJ,MAC3C,KAAA2J,eAAiB5a,KAAKsK,SAAS,IAAIqO,EAAA5H,cACpC,KAAA8J,cAAgB7a,KAAK4a,eAAe3J,MACnC,KAAA6J,QAAU9a,KAAKsK,SAAS,IAAIqO,EAAA5H,cAC7B,KAAAgK,OAAS/a,KAAK8a,QAAQ7J,MAE9B,KAAAwI,SAAWzZ,KAAKsK,SAAS,IAAIqO,EAAA5H,cAE7B,KAAA2I,QAAU1Z,KAAKsK,SAAS,IAAIqO,EAAA5H,cAE5B,KAAA4I,mBAAqB3Z,KAAKsK,SAAS,IAAIqO,EAAA5H,cAEvC,KAAA6I,kBAAoB5Z,KAAKsK,SAAS,IAAIqO,EAAA5H,cAEtC,KAAA+I,YAAc9Z,KAAKsK,SAAS,IAAIqO,EAAA5H,cAQtC/Q,KAAKgb,SAELhb,KAAKib,WAAajb,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAe5S,EAAA8H,aAC1ErQ,KAAKib,WAAW1J,qBAAqBvR,KAAKkb,sBAAsBC,eAAe1S,EAAA0M,kBAC/EnV,KAAKob,mBAAqBpb,KAAKkb,sBAAsBC,eAAelC,EAAAoC,mBACpErb,KAAKkb,sBAAsBI,WAAWpC,EAAAqC,mBAAoBvb,KAAKob,oBAG/Dpb,KAAKsK,SAAStK,KAAKwb,cAAcC,eAAc,IAAMzb,KAAK8a,QAAQrG,UAClEzU,KAAKsK,SAAStK,KAAKwb,cAAcE,sBAAqB,CAAClV,EAAOC,IAAQzG,KAAK0M,QAAQlG,EAAOC,MAC1FzG,KAAKsK,SAAStK,KAAKwb,cAAcG,oBAAmB,IAAM3b,KAAK4b,kBAC/D5b,KAAKsK,SAAStK,KAAKwb,cAAcK,gBAAe,IAAM7b,KAAK8b,WAC3D9b,KAAKsK,SAAStK,KAAKwb,cAAcO,+BAA8BvV,GAAQxG,KAAKgc,sBAAsBxV,MAClGxG,KAAKsK,SAAStK,KAAKwb,cAAcS,SAASzV,GAAUxG,KAAKkc,kBAAkB1V,MAC3ExG,KAAKsK,UAAA,EAASqO,EAAAwD,cAAanc,KAAKwb,cAAcjB,aAAcva,KAAKsa,gBACjEta,KAAKsK,UAAA,EAASqO,EAAAwD,cAAanc,KAAKwb,cAAcX,cAAe7a,KAAK4a,iBAClE5a,KAAKsK,UAAA,EAASqO,EAAAwD,cAAanc,KAAKwb,cAAcrQ,WAAYnL,KAAK2Z,qBAC/D3Z,KAAKsK,UAAA,EAASqO,EAAAwD,cAAanc,KAAKwb,cAAclQ,UAAWtL,KAAK4Z,oBAG9D5Z,KAAKsK,SAAStK,KAAKwQ,eAAe5F,UAASpE,GAAKxG,KAAKoc,aAAa5V,EAAES,KAAMT,EAAEnB,SAE5ErF,KAAKsK,UAAA,EAASsO,EAAA3M,eAAa,K,QACzBjM,KAAKqc,4BAAA,EACmB,QAAxB5V,EAAY,QAAZD,EAAAxG,KAAKsH,eAAA,IAAOd,OAAA,EAAAA,EAAE+F,kBAAA,IAAU9F,GAAAA,EAAE4G,YAAYrN,KAAKsH,QAAQ,IAEvD,CAQQ4U,iBAAAA,CAAkB1V,GACxB,GAAKxG,KAAKsc,cACV,IAAK,MAAM7V,KAAOD,EAAO,CACvB,IAAIA,EACAuB,EAAQ,GACZ,OAAQtB,EAAI8V,OACV,KAAK,IACH/V,EAAM,aACNuB,EAAQ,KACR,MACF,KAAK,IACHvB,EAAM,aACNuB,EAAQ,KACR,MACF,KAAK,IACHvB,EAAM,SACNuB,EAAQ,KACR,MACF,QAEEvB,EAAM,OACNuB,EAAQ,KAAOtB,EAAI8V,MAEvB,OAAQ9V,EAAIjC,MACV,KAAK,EACH,MAAM4D,EAAWsQ,EAAA8D,MAAMC,WAAmB,SAARjW,EAC9BxG,KAAKsc,cAAcI,OAAOC,KAAKlW,EAAI8V,OACnCvc,KAAKsc,cAAcI,OAAOlW,IAC9BxG,KAAK4c,YAAYtO,iBAAiB,GAAGyK,EAAA8D,GAAGC,OAAO/U,MAAA,EAASqK,EAAA2K,aAAY3U,KAAY2Q,EAAAiE,WAAWC,MAC3F,MACF,KAAK,EACH,GAAY,SAARzW,EACFxG,KAAKsc,cAAcY,cAAa1W,GAAUA,EAAOmW,KAAKlW,EAAI8V,OAAS7D,EAAAyE,KAAKC,WAAW3W,EAAI+V,aAClF,CACL,MAAMzU,EAAcvB,EACpBxG,KAAKsc,cAAcY,cAAa1W,GAAUA,EAAOuB,GAAe2Q,EAAAyE,KAAKC,WAAW3W,EAAI+V,Q,CAEtF,MACF,KAAK,EACHxc,KAAKsc,cAAce,aAAa5W,EAAI8V,O,CAI5C,CAEUvB,MAAAA,GACR/R,MAAM+R,SAENhb,KAAKqc,4BAAA,CACP,CAKA,UAAA1P,GACE,OAAO3M,KAAKsd,QAAQC,MACtB,CAKO9P,KAAAA,GACDzN,KAAKwd,UACPxd,KAAKwd,SAAS/P,MAAM,CAAEgQ,eAAA,GAE1B,CAEQC,mCAAAA,CAAoClX,GACtCA,GACGxG,KAAKoa,sBAAsB7Z,OAASP,KAAKmH,iBAC5CnH,KAAKoa,sBAAsB7Z,MAAQP,KAAKkb,sBAAsBC,eAAe/B,EAAArQ,qBAAsB/I,OAGrGA,KAAKoa,sBAAsBhT,OAE/B,CAKQuW,oBAAAA,CAAqBnX,GACvBxG,KAAK4c,YAAY1O,gBAAgB0P,WACnC5d,KAAK4c,YAAYtO,iBAAiByK,EAAA8D,GAAGC,IAAM,MAE7C9c,KAAK6d,kBAAkBrX,GACvBxG,KAAKsH,QAASiC,UAAUC,IAAI,SAC5BxJ,KAAK8d,cACL9d,KAAKyZ,SAAShF,MAChB,CAMOsJ,IAAAA,G,MACL,OAAoB,QAAbvX,EAAAxG,KAAKwd,gBAAA,IAAQhX,OAAA,EAAAA,EAAEuX,MACxB,CAKQC,mBAAAA,GAGNhe,KAAKwd,SAAUjd,MAAQ,GACvBP,KAAK0M,QAAQ1M,KAAK2M,OAAO0F,EAAGrS,KAAK2M,OAAO0F,GACpCrS,KAAK4c,YAAY1O,gBAAgB0P,WACnC5d,KAAK4c,YAAYtO,iBAAiByK,EAAA8D,GAAGC,IAAM,MAE7C9c,KAAKsH,QAASiC,UAAU2C,OAAO,SAC/BlM,KAAK0Z,QAAQjF,MACf,CAEQwJ,aAAAA,GACN,IAAKje,KAAKwd,WAAaxd,KAAK2M,OAAOuR,oBAAsBle,KAAKme,mBAAoBC,cAAgBpe,KAAKmH,eACrG,OAEF,MAAMX,EAAUxG,KAAK2M,OAAO0R,MAAQre,KAAK2M,OAAO0F,EAC1C5L,EAAazG,KAAK2M,OAAOC,MAAMsD,IAAI1J,GACzC,IAAKC,EACH,OAEF,MAAMsB,EAAUM,KAAKgP,IAAIrX,KAAK2M,OAAOyF,EAAGpS,KAAKiH,KAAO,GAC9CmB,EAAapI,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OACrDyG,EAAQnB,EAAW6X,SAASvW,GAC5BQ,EAAYvI,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MAAQC,EAC5DK,EAAYjI,KAAK2M,OAAO0F,EAAIrS,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OACpEsH,EAAaV,EAAU/H,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MAIrE3H,KAAKwd,SAAStc,MAAMuN,KAAOhG,EAAa,KACxCzI,KAAKwd,SAAStc,MAAMyN,IAAM1G,EAAY,KACtCjI,KAAKwd,SAAStc,MAAMyG,MAAQY,EAAY,KACxCvI,KAAKwd,SAAStc,MAAMC,OAASiH,EAAa,KAC1CpI,KAAKwd,SAAStc,MAAMqd,WAAanW,EAAa,KAC9CpI,KAAKwd,SAAStc,MAAM0N,OAAS,IAC/B,CAKQ4P,WAAAA,GACNxe,KAAKye,YAGLze,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKsH,QAAU,QAASd,IAGxDxG,KAAK0e,iBAAA,EAGVtW,EAAA2G,aAAYvI,EAAOxG,KAAK2e,kBAAmB,KAE7C,MAAMnY,EAAuBA,IAAA,EAAgC4B,EAAA+G,kBAAiB3I,EAAOxG,KAAKwd,SAAWxd,KAAK4c,YAAa5c,KAAK4e,gBAC5H5e,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,QAAShX,IAChExG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKsH,QAAU,QAASd,IAG3DqS,EAAQgG,UAEV7e,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKsH,QAAU,aAAcd,IAC7C,IAAjBA,EAAMsY,SAAA,EACR1W,EAAAoH,mBAAkBhJ,EAAOxG,KAAKwd,SAAWxd,KAAK+e,cAAgB/e,KAAK2e,kBAAoB3e,KAAK6B,QAAQmd,sBAAA,KAIxGhf,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKsH,QAAU,eAAgBd,KAAA,EACpE4B,EAAAoH,mBAAkBhJ,EAAOxG,KAAKwd,SAAWxd,KAAK+e,cAAgB/e,KAAK2e,kBAAoB3e,KAAK6B,QAAQmd,sBAAsB,KAO1HnG,EAAQoG,SAGVjf,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKsH,QAAU,YAAad,IAC5C,IAAjBA,EAAMsY,SAAA,EACR1W,EAAAmH,8BAA6B/I,EAAOxG,KAAKwd,SAAWxd,KAAK+e,cAAA,IAIjE,CAKQN,SAAAA,GACNze,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,SAAUhX,GAAsBxG,KAAKkf,OAAO1Y,KAAA,IACnGxG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,WAAYhX,GAAsBxG,KAAKmf,SAAS3Y,KAAA,IACvGxG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,YAAahX,GAAsBxG,KAAKof,UAAU5Y,KAAA,IACzGxG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,oBAAoB,IAAMxd,KAAKme,mBAAoBkB,sBAC1Grf,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,qBAAsBhX,GAAwBxG,KAAKme,mBAAoBmB,kBAAkB9Y,MAChJxG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,kBAAkB,IAAMxd,KAAKme,mBAAoBoB,oBACxGvf,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAW,SAAUhX,GAAmBxG,KAAKwf,YAAYhZ,KAAA,IACrGxG,KAAKsK,SAAStK,KAAK8K,UAAS,IAAM9K,KAAKme,mBAAoBsB,8BAC7D,CAOOtZ,IAAAA,CAAKK,G,MACV,IAAKA,EACH,MAAM,IAAIkE,MAAM,uCAGblE,EAAOkZ,aACV1f,KAAK2f,YAAYC,MAAM,2EAGzB5f,KAAK6f,UAAYrZ,EAAOsZ,cAGxB9f,KAAKsH,QAAUtH,KAAK6f,UAAUvW,cAAc,OAC5CtJ,KAAKsH,QAAQyY,IAAM,MACnB/f,KAAKsH,QAAQiC,UAAUC,IAAI,YAC3BxJ,KAAKsH,QAAQiC,UAAUC,IAAI,SAC3BhD,EAAOqD,YAAY7J,KAAKsH,SAIxB,MAAMS,EAAWsR,EAAS2G,yBAC1BhgB,KAAKigB,iBAAmB5G,EAAS/P,cAAc,OAC/CtJ,KAAKigB,iBAAiB1W,UAAUC,IAAI,kBACpCzB,EAAS8B,YAAY7J,KAAKigB,kBAE1BjgB,KAAKkgB,oBAAsB7G,EAAS/P,cAAc,OAClDtJ,KAAKkgB,oBAAoB3W,UAAUC,IAAI,qBACvCxJ,KAAKigB,iBAAiBpW,YAAY7J,KAAKkgB,qBAEvClgB,KAAK+e,cAAgB1F,EAAS/P,cAAc,OAC5CtJ,KAAK+e,cAAcxV,UAAUC,IAAI,gBAGjCxJ,KAAKmgB,iBAAmB9G,EAAS/P,cAAc,OAC/CtJ,KAAKmgB,iBAAiB5W,UAAUC,IAAI,iBACpCxJ,KAAK+e,cAAclV,YAAY7J,KAAKmgB,kBACpCpY,EAAS8B,YAAY7J,KAAK+e,eAE1B/e,KAAKwd,SAAWnE,EAAS/P,cAAc,YACvCtJ,KAAKwd,SAASjU,UAAUC,IAAI,yBAC5BxJ,KAAKwd,SAAS9T,aAAa,aAAczB,EAAQiN,aAC5C2D,EAAQuH,YAGXpgB,KAAKwd,SAAS9T,aAAa,iBAAkB,SAE/C1J,KAAKwd,SAAS9T,aAAa,cAAe,OAC1C1J,KAAKwd,SAAS9T,aAAa,iBAAkB,OAC7C1J,KAAKwd,SAAS9T,aAAa,aAAc,SACzC1J,KAAKwd,SAAS3P,SAAW,EAIzB7N,KAAKqgB,oBAAsBrgB,KAAKkb,sBAAsBC,eAAe/C,EAAAkI,mBAAoBtgB,KAAKwd,SAAoC,QAA1B/W,EAAAzG,KAAK6f,UAAUU,mBAAA,IAAW9Z,EAAAA,EAAI1E,QACtI/B,KAAKkb,sBAAsBI,WAAW9C,EAAAgI,oBAAqBxgB,KAAKqgB,qBAEhErgB,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAU,SAAUhX,GAAsBxG,KAAK2d,qBAAqBnX,MAChHxG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKwd,SAAU,QAAQ,IAAMxd,KAAKge,yBACzEhe,KAAKmgB,iBAAiBtW,YAAY7J,KAAKwd,UAGvCxd,KAAKygB,iBAAmBzgB,KAAKkb,sBAAsBC,eAAejD,EAAAwI,gBAAiB1gB,KAAK6f,UAAW7f,KAAKmgB,kBACxGngB,KAAKkb,sBAAsBI,WAAW9C,EAAAmI,iBAAkB3gB,KAAKygB,kBAE7DzgB,KAAKsc,cAAgBtc,KAAKkb,sBAAsBC,eAAe1C,EAAAmI,cAC/D5gB,KAAKkb,sBAAsBI,WAAW9C,EAAAqI,cAAe7gB,KAAKsc,eAE1Dtc,KAAK8gB,wBAA0B9gB,KAAKkb,sBAAsBC,eAAehD,EAAA4I,wBACzE/gB,KAAKkb,sBAAsBI,WAAW9C,EAAAwI,wBAAyBhhB,KAAK8gB,yBAEpE9gB,KAAKmH,eAAiBnH,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAe7C,EAAA2I,cAAejhB,KAAKqF,KAAMrF,KAAK+e,gBAC7G/e,KAAKkb,sBAAsBI,WAAW9C,EAAAxK,eAAgBhO,KAAKmH,gBAC3DnH,KAAKsK,SAAStK,KAAKmH,eAAemN,0BAAyB9N,GAAKxG,KAAKya,UAAUhG,KAAKjO,MACpFxG,KAAK4K,UAASpE,GAAKxG,KAAKmH,eAAgBE,OAAOb,EAAES,KAAMT,EAAEnB,QAEzDrF,KAAKkhB,iBAAmB7H,EAAS/P,cAAc,OAC/CtJ,KAAKkhB,iBAAiB3X,UAAUC,IAAI,oBACpCxJ,KAAKme,mBAAqBne,KAAKkb,sBAAsBC,eAAetS,EAAAsY,kBAAmBnhB,KAAKwd,SAAUxd,KAAKkhB,kBAC3GlhB,KAAKmgB,iBAAiBtW,YAAY7J,KAAKkhB,kBAGvClhB,KAAKsH,QAAQuC,YAAY9B,GAEzB,IACE/H,KAAK8Z,YAAYrF,KAAKzU,KAAKsH,Q,CAE7B,MAAAd,GAAQ,CACHxG,KAAKmH,eAAeia,eACvBphB,KAAKmH,eAAeka,YAAYrhB,KAAKshB,mBAGvCthB,KAAK4R,cAAgB5R,KAAKkb,sBAAsBC,eAAe9C,EAAAkJ,cAC/DvhB,KAAKkb,sBAAsBI,WAAW9C,EAAAgJ,cAAexhB,KAAK4R,eAE1D5R,KAAK6H,SAAW7H,KAAKkb,sBAAsBC,eAAexS,EAAA8Y,SAAUzhB,KAAKigB,iBAAkBjgB,KAAKkgB,qBAChGlgB,KAAK6H,SAAS6Z,sBAAqBlb,GAAKxG,KAAKwN,YAAYhH,EAAEmb,OAAQnb,EAAEob,oBAAqB,KAC1F5hB,KAAKsK,SAAStK,KAAKwb,cAAcqG,wBAAuB,IAAM7hB,KAAK6H,SAAUia,oBAC7E9hB,KAAKsK,SAAStK,KAAK6H,UAEnB7H,KAAKsK,SAAStK,KAAKua,cAAa,KAC9Bva,KAAKmH,eAAgB4a,mBACrB/hB,KAAKie,eAAe,KAEtBje,KAAKsK,SAAStK,KAAK4K,UAAS,IAAM5K,KAAKmH,eAAgB6a,aAAahiB,KAAKiH,KAAMjH,KAAKqF,SACpFrF,KAAKsK,SAAStK,KAAK0L,QAAO,IAAM1L,KAAKmH,eAAgB8a,gBACrDjiB,KAAKsK,SAAStK,KAAKwZ,SAAQ,IAAMxZ,KAAKmH,eAAgB+a,iBACtDliB,KAAKsK,SAAStK,KAAKmH,eAAeyE,oBAAmB,IAAM5L,KAAK6H,SAAUia,oBAE1E9hB,KAAK2e,kBAAoB3e,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAe5C,EAAA4J,iBAC/EniB,KAAKsH,QACLtH,KAAK+e,cACL/e,KAAKib,aAEPjb,KAAKkb,sBAAsBI,WAAW9C,EAAA4J,kBAAmBpiB,KAAK2e,mBAC9D3e,KAAKsK,SAAStK,KAAK2e,kBAAkB+C,sBAAqBlb,GAAKxG,KAAKwN,YAAYhH,EAAEmb,OAAQnb,EAAEob,wBAC5F5hB,KAAKsK,SAAStK,KAAK2e,kBAAkBhE,mBAAkB,IAAM3a,KAAK0a,mBAAmBjG,UACrFzU,KAAKsK,SAAStK,KAAK2e,kBAAkB0D,iBAAgB7b,GAAKxG,KAAKmH,eAAgBmb,uBAAuB9b,EAAEwE,MAAOxE,EAAEyE,IAAKzE,EAAE+b,qBACxHviB,KAAKsK,SAAStK,KAAK2e,kBAAkB6D,uBAAsBhc,IAIzDxG,KAAKwd,SAAUjd,MAAQiG,EACvBxG,KAAKwd,SAAU/P,QACfzN,KAAKwd,SAAU9N,QAAQ,KAEzB1P,KAAKsK,SAAStK,KAAKyiB,UAAUxR,OAAMzK,IACjCxG,KAAK6H,SAAUia,iBACf9hB,KAAK2e,kBAAmBjS,SAAS,KAEnC1M,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKigB,iBAAkB,UAAU,IAAMjgB,KAAK2e,kBAAmBjS,aAEtG1M,KAAKib,WAAWvJ,YAAY1R,KAAK+e,cAAe/e,KAAK4R,cAAe5R,KAAKmH,gBACzEnH,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAevS,EAAA8Z,yBAA0B1iB,KAAK+e,gBACvF/e,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBhM,KAAKsH,QAAS,aAAcd,GAAkBxG,KAAK2e,kBAAmBgE,gBAAgBnc,MAGzHxG,KAAK4iB,iBAAiBC,sBACxB7iB,KAAK2e,kBAAkBmE,UACvB9iB,KAAKsH,QAAQiC,UAAUC,IAAI,wBAE3BxJ,KAAK2e,kBAAkBoE,SAGrB/iB,KAAK6B,QAAQmhB,mBAGfhjB,KAAKoa,sBAAsB7Z,MAAQP,KAAKkb,sBAAsBC,eAAe/B,EAAArQ,qBAAsB/I,OAErGA,KAAKsK,SAAStK,KAAK4e,eAAeqE,uBAAuB,oBAAoBzc,GAAKxG,KAAK0d,oCAAoClX,MAEvHxG,KAAK6B,QAAQqhB,qBACfljB,KAAKmjB,uBAAyBnjB,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAe3S,EAAA4a,sBAAuBpjB,KAAKigB,iBAAkBjgB,KAAK+e,iBAE3I/e,KAAK4e,eAAeqE,uBAAuB,sBAAsBzc,KAC1DxG,KAAKmjB,wBAA0B3c,GAASxG,KAAKigB,kBAAoBjgB,KAAK+e,gBACzE/e,KAAKmjB,uBAAyBnjB,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAe3S,EAAA4a,sBAAuBpjB,KAAKigB,iBAAkBjgB,KAAK+e,gBAAA,IAI7I/e,KAAKygB,iBAAiB4C,UAGtBrjB,KAAK0M,QAAQ,EAAG1M,KAAKqF,KAAO,GAG5BrF,KAAKwe,cAILxe,KAAKsjB,WACP,CAEQhC,eAAAA,GACN,OAAOthB,KAAKkb,sBAAsBC,eAAerS,EAAAya,YAAavjB,KAAKsH,QAAUtH,KAAK+e,cAAgB/e,KAAKigB,iBAAmBjgB,KAAKib,WACjI,CAiBOqI,SAAAA,GACL,MAAM9c,EAAOxG,KACPyG,EAAKzG,KAAKsH,QAGhB,SAASS,EAAUtB,GAEjB,MAAMsB,EAAMvB,EAAKoL,cAAe4R,qBAAqB/c,EAAID,EAAKuY,eAC9D,IAAKhX,EACH,OAAO,EAGT,IAAIK,EACAR,EACJ,OAASnB,EAAWgd,cAAgBhd,EAAGjC,MACrC,IAAK,YACHoD,EAAS,YACLnB,EAAGid,SAELtb,EAAM,WACF3B,EAAGqY,SACL1W,EAAM3B,EAAGqY,OAAS,EAAIrY,EAAGqY,OAAS,IAIpC1W,EAAmB,EAAb3B,EAAGid,QAAc,EACR,EAAbjd,EAAGid,QAAc,EACF,EAAbjd,EAAGid,QAAc,IAGvB,MACF,IAAK,UACH9b,EAAS,EACTQ,EAAM3B,EAAGqY,OAAS,EAAIrY,EAAGqY,OAAS,EAClC,MACF,IAAK,YACHlX,EAAS,EACTQ,EAAM3B,EAAGqY,OAAS,EAAIrY,EAAGqY,OAAS,EAClC,MACF,IAAK,QAGH,GAAe,IAFAtY,EAAKqB,SAAU8b,iBAAiBld,GAG7C,OAAO,EAGTmB,EAAUnB,EAAkBmd,OAAS,EAAI,EAAqB,EAC9Dxb,EAAM,EACN,MACF,QAEE,OAAO,EAKX,iBAAIR,QAAA,IAAwBQ,GAAqBA,EAAM,IAIhD5B,EAAKoc,iBAAiBiB,kBAAkB,CAC7CC,IAAK/b,EAAI+b,IACTC,IAAKhc,EAAIgc,IACT3R,EAAGrK,EAAIqK,EACPC,EAAGtK,EAAIsK,EACPyM,OAAQ1W,EACR4b,OAAApc,EACAqc,KAAMxd,EAAGyd,QACTC,IAAK1d,EAAG2d,OACRjY,MAAO1F,EAAG4d,UAEd,CAUA,MAAMjc,EAAmE,CACvEkc,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPlc,EAAiE,CACrE+b,QAAU9d,IACRuB,EAAUvB,GACLA,EAAGkd,UAEN1jB,KAAK6f,UAAWvS,oBAAoB,UAAWlF,EAAgBkc,SAC3Dlc,EAAgBoc,WAClBxkB,KAAK6f,UAAWvS,oBAAoB,YAAalF,EAAgBoc,YAG9DxkB,KAAK0kB,OAAOle,IAErB+d,MAAQ/d,IACNuB,EAAUvB,GACHxG,KAAK0kB,OAAOle,GAAA,IAErBge,UAAYhe,IAENA,EAAGkd,SACL3b,EAAUvB,EAAA,EAGdie,UAAYje,IAELA,EAAGkd,SACN3b,EAAUvB,EAAA,GAIhBxG,KAAKsK,SAAStK,KAAK4iB,iBAAiB+B,kBAAiBne,IAE/CA,GAC8C,UAA5CxG,KAAK4e,eAAexQ,WAAWwW,UACjC5kB,KAAK2f,YAAYC,MAAM,2BAA4B5f,KAAK4iB,iBAAiBiC,cAAcre,IAEzFxG,KAAKsH,QAASiC,UAAUC,IAAI,uBAC5BxJ,KAAK2e,kBAAmBmE,YAExB9iB,KAAK2f,YAAYC,MAAM,gCACvB5f,KAAKsH,QAASiC,UAAU2C,OAAO,uBAC/BlM,KAAK2e,kBAAmBoE,UAKX,EAATvc,EAGM4B,EAAgBqc,YAC1Bhe,EAAGwD,iBAAiB,YAAa1B,EAAekc,WAChDrc,EAAgBqc,UAAYlc,EAAekc,YAJ3Che,EAAG6G,oBAAoB,YAAalF,EAAgBqc,WACpDrc,EAAgBqc,UAAY,MAMf,GAATje,EAGM4B,EAAgBmc,QAC1B9d,EAAGwD,iBAAiB,QAAS1B,EAAegc,MAAO,CAAEO,SAAA,IACrD1c,EAAgBmc,MAAQhc,EAAegc,QAJvC9d,EAAG6G,oBAAoB,QAASlF,EAAgBmc,OAChDnc,EAAgBmc,MAAQ,MAMX,EAAT/d,EAIM4B,EAAgBkc,UAC1B7d,EAAGwD,iBAAiB,UAAW1B,EAAe+b,SAC9Clc,EAAgBkc,QAAU/b,EAAe+b,UALzCtkB,KAAK6f,UAAWvS,oBAAoB,UAAWlF,EAAgBkc,SAC/D7d,EAAG6G,oBAAoB,UAAWlF,EAAgBkc,SAClDlc,EAAgBkc,QAAU,MAMb,EAAT9d,EAGM4B,EAAgBoc,YAC1Bpc,EAAgBoc,UAAYjc,EAAeic,YAH3CxkB,KAAK6f,UAAWvS,oBAAoB,YAAalF,EAAgBoc,WACjEpc,EAAgBoc,UAAY,UAMhCxkB,KAAK4iB,iBAAiBmC,eAAiB/kB,KAAK4iB,iBAAiBmC,eAK7D/kB,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBvF,EAAI,aAAcD,IAOvD,GANAA,EAAGkH,iBACH1N,KAAKyN,QAKAzN,KAAK4iB,iBAAiBC,uBAAwB7iB,KAAK2e,kBAAmBqG,qBAAqBxe,GAiBhG,OAbAuB,EAAUvB,GAMN4B,EAAgBkc,SAClBtkB,KAAK6f,UAAW5V,iBAAiB,UAAW7B,EAAgBkc,SAE1Dlc,EAAgBoc,WAClBxkB,KAAK6f,UAAW5V,iBAAiB,YAAa7B,EAAgBoc,WAGzDxkB,KAAK0kB,OAAOle,EAAG,KAGxBxG,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBvF,EAAI,SAAUD,IAEnD,IAAI4B,EAAgBmc,MAApB,CAEA,IAAKvkB,KAAK2M,OAAOsY,cAAe,CAG9B,MAAMxe,EAASzG,KAAK6H,SAAU8b,iBAAiBnd,GAG/C,GAAe,IAAXC,EACF,OAIF,MAAMsB,EAAWgR,EAAA8D,GAAGC,KAAO9c,KAAK4c,YAAY1O,gBAAgBgX,sBAAwB,IAAM,MAAQ1e,EAAGod,OAAS,EAAI,IAAM,KACxH,IAAIxb,EAAO,GACX,IAAK,IAAI5B,EAAI,EAAGA,EAAI6B,KAAK8c,IAAI1e,GAASD,IACpC4B,GAAQL,EAGV,OADA/H,KAAK4c,YAAYtO,iBAAiBlG,GAAA,GAC3BpI,KAAK0kB,OAAOle,GAAA,E,CAKrB,OAAIxG,KAAK6H,SAAUud,YAAY5e,GACtBxG,KAAK0kB,OAAOle,QAAA,CAzBY,IA2BhC,CAAEse,SAAA,KAEL9kB,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBvF,EAAI,cAAeD,IACxD,IAAIxG,KAAK4iB,iBAAiBC,qBAE1B,OADA7iB,KAAK6H,SAAUwd,iBAAiB7e,GACzBxG,KAAK0kB,OAAOle,EAAG,GACrB,CAAEse,SAAA,KAEL9kB,KAAKsK,UAAA,EAAS1C,EAAAoE,0BAAyBvF,EAAI,aAAcD,IACvD,IAAIxG,KAAK4iB,iBAAiBC,qBAC1B,OAAK7iB,KAAK6H,SAAUyd,gBAAgB9e,QAAA,EAC3BxG,KAAK0kB,OAAOle,EAAA,GAEpB,CAAEse,SAAA,IACP,CASOpY,OAAAA,CAAQlG,EAAeC,G,MACT,QAAnBsB,EAAA/H,KAAKmH,sBAAA,IAAcY,GAAAA,EAAEwd,YAAY/e,EAAOC,EAC1C,CAKOoX,iBAAAA,CAAkBrX,G,OACG,QAAtBC,EAAAzG,KAAK2e,yBAAA,IAAiBlY,OAAA,EAAAA,EAAE+e,mBAAmBhf,IAC7CxG,KAAKsH,QAASiC,UAAUC,IAAI,iBAE5BxJ,KAAKsH,QAASiC,UAAU2C,OAAO,gBAEnC,CAKQ4R,WAAAA,GACD9d,KAAK4c,YAAY6I,sBACpBzlB,KAAK4c,YAAY6I,qBAAA,EACjBzlB,KAAK0M,QAAQ1M,KAAK2M,OAAO0F,EAAGrS,KAAK2M,OAAO0F,GAE5C,CAEO7E,WAAAA,CAAYhH,EAAcC,EAA+BsB,EAAS,G,MACxD,IAAXA,GACFkB,MAAMuE,YAAYhH,EAAMC,EAAqBsB,GAC7C/H,KAAK0M,QAAQ,EAAG1M,KAAKqF,KAAO,IAEf,QAAb+C,EAAApI,KAAK6H,gBAAA,IAAQO,GAAAA,EAAEoF,YAAYhH,EAE/B,CAEO8I,KAAAA,CAAM9I,IAAA,EACX4B,EAAAkH,OAAM9I,EAAMxG,KAAKwd,SAAWxd,KAAK4c,YAAa5c,KAAK4e,eACrD,CAWO8G,2BAAAA,CAA4Blf,GACjCxG,KAAKqc,uBAAyB7V,CAChC,CAEO+K,oBAAAA,CAAqB/K,GAC1B,OAAOxG,KAAKib,WAAW1J,qBAAqB/K,EAC9C,CAEOmf,uBAAAA,CAAwBnf,GAC7B,IAAKxG,KAAK8gB,wBACR,MAAM,IAAIpW,MAAM,iCAElB,MAAMjE,EAAWzG,KAAK8gB,wBAAwBxW,SAAS9D,GAEvD,OADAxG,KAAK0M,QAAQ,EAAG1M,KAAKqF,KAAO,GACrBoB,CACT,CAEOmf,yBAAAA,CAA0Bpf,GAC/B,IAAKxG,KAAK8gB,wBACR,MAAM,IAAIpW,MAAM,iCAEd1K,KAAK8gB,wBAAwB+E,WAAWrf,IAC1CxG,KAAK0M,QAAQ,EAAG1M,KAAKqF,KAAO,EAEhC,CAEA,WAAAygB,GACE,OAAO9lB,KAAK2M,OAAOmZ,OACrB,CAEOC,cAAAA,CAAevf,GACpB,OAAOxG,KAAK2M,OAAOqZ,UAAUhmB,KAAK2M,OAAO0R,MAAQre,KAAK2M,OAAO0F,EAAI7L,EACnE,CAEOyf,kBAAAA,CAAmBzf,GACxB,OAAOxG,KAAKob,mBAAmB6K,mBAAmBzf,EACpD,CAKOkY,YAAAA,GACL,QAAO1e,KAAK2e,mBAAoB3e,KAAK2e,kBAAkBD,YACzD,CAQOhP,MAAAA,CAAOlJ,EAAgBC,EAAasB,GACzC/H,KAAK2e,kBAAmBuH,aAAa1f,EAAQC,EAAKsB,EACpD,CAMOoe,YAAAA,GACL,OAAOnmB,KAAK2e,kBAAoB3e,KAAK2e,kBAAkBzP,cAAgB,EACzE,CAEOkX,oBAAAA,GACL,GAAKpmB,KAAK2e,mBAAsB3e,KAAK2e,kBAAkBD,aAIvD,MAAO,CACL1T,MAAO,CACLoH,EAAGpS,KAAK2e,kBAAkB0H,eAAgB,GAC1ChU,EAAGrS,KAAK2e,kBAAkB0H,eAAgB,IAE5Cpb,IAAK,CACHmH,EAAGpS,KAAK2e,kBAAkB2H,aAAc,GACxCjU,EAAGrS,KAAK2e,kBAAkB2H,aAAc,IAG9C,CAKOC,cAAAA,G,MACiB,QAAtB/f,EAAAxG,KAAK2e,yBAAA,IAAiBnY,GAAAA,EAAE+f,gBAC1B,CAKOC,SAAAA,G,MACiB,QAAtBhgB,EAAAxG,KAAK2e,yBAAA,IAAiBnY,GAAAA,EAAEggB,WAC1B,CAEOC,WAAAA,CAAYjgB,EAAeC,G,MACV,QAAtBsB,EAAA/H,KAAK2e,yBAAA,IAAiB5W,GAAAA,EAAE0e,YAAYjgB,EAAOC,EAC7C,CAOU0Y,QAAAA,CAAS3Y,GAIjB,GAHAxG,KAAKga,iBAAA,EACLha,KAAKia,cAAA,EAEDja,KAAKqc,yBAAA,IAA0Brc,KAAKqc,uBAAuB7V,GAC7D,OAAO,EAIT,MAAMC,EAA0BzG,KAAK+Z,QAAQzN,OAAStM,KAAK6B,QAAQ6kB,iBAAmBlgB,EAAM4d,OAE5F,IAAK3d,IAA4BzG,KAAKme,mBAAoBwI,QAAQngB,GAIhE,OAHIxG,KAAK6B,QAAQ+kB,mBAAqB5mB,KAAK2M,OAAO0R,QAAUre,KAAK2M,OAAOG,OACtE9M,KAAK6mB,kBAAA,EAKJpgB,GAA0C,SAAdD,EAAMzF,KAAgC,aAAdyF,EAAMzF,MAC7Df,KAAKma,qBAAA,GAGP,MAAMpS,GAAA,EAASiR,EAAA8N,uBAAsBtgB,EAAOxG,KAAK4c,YAAY1O,gBAAgBgX,sBAAuBllB,KAAK+Z,QAAQzN,MAAOtM,KAAK6B,QAAQ6kB,iBAIrI,GAFA1mB,KAAK6d,kBAAkBrX,GAEH,IAAhBuB,EAAOvD,MAAyD,IAAhBuD,EAAOvD,KAAqC,CAC9F,MAAMiC,EAAczG,KAAKqF,KAAO,EAEhC,OADArF,KAAKwN,YAA4B,IAAhBzF,EAAOvD,MAAuCiC,EAAcA,GACtEzG,KAAK0kB,OAAOle,GAAA,E,CAOrB,OAJoB,IAAhBuB,EAAOvD,MACTxE,KAAKwmB,cAGHxmB,KAAK+mB,mBAAmB/mB,KAAK+Z,QAASvT,KAItCuB,EAAO2c,QAET1kB,KAAK0kB,OAAOle,GAAA,IAGTuB,EAAOhH,QAMRyF,EAAMzF,MAAQyF,EAAM0d,UAAY1d,EAAM4d,SAAW5d,EAAMwgB,SAAgC,IAArBxgB,EAAMzF,IAAImJ,QAC1E1D,EAAMzF,IAAIkmB,WAAW,IAAM,IAAMzgB,EAAMzF,IAAIkmB,WAAW,IAAM,MAK9DjnB,KAAKma,qBACPna,KAAKma,qBAAA,GAAsB,IAOzBpS,EAAOhH,MAAQgY,EAAA8D,GAAGqK,KAAOnf,EAAOhH,MAAQgY,EAAA8D,GAAGsK,KAC7CnnB,KAAKwd,SAAUjd,MAAQ,IAGzBP,KAAKwa,OAAO/F,KAAK,CAAE1T,IAAKgH,EAAOhH,IAAKqmB,SAAU5gB,IAC9CxG,KAAK8d,cACL9d,KAAK4c,YAAYtO,iBAAiBvG,EAAOhH,KAAA,IAMpCf,KAAK4e,eAAexQ,WAAW4U,kBAAoBxc,EAAM4d,QAAU5d,EAAM0d,QACrElkB,KAAK0kB,OAAOle,GAAA,QAGrBxG,KAAKga,iBAAA,KACP,CAEQ+M,kBAAAA,CAAmBvgB,EAAmBC,GAC5C,MAAMsB,EACHvB,EAAQ8F,QAAUtM,KAAK6B,QAAQ6kB,iBAAmBjgB,EAAG2d,SAAW3d,EAAGyd,UAAYzd,EAAGugB,SAClFxgB,EAAQ6gB,WAAa5gB,EAAG2d,QAAU3d,EAAGyd,UAAYzd,EAAGugB,SACpDxgB,EAAQ6gB,WAAa5gB,EAAG6gB,iBAAiB,YAE5C,MAAgB,aAAZ7gB,EAAGjC,KACEuD,EAIFA,KAAmBtB,EAAG8gB,SAAW9gB,EAAG8gB,QAAU,GACvD,CAEUrI,MAAAA,CAAO1Y,GACfxG,KAAKia,cAAA,EAEDja,KAAKqc,yBAAA,IAA0Brc,KAAKqc,uBAAuB7V,KA2NnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAG+gB,SACO,KAAf/gB,EAAG+gB,SACY,KAAf/gB,EAAG+gB,OACP,CAJA,CAvNiC/gB,IAC3BxG,KAAKyN,QAGPzN,KAAK6d,kBAAkBrX,GACvBxG,KAAKka,kBAAA,EACP,CAQUkF,SAAAA,CAAU5Y,GAClB,IAAIC,EAIJ,GAFAzG,KAAKka,kBAAA,EAEDla,KAAKga,gBACP,OAAO,EAGT,GAAIha,KAAKqc,yBAAA,IAA0Brc,KAAKqc,uBAAuB7V,GAC7D,OAAO,EAKT,GAFAxG,KAAK0kB,OAAOle,GAERA,EAAGghB,SACL/gB,EAAMD,EAAGghB,cACJ,GAAiB,OAAbhhB,EAAGihB,YAAA,IAAkBjhB,EAAGihB,MACjChhB,EAAMD,EAAG+gB,YACJ,IAAiB,IAAb/gB,EAAGihB,OAA+B,IAAhBjhB,EAAGghB,SAG9B,OAAO,EAFP/gB,EAAMD,EAAGihB,K,CAKX,SAAKhhB,IACFD,EAAG4d,QAAU5d,EAAG0d,SAAW1d,EAAGwgB,WAAahnB,KAAK+mB,mBAAmB/mB,KAAK+Z,QAASvT,KAKpFC,EAAMihB,OAAOC,aAAalhB,GAE1BzG,KAAKwa,OAAO/F,KAAK,CAAE1T,IAAA0F,EAAK2gB,SAAU5gB,IAClCxG,KAAK8d,cACL9d,KAAK4c,YAAYtO,iBAAiB7H,GAAA,GAElCzG,KAAKka,kBAAA,EAILla,KAAKma,qBAAA,EAEE,GACT,CAQUqF,WAAAA,CAAYhZ,GAIpB,GAAIA,EAAG5D,MAAyB,eAAjB4D,EAAGohB,aAAgCphB,EAAGqhB,WAAa7nB,KAAKia,gBAAkBja,KAAK4e,eAAexQ,WAAW4U,iBAAkB,CACxI,GAAIhjB,KAAKka,iBACP,OAAO,EAKTla,KAAKma,qBAAA,EAEL,MAAM1T,EAAOD,EAAG5D,KAIhB,OAHA5C,KAAK4c,YAAYtO,iBAAiB7H,GAAA,GAElCzG,KAAK0kB,OAAOle,IAAA,C,CAId,OAAO,CACT,CAQOa,MAAAA,CAAOb,EAAWC,GACnBD,IAAMxG,KAAKiH,MAAQR,IAAMzG,KAAKqF,KAQlC4D,MAAM5B,OAAOb,EAAGC,GANVzG,KAAKygB,mBAAqBzgB,KAAKygB,iBAAiBqH,cAClD9nB,KAAKygB,iBAAiB4C,SAM5B,CAEQjH,YAAAA,CAAa5V,EAAWC,G,QACT,QAArBsB,EAAA/H,KAAKygB,wBAAA,IAAgB1Y,GAAAA,EAAEsb,UAIV,QAAbjb,EAAApI,KAAK6H,gBAAA,IAAQO,GAAAA,EAAE0Z,gBAAA,EACjB,CAKO1a,KAAAA,G,MACL,GAA0B,IAAtBpH,KAAK2M,OAAO0R,OAAiC,IAAlBre,KAAK2M,OAAO0F,EAA3C,CAIArS,KAAK2M,OAAOob,kBACZ/nB,KAAK2M,OAAOC,MAAMoD,IAAI,EAAGhQ,KAAK2M,OAAOC,MAAMsD,IAAIlQ,KAAK2M,OAAO0R,MAAQre,KAAK2M,OAAO0F,IAC/ErS,KAAK2M,OAAOC,MAAM1C,OAAS,EAC3BlK,KAAK2M,OAAOG,MAAQ,EACpB9M,KAAK2M,OAAO0R,MAAQ,EACpBre,KAAK2M,OAAO0F,EAAI,EAChB,IAAK,IAAI7L,EAAI,EAAGA,EAAIxG,KAAKqF,KAAMmB,IAC7BxG,KAAK2M,OAAOC,MAAMH,KAAKzM,KAAK2M,OAAOqb,aAAalP,EAAAmP,oBAIlDjoB,KAAKyiB,UAAUhO,KAAK,CAAEyT,SAAUloB,KAAK2M,OAAOG,MAAOqb,OAAQ,IAC9C,QAAb3hB,EAAAxG,KAAK6H,gBAAA,IAAQrB,GAAAA,EAAEsV,QACf9b,KAAK0M,QAAQ,EAAG1M,KAAKqF,KAAO,E,CAC9B,CAUOyW,KAAAA,G,QAKL9b,KAAK6B,QAAQwD,KAAOrF,KAAKqF,KACzBrF,KAAK6B,QAAQoF,KAAOjH,KAAKiH,KACzB,MAAMc,EAAwB/H,KAAKqc,uBAEnCrc,KAAKgb,SACL/R,MAAM6S,QACgB,QAAtBtV,EAAAxG,KAAK2e,yBAAA,IAAiBnY,GAAAA,EAAEsV,QACxB9b,KAAKob,mBAAmBU,QACX,QAAbrV,EAAAzG,KAAK6H,gBAAA,IAAQpB,GAAAA,EAAEqV,QAGf9b,KAAKqc,uBAAyBtU,EAG9B/H,KAAK0M,QAAQ,EAAG1M,KAAKqF,KAAO,EAC9B,CAEO+iB,iBAAAA,G,MACc,QAAnB5hB,EAAAxG,KAAKmH,sBAAA,IAAcX,GAAAA,EAAE4hB,mBACvB,CAEQxM,YAAAA,G,OACU,QAAZpV,EAAAxG,KAAKsH,eAAA,IAAOd,OAAA,EAAAA,EAAE+C,UAAU2I,SAAS,UACnClS,KAAK4c,YAAYtO,iBAAiByK,EAAA8D,GAAGC,IAAM,MAE3C9c,KAAK4c,YAAYtO,iBAAiByK,EAAA8D,GAAGC,IAAM,KAE/C,CAEQd,qBAAAA,CAAsBxV,GAC5B,GAAKxG,KAAKmH,eAIV,OAAQX,GACN,KAAK2S,EAAAkP,yBAAyBC,oBAC5B,MAAM9hB,EAAcxG,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAOpG,MAAM4gB,QAAQ,GACtE9hB,EAAezG,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAO5M,OAAOonB,QAAQ,GAC9EvoB,KAAK4c,YAAYtO,iBAAiB,GAAGyK,EAAA8D,GAAGC,SAASrW,KAAgBD,MACjE,MACF,KAAK2S,EAAAkP,yBAAyBG,qBAC5B,MAAMzgB,EAAY/H,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MAAM4gB,QAAQ,GAClEngB,EAAapI,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OAAOonB,QAAQ,GAC1EvoB,KAAK4c,YAAYtO,iBAAiB,GAAGyK,EAAA8D,GAAGC,SAAS1U,KAAcL,MAGrE,CAGO2c,MAAAA,CAAOle,EAAWC,GACvB,GAAKzG,KAAK6B,QAAQ4mB,cAAiBhiB,EAKnC,OAFAD,EAAGkH,iBACHlH,EAAG4I,mBAAA,CAEL,EA9sCF3I,EAAAzB,SAAAsU,CAAAA,E,0FCnDA7S,EAAA8D,mBAAA,MAYE7I,WAAAA,CACU8E,EACSC,EArBgB,KAoBzB,KAAAmQ,gBAAApQ,EACS,KAAAkiB,qBAAAjiB,EARX,KAAAkiB,eAAiB,EAEjB,KAAAC,6BAAA,CAQR,CAEO1lB,OAAAA,GACDlD,KAAK6oB,mBACPC,aAAa9oB,KAAK6oB,kBAEtB,CAEOnc,OAAAA,CAAQlG,EAA8BC,EAA4BsB,GACvE/H,KAAKmX,UAAYpP,EAEjBvB,OAAA,IAAWA,EAAyBA,EAAW,EAC/CC,OAAA,IAASA,EAAuBA,EAASzG,KAAKmX,UAAY,EAE1DnX,KAAKoX,eAAA,IAAYpX,KAAKoX,UAA0B/O,KAAKgP,IAAIrX,KAAKoX,UAAW5Q,GAAYA,EACrFxG,KAAKsX,aAAA,IAAUtX,KAAKsX,QAAwBjP,KAAKC,IAAItI,KAAKsX,QAAS7Q,GAAUA,EAI7E,MAAM2B,EAA6B2gB,KAAKC,MACxC,GAAI5gB,EAAqBpI,KAAK2oB,gBAAkB3oB,KAAK0oB,qBAEnD1oB,KAAK2oB,eAAiBvgB,EACtBpI,KAAKkX,qBACA,IAAKlX,KAAK4oB,4BAA6B,CAE5C,MAAMpiB,EAAU4B,EAAqBpI,KAAK2oB,eACpCliB,EAAkCzG,KAAK0oB,qBAAuBliB,EACpExG,KAAK4oB,6BAAA,EAEL5oB,KAAK6oB,kBAAoB9mB,OAAO2C,YAAW,KACzC1E,KAAK2oB,eAAiBI,KAAKC,MAC3BhpB,KAAKkX,gBACLlX,KAAK4oB,6BAAA,EACL5oB,KAAK6oB,uBAAA,CAA6B,GACjCpiB,E,CAEP,CAEQyQ,aAAAA,GAEN,QAAI,IAAAlX,KAAKoX,gBAAA,IAA2BpX,KAAKsX,cAAA,IAAyBtX,KAAKmX,UACrE,OAIF,MAAM3Q,EAAQ6B,KAAKC,IAAItI,KAAKoX,UAAW,GACjC3Q,EAAM4B,KAAKgP,IAAIrX,KAAKsX,QAAStX,KAAKmX,UAAY,GAGpDnX,KAAKoX,eAAA,EACLpX,KAAKsX,aAAA,EAGLtX,KAAK4W,gBAAgBpQ,EAAOC,EAC9B,EAAC,E,6fC9EH,MAAA8B,EAAAR,EAAA,MAGAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,KAEAa,EAAAb,EAAA,MAcO,IAAMS,EAAQ/B,EAAAgb,SAAd,cAAuB9Y,EAAAK,WA4B5BtH,WAAAA,CACmB8E,EACAC,EACDsB,EACCK,EACCR,EACFK,EACKU,EACNC,GAEfK,QATiB,KAAAgX,iBAAAzZ,EACA,KAAAyiB,YAAAxiB,EACgB,KAAA+J,eAAAzI,EACC,KAAAqN,gBAAAhN,EACC,KAAAqY,iBAAA7Y,EACF,KAAAT,eAAAc,EACK,KAAAoY,oBAAA1X,EAlCjC,KAAAb,eAAyB,EACxB,KAAAohB,kBAA4B,EAC5B,KAAAC,yBAAmC,EACnC,KAAAC,0BAAoC,EACpC,KAAAC,4BAAsC,EACtC,KAAAC,0BAAoC,EACpC,KAAAC,YAAsB,EACtB,KAAAC,eAAyB,EAOzB,KAAAC,oBAA8B,EAE9B,KAAAC,uBAAwC,KACxC,KAAAC,wBAAA,EACA,KAAAC,mBAAyC,CAC/CC,UAAW,EACXC,QAAS,EACT7c,QAAS,GAGM,KAAA8c,sBAAwB/pB,KAAKsK,SAAS,IAAI7B,EAAAsI,cAC3C,KAAA2Q,qBAAuB1hB,KAAK+pB,sBAAsB9Y,MAiBhEjR,KAAK8H,eAAkB9H,KAAKigB,iBAAiB+J,YAAchqB,KAAKipB,YAAYe,aAvD9C,GAwD9BhqB,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBhM,KAAKigB,iBAAkB,SAAUjgB,KAAKiqB,cAAcxf,KAAKzK,QAGhGA,KAAKkqB,cAAgBlqB,KAAKwQ,eAAe7D,OACzC3M,KAAKsK,SAAStK,KAAKwQ,eAAe8M,QAAQ6M,kBAAiB3jB,GAAKxG,KAAKkqB,cAAgB1jB,EAAE4jB,gBACvFpqB,KAAKqqB,kBAAoBrqB,KAAKmH,eAAeK,WAC7CxH,KAAKsK,SAAStK,KAAKmH,eAAeyE,oBAAmBpF,GAAKxG,KAAKqqB,kBAAoB7jB,KAEnFxG,KAAKsqB,mBAAmB1hB,EAAa8T,QACrC1c,KAAKsK,SAAS1B,EAAa2hB,gBAAe/jB,GAAKxG,KAAKsqB,mBAAmB9jB,MACvExG,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,cAAc,IAAMjjB,KAAK8hB,oBAGnFpd,YAAW,IAAM1E,KAAK8hB,kBACxB,CAEQwI,kBAAAA,CAAmB9jB,GACzBxG,KAAKigB,iBAAiB/e,MAAMspB,gBAAkBhkB,EAAOX,WAAW4B,GAClE,CAEOqU,KAAAA,GACL9b,KAAKkpB,kBAAoB,EACzBlpB,KAAKmpB,yBAA2B,EAChCnpB,KAAKopB,0BAA4B,EACjCppB,KAAKqpB,4BAA8B,EACnCrpB,KAAKspB,0BAA4B,EACjCtpB,KAAKupB,YAAc,EACnBvpB,KAAKwpB,eAAiB,EAEtBxpB,KAAKqgB,oBAAoBte,OAAOkV,uBAAsB,IAAMjX,KAAK8hB,kBACnE,CAMQ2I,QAAAA,CAASjkB,GACf,GAAIA,EAKF,OAJAxG,KAAKkX,qBAC+B,OAAhClX,KAAK0pB,wBACP1pB,KAAKqgB,oBAAoBte,OAAOgV,qBAAqB/W,KAAK0pB,yBAI1B,OAAhC1pB,KAAK0pB,yBACP1pB,KAAK0pB,uBAAyB1pB,KAAKqgB,oBAAoBte,OAAOkV,uBAAsB,IAAMjX,KAAKkX,kBAEnG,CAEQA,aAAAA,GACN,GAAIlX,KAAKygB,iBAAiBtf,OAAS,EAAG,CACpCnB,KAAKkpB,kBAAoBlpB,KAAKmH,eAAeK,WAAWkjB,OAAOhjB,KAAKvG,OAASnB,KAAKqgB,oBAAoBsK,IACtG3qB,KAAKmpB,yBAA2BnpB,KAAKmH,eAAeK,WAAWkjB,OAAOhjB,KAAKvG,OAC3EnB,KAAKqpB,4BAA8BrpB,KAAKigB,iBAAiB2K,aACzD,MAAMpkB,EAAkB6B,KAAKwiB,MAAM7qB,KAAKkpB,kBAAoBlpB,KAAKopB,4BAA8BppB,KAAKqpB,4BAA8BrpB,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAO5M,QACxKnB,KAAKspB,4BAA8B9iB,IACrCxG,KAAKspB,0BAA4B9iB,EACjCxG,KAAKipB,YAAY/nB,MAAMC,OAASnB,KAAKspB,0BAA4B,K,CAKrE,MAAM9iB,EAAYxG,KAAKwQ,eAAe7D,OAAOG,MAAQ9M,KAAKkpB,kBACtDlpB,KAAKigB,iBAAiB6K,YAActkB,IAGtCxG,KAAK2pB,wBAAA,EACL3pB,KAAKigB,iBAAiB6K,UAAYtkB,GAGpCxG,KAAK0pB,uBAAyB,IAChC,CAKO5H,cAAAA,CAAetb,GAAA,GAEpB,GAAIxG,KAAKopB,4BAA8BppB,KAAKwQ,eAAe7D,OAAOC,MAAM1C,OAGtE,OAFAlK,KAAKopB,0BAA4BppB,KAAKwQ,eAAe7D,OAAOC,MAAM1C,YAClElK,KAAKyqB,SAASjkB,GAKZxG,KAAKqpB,8BAAgCrpB,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAO5M,QAM/EnB,KAAKwpB,iBAAmBxpB,KAAKkqB,cAAcpd,MAAQ9M,KAAKkpB,mBAMxDlpB,KAAKqqB,kBAAkBK,OAAOhjB,KAAKvG,SAAWnB,KAAKmpB,0BAXrDnpB,KAAKyqB,SAASjkB,EAelB,CAOQyjB,aAAAA,CAAczjB,GAMpB,GAJAxG,KAAKwpB,eAAiBxpB,KAAKigB,iBAAiB6K,WAIvC9qB,KAAKigB,iBAAiB8K,aACzB,OAIF,GAAI/qB,KAAK2pB,uBAIP,OAHA3pB,KAAK2pB,wBAAA,OAEL3pB,KAAK+pB,sBAAsBtV,KAAK,CAAEkN,OAAQ,EAAGC,qBAAA,IAI/C,MACMnb,EADS4B,KAAKwiB,MAAM7qB,KAAKwpB,eAAiBxpB,KAAKkpB,mBAC/BlpB,KAAKwQ,eAAe7D,OAAOG,MACjD9M,KAAK+pB,sBAAsBtV,KAAK,CAAEkN,OAAQlb,EAAMmb,qBAAA,GAClD,CAEQoJ,aAAAA,GAEN,GAAIhrB,KAAKirB,cAAmD,IAApCjrB,KAAK4pB,mBAAmBE,SAAqD,IAApC9pB,KAAK4pB,mBAAmB3c,OACvF,OAIF,MAAMzG,EAAUxG,KAAKkrB,uBACrBlrB,KAAKigB,iBAAiB6K,UAAY9qB,KAAK4pB,mBAAmBE,OAASzhB,KAAKwiB,MAAMrkB,GAAWxG,KAAK4pB,mBAAmB3c,OAASjN,KAAK4pB,mBAAmBE,SAG9ItjB,EAAU,EACZxG,KAAKqgB,oBAAoBte,OAAOkV,uBAAsB,IAAMjX,KAAKgrB,kBAEjEhrB,KAAKmrB,yBAET,CAEQD,oBAAAA,GACN,OAAKlrB,KAAKoV,gBAAgBhH,WAAWgd,sBAAyBprB,KAAK4pB,mBAAmBC,UAG/ExhB,KAAKC,IAAID,KAAKgP,KAAK0R,KAAKC,MAAQhpB,KAAK4pB,mBAAmBC,WAAa7pB,KAAKoV,gBAAgBhH,WAAWgd,qBAAsB,GAAI,GAF7H,CAGX,CAEQD,uBAAAA,GACNnrB,KAAK4pB,mBAAmBC,UAAY,EACpC7pB,KAAK4pB,mBAAmBE,QAAU,EAClC9pB,KAAK4pB,mBAAmB3c,QAAU,CACpC,CAOQoe,aAAAA,CAAc7kB,EAAWC,GAC/B,MAAMsB,EAAmB/H,KAAKigB,iBAAiB6K,UAAY9qB,KAAKqpB,4BAChE,QAAK5iB,EAAS,GAAyC,IAApCzG,KAAKigB,iBAAiB6K,WACtCrkB,EAAS,GAAKsB,EAAmB/H,KAAKspB,6BACnC9iB,EAAG8kB,YACL9kB,EAAGkH,kBAAA,EAKT,CAQO0X,WAAAA,CAAY5e,GACjB,MAAMC,EAASzG,KAAKurB,mBAAmB/kB,GACvC,OAAe,IAAXC,IAGCzG,KAAKoV,gBAAgBhH,WAAWgd,sBAGnCprB,KAAK4pB,mBAAmBC,UAAYd,KAAKC,MACrChpB,KAAKkrB,uBAAyB,GAChClrB,KAAK4pB,mBAAmBE,OAAS9pB,KAAKigB,iBAAiB6K,WACf,IAApC9qB,KAAK4pB,mBAAmB3c,OAC1BjN,KAAK4pB,mBAAmB3c,OAASjN,KAAKigB,iBAAiB6K,UAAYrkB,EAEnEzG,KAAK4pB,mBAAmB3c,QAAUxG,EAEpCzG,KAAK4pB,mBAAmB3c,OAAS5E,KAAKC,IAAID,KAAKgP,IAAIrX,KAAK4pB,mBAAmB3c,OAAQjN,KAAKigB,iBAAiBuL,cAAe,GACxHxrB,KAAKgrB,iBAELhrB,KAAKmrB,2BAbPnrB,KAAKigB,iBAAiB6K,WAAarkB,EAgB9BzG,KAAKqrB,cAAc7kB,EAAIC,GAChC,CAEO+G,WAAAA,CAAYhH,GACjB,GAAa,IAATA,EAGJ,GAAKxG,KAAKoV,gBAAgBhH,WAAWgd,qBAE9B,CACL,MAAM3kB,EAASD,EAAOxG,KAAKkpB,kBAC3BlpB,KAAK4pB,mBAAmBC,UAAYd,KAAKC,MACrChpB,KAAKkrB,uBAAyB,GAChClrB,KAAK4pB,mBAAmBE,OAAS9pB,KAAKigB,iBAAiB6K,UACvD9qB,KAAK4pB,mBAAmB3c,OAASjN,KAAK4pB,mBAAmBE,OAASrjB,EAClEzG,KAAK4pB,mBAAmB3c,OAAS5E,KAAKC,IAAID,KAAKgP,IAAIrX,KAAK4pB,mBAAmB3c,OAAQjN,KAAKigB,iBAAiBuL,cAAe,GACxHxrB,KAAKgrB,iBAELhrB,KAAKmrB,yB,MAVPnrB,KAAK+pB,sBAAsBtV,KAAK,CAAEkN,OAAQnb,EAAMob,qBAAA,GAapD,CAEQ2J,kBAAAA,CAAmB/kB,GAEzB,GAAkB,IAAdA,EAAGod,QAAgBpd,EAAG6d,SACxB,OAAO,EAIT,IAAI5d,EAASzG,KAAKyrB,qBAAqBjlB,EAAGod,OAAQpd,GAMlD,OALIA,EAAGklB,YAAcC,WAAWC,eAC9BnlB,GAAUzG,KAAKkpB,kBACN1iB,EAAGklB,YAAcC,WAAWE,iBACrCplB,GAAUzG,KAAKkpB,kBAAoBlpB,KAAKwQ,eAAenL,MAElDoB,CACT,CAGOqlB,iBAAAA,CAAkBtlB,EAAmBC,G,MAC1C,IACI2B,EADAR,EAAsB,GAE1B,MAAMW,EAAgC,GAChCN,EAAM,MAAAxB,EAAAA,EAAWzG,KAAKwQ,eAAe7D,OAAOC,MAAM1C,OAClDzB,EAAQzI,KAAKwQ,eAAe7D,OAAOC,MACzC,IAAK,IAAInG,EAAID,EAAWC,EAAIwB,EAAKxB,IAAK,CACpC,MAAMD,EAAOiC,EAAMyH,IAAIzJ,GACvB,IAAKD,EACH,SAEF,MAAMyB,EAA4B,QAAhBF,EAAAU,EAAMyH,IAAIzJ,EAAI,cAAEsB,OAAA,EAAAA,EAAEgkB,UAEpC,GADAnkB,GAAepB,EAAKwlB,mBAAmB/jB,IAClCA,GAAaxB,IAAMgC,EAAMyB,OAAS,EAAG,CACxC,MAAM1D,EAAMJ,SAASkD,cAAc,OACnC9C,EAAI4F,YAAcxE,EAClBW,EAAekE,KAAKjG,GAChBoB,EAAYsC,OAAS,IACvB9B,EAAgB5B,GAElBoB,EAAc,E,EAGlB,MAAO,CAAEqkB,eAAA1jB,EAAgB2jB,cAAA9jB,EAC3B,CAOOub,gBAAAA,CAAiBnd,GAEtB,GAAkB,IAAdA,EAAGod,QAAgBpd,EAAG6d,SACxB,OAAO,EAIT,IAAI5d,EAASzG,KAAKyrB,qBAAqBjlB,EAAGod,OAAQpd,GASlD,OARIA,EAAGklB,YAAcC,WAAWQ,iBAC9B1lB,GAAUzG,KAAKkpB,kBAAoB,EACnClpB,KAAKypB,qBAAuBhjB,EAC5BA,EAAS4B,KAAKK,MAAML,KAAK8c,IAAInlB,KAAKypB,uBAAyBzpB,KAAKypB,oBAAsB,EAAI,GAAK,GAC/FzpB,KAAKypB,qBAAuB,GACnBjjB,EAAGklB,YAAcC,WAAWE,iBACrCplB,GAAUzG,KAAKwQ,eAAenL,MAEzBoB,CACT,CAEQglB,oBAAAA,CAAqBjlB,EAAgBC,GAC3C,MAAMsB,EAAW/H,KAAKoV,gBAAgBhH,WAAWge,mBAEjD,MAAkB,QAAbrkB,GAAsBtB,EAAG2d,QACd,SAAbrc,GAAuBtB,EAAGyd,SACb,UAAbnc,GAAwBtB,EAAG4d,SACrB7d,EAASxG,KAAKoV,gBAAgBhH,WAAWie,sBAAwBrsB,KAAKoV,gBAAgBhH,WAAWke,kBAGnG9lB,EAASxG,KAAKoV,gBAAgBhH,WAAWke,iBAClD,CAMOjH,gBAAAA,CAAiB7e,GACtBxG,KAAKupB,YAAc/iB,EAAG+lB,QAAQ,GAAGC,KACnC,CAMOlH,eAAAA,CAAgB9e,GACrB,MAAMC,EAASzG,KAAKupB,YAAc/iB,EAAG+lB,QAAQ,GAAGC,MAEhD,OADAxsB,KAAKupB,YAAc/iB,EAAG+lB,QAAQ,GAAGC,MAClB,IAAX/lB,IAGJzG,KAAKigB,iBAAiB6K,WAAarkB,EAC5BzG,KAAKqrB,cAAc7kB,EAAIC,GAChC,G,WArXW+B,EAAQJ,EAAA,CA+BhBR,EAAA,EAAAgB,EAAAqM,gBACArN,EAAA,EAAAgB,EAAA4N,iBACA5O,EAAA,EAAAK,EAAA0Y,kBACA/Y,EAAA,EAAAK,EAAA+F,gBACApG,EAAA,EAAAK,EAAAuY,qBACA5Y,EAAA,EAAAK,EAAA4Y,gBApCQrY,E,+gBCrBb,MAAAD,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,KACAY,EAAAZ,EAAA,MAEO,IAAMa,EAAwBnC,EAAAic,yBAA9B,cAAuCja,EAAAO,WAQ5CtH,WAAAA,CACmB8E,EACDC,EACIsB,EACJK,GAEhBa,QALiB,KAAAwjB,eAAAjmB,EACgB,KAAAgK,eAAA/J,EACI,KAAA2U,mBAAArT,EACJ,KAAAZ,eAAAiB,EAVlB,KAAAskB,oBAA6D,IAAI9Z,IAG1E,KAAA+Z,oBAAA,EACA,KAAAC,oBAAA,EAUN5sB,KAAK6sB,WAAazmB,SAASkD,cAAc,OACzCtJ,KAAK6sB,WAAWtjB,UAAUC,IAAI,8BAC9BxJ,KAAKysB,eAAe5iB,YAAY7J,KAAK6sB,YAErC7sB,KAAKsK,SAAStK,KAAKmH,eAAemN,0BAAyB,IAAMtU,KAAK8sB,2BACtE9sB,KAAKsK,SAAStK,KAAKmH,eAAeyE,oBAAmB,KACnD5L,KAAK4sB,oBAAA,EACL5sB,KAAK+sB,eAAe,KAEtB/sB,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBjK,OAAQ,UAAU,IAAM/B,KAAK+sB,mBACpE/sB,KAAKsK,SAAStK,KAAKwQ,eAAe8M,QAAQ6M,kBAAiB,KACzDnqB,KAAK2sB,mBAAqB3sB,KAAKwQ,eAAe7D,SAAW3M,KAAKwQ,eAAe8M,QAAQ6G,GAAG,KAE1FnkB,KAAKsK,SAAStK,KAAKob,mBAAmB4R,wBAAuB,IAAMhtB,KAAK+sB,mBACxE/sB,KAAKsK,SAAStK,KAAKob,mBAAmB6R,qBAAoBzmB,GAAcxG,KAAKktB,kBAAkB1mB,MAC/FxG,KAAKsK,UAAA,EAAS7B,EAAAwD,eAAa,KACzBjM,KAAK6sB,WAAW3gB,SAChBlM,KAAK0sB,oBAAoBtlB,OAAO,IAEpC,CAEQ2lB,aAAAA,QAAA,IACF/sB,KAAK8W,kBAGT9W,KAAK8W,gBAAkB9W,KAAKmH,eAAe6P,oBAAmB,KAC5DhX,KAAK8sB,wBACL9sB,KAAK8W,qBAAA,CAA2B,IAEpC,CAEQgW,qBAAAA,GACN,IAAK,MAAMtmB,KAAcxG,KAAKob,mBAAmBvH,YAC/C7T,KAAKmtB,kBAAkB3mB,GAEzBxG,KAAK4sB,oBAAA,CACP,CAEQO,iBAAAA,CAAkB3mB,GACxBxG,KAAKotB,cAAc5mB,GACfxG,KAAK4sB,oBACP5sB,KAAKqtB,kBAAkB7mB,EAE3B,CAEQ8mB,cAAAA,CAAe9mB,G,QACrB,MAAM4B,EAAUhC,SAASkD,cAAc,OACvClB,EAAQmB,UAAUC,IAAI,oBACtBpB,EAAQmB,UAAU6K,OAAO,6BAA6D,SAAZ,QAAnB3N,EAAA,MAAAD,OAAA,EAAAA,EAAY3E,eAAA,IAAO4E,OAAA,EAAAA,EAAE8mB,QAC5EnlB,EAAQlH,MAAMyG,MAAQ,GAAGU,KAAKwiB,OAAOrkB,EAAW3E,QAAQ8F,OAAS,GAAK3H,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,WAC9GS,EAAQlH,MAAMC,QAAaqF,EAAW3E,QAAQV,QAAU,GAAKnB,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OAA9E,KACvBiH,EAAQlH,MAAMyN,KAAUnI,EAAWgnB,OAAOC,KAAOztB,KAAKwQ,eAAe8M,QAAQC,OAAOzQ,OAAS9M,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OAAjH,KACpBiH,EAAQlH,MAAMqd,WAAa,GAAGve,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,WAEtE,MAAMyG,EAAwB,QAApBG,EAAAvB,EAAW3E,QAAQuQ,SAAA,IAACrK,EAAAA,EAAI,EAOlC,OANIH,GAAKA,EAAI5H,KAAKwQ,eAAevJ,OAE/BmB,EAAQlH,MAAMwsB,QAAU,QAE1B1tB,KAAKqtB,kBAAkB7mB,EAAY4B,GAE5BA,CACT,CAEQglB,aAAAA,CAAc5mB,GACpB,MAAMC,EAAOD,EAAWgnB,OAAOC,KAAOztB,KAAKwQ,eAAe8M,QAAQC,OAAOzQ,MACzE,GAAIrG,EAAO,GAAKA,GAAQzG,KAAKwQ,eAAenL,KAEtCmB,EAAWc,UACbd,EAAWc,QAAQpG,MAAMwsB,QAAU,OACnClnB,EAAWmnB,gBAAgBlZ,KAAKjO,EAAWc,cAExC,CACL,IAAIS,EAAU/H,KAAK0sB,oBAAoBxc,IAAI1J,GACtCuB,IACHA,EAAU/H,KAAKstB,eAAe9mB,GAC9BA,EAAWc,QAAUS,EACrB/H,KAAK0sB,oBAAoB1c,IAAIxJ,EAAYuB,GACzC/H,KAAK6sB,WAAWhjB,YAAY9B,GAC5BvB,EAAWonB,WAAU,KACnB5tB,KAAK0sB,oBAAoBmB,OAAOrnB,GAChCuB,EAASmE,QAAQ,KAGrBnE,EAAQ7G,MAAMyN,IAASlI,EAAOzG,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OAAlD,KACpB4G,EAAQ7G,MAAMwsB,QAAU1tB,KAAK2sB,mBAAqB,OAAS,QAC3DnmB,EAAWmnB,gBAAgBlZ,KAAK1M,E,CAEpC,CAEQslB,iBAAAA,CAAkB7mB,EAAiCC,EAAmCD,EAAWc,S,MACvG,IAAKb,EACH,OAEF,MAAM2B,EAAwB,QAApBL,EAAAvB,EAAW3E,QAAQuQ,SAAA,IAACrK,EAAAA,EAAI,EACY,WAAzCvB,EAAW3E,QAAQisB,QAAU,QAChCrnB,EAAQvF,MAAM6sB,MAAQ3lB,EAAOA,EAAIpI,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MAA/C,KAA2D,GAErFlB,EAAQvF,MAAMuN,KAAOrG,EAAOA,EAAIpI,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MAA/C,KAA2D,EAExF,CAEQulB,iBAAAA,CAAkB1mB,G,MACgB,QAAxCC,EAAAzG,KAAK0sB,oBAAoBxc,IAAI1J,UAAA,IAAWC,GAAAA,EAAEyF,SAC1ClM,KAAK0sB,oBAAoBmB,OAAOrnB,GAChCA,EAAWtD,SACb,G,2BA1HW0F,EAAwBR,EAAA,CAUhCR,EAAA,EAAAe,EAAAsM,gBACArN,EAAA,EAAAe,EAAA4S,oBACA3T,EAAA,EAAAK,EAAA+F,iBAZQpF,E,wFCqBbnC,EAAAunB,eAAA,MAAAtsB,WAAAA,GACU,KAAAusB,OAAuB,GAKvB,KAAAC,UAA0B,GAC1B,KAAAC,eAAiB,EAEjB,KAAAC,aAA+C,CACrDC,KAAM,EACN5f,KAAM,EACN6f,OAAQ,EACRP,MAAO,EAwEX,CArEE,SAAAQ,GAGE,OADAvuB,KAAKkuB,UAAUhkB,OAAS7B,KAAKgP,IAAIrX,KAAKkuB,UAAUhkB,OAAQlK,KAAKiuB,OAAO/jB,QAC7DlK,KAAKiuB,MACd,CAEO7mB,KAAAA,GACLpH,KAAKiuB,OAAO/jB,OAAS,EACrBlK,KAAKmuB,eAAiB,CACxB,CAEOK,aAAAA,CAAchoB,GACnB,GAAKA,EAAW3E,QAAQ4sB,qBAAxB,CAGA,IAAK,MAAMhoB,KAAKzG,KAAKiuB,OACnB,GAAIxnB,EAAE+V,QAAUhW,EAAW3E,QAAQ4sB,qBAAqBjS,OACpD/V,EAAEyhB,WAAa1hB,EAAW3E,QAAQ4sB,qBAAqBvG,SAAU,CACnE,GAAIloB,KAAK0uB,oBAAoBjoB,EAAGD,EAAWgnB,OAAOC,MAChD,OAEF,GAAIztB,KAAK2uB,oBAAoBloB,EAAGD,EAAWgnB,OAAOC,KAAMjnB,EAAW3E,QAAQ4sB,qBAAqBvG,UAE9F,YADAloB,KAAK4uB,eAAenoB,EAAGD,EAAWgnB,OAAOC,K,CAM/C,GAAIztB,KAAKmuB,eAAiBnuB,KAAKkuB,UAAUhkB,OAMvC,OALAlK,KAAKkuB,UAAUluB,KAAKmuB,gBAAgB3R,MAAQhW,EAAW3E,QAAQ4sB,qBAAqBjS,MACpFxc,KAAKkuB,UAAUluB,KAAKmuB,gBAAgBjG,SAAW1hB,EAAW3E,QAAQ4sB,qBAAqBvG,SACvFloB,KAAKkuB,UAAUluB,KAAKmuB,gBAAgBU,gBAAkBroB,EAAWgnB,OAAOC,KACxEztB,KAAKkuB,UAAUluB,KAAKmuB,gBAAgBW,cAAgBtoB,EAAWgnB,OAAOC,UACtEztB,KAAKiuB,OAAOxhB,KAAKzM,KAAKkuB,UAAUluB,KAAKmuB,mBAIvCnuB,KAAKiuB,OAAOxhB,KAAK,CACf+P,MAAOhW,EAAW3E,QAAQ4sB,qBAAqBjS,MAC/C0L,SAAU1hB,EAAW3E,QAAQ4sB,qBAAqBvG,SAClD2G,gBAAiBroB,EAAWgnB,OAAOC,KACnCqB,cAAetoB,EAAWgnB,OAAOC,OAEnCztB,KAAKkuB,UAAUzhB,KAAKzM,KAAKiuB,OAAOjuB,KAAKiuB,OAAO/jB,OAAS,IACrDlK,KAAKmuB,gB,CACP,CAEOY,UAAAA,CAAWvoB,GAChBxG,KAAKouB,aAAe5nB,CACtB,CAEQkoB,mBAAAA,CAAoBloB,EAAkBC,GAC5C,OACEA,GAAQD,EAAKqoB,iBACbpoB,GAAQD,EAAKsoB,aAEjB,CAEQH,mBAAAA,CAAoBnoB,EAAkBC,EAAcsB,GAC1D,OACGtB,GAAQD,EAAKqoB,gBAAkB7uB,KAAKouB,aAAarmB,GAAY,SAC7DtB,GAAQD,EAAKsoB,cAAgB9uB,KAAKouB,aAAarmB,GAAY,OAEhE,CAEQ6mB,cAAAA,CAAepoB,EAAkBC,GACvCD,EAAKqoB,gBAAkBxmB,KAAKgP,IAAI7Q,EAAKqoB,gBAAiBpoB,GACtDD,EAAKsoB,cAAgBzmB,KAAKC,IAAI9B,EAAKsoB,cAAeroB,EACpD,EAAC,E,0gBC9GH,MAAA8B,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,KACAa,EAAAb,EAAA,MAIMS,EAAa,CACjB6lB,KAAM,EACN5f,KAAM,EACN6f,OAAQ,EACRP,MAAO,GAEHllB,EAAY,CAChBwlB,KAAM,EACN5f,KAAM,EACN6f,OAAQ,EACRP,MAAO,GAEHjlB,EAAQ,CACZulB,KAAM,EACN5f,KAAM,EACN6f,OAAQ,EACRP,MAAO,GAGF,IAAM7V,EAAqBzR,EAAA2c,sBAA3B,cAAoCza,EAAAK,WAIzC,UAAAgmB,GACE,OAAOhvB,KAAKoV,gBAAgBvT,QAAQqhB,oBAAsB,CAC5D,CASAxhB,WAAAA,CACmB8E,EACAC,EACDsB,EACIK,EACJR,EACCK,EACIQ,G,MAErBQ,QARiB,KAAAgX,iBAAAzZ,EACA,KAAAimB,eAAAhmB,EACgB,KAAA+J,eAAAzI,EACI,KAAAqT,mBAAAhT,EACJ,KAAAjB,eAAAS,EACC,KAAAwN,gBAAAnN,EACI,KAAAgnB,mBAAAxmB,EAnBvB,KAAAymB,gBAAmC,IAAI3mB,EAAAylB,eAMhD,KAAAmB,yBAAA,EACA,KAAAC,qBAAA,EACA,KAAAC,uBAAiC,EAcvCrvB,KAAKsvB,QAAUlpB,SAASkD,cAAc,UACtCtJ,KAAKsvB,QAAQ/lB,UAAUC,IAAI,mCAC3BxJ,KAAKuvB,2BAC8B,QAAnC3mB,EAAA5I,KAAKigB,iBAAiB1Y,qBAAA,IAAaqB,GAAAA,EAAE4mB,aAAaxvB,KAAKsvB,QAAStvB,KAAKigB,kBACrE,MAAMzX,EAAMxI,KAAKsvB,QAAQG,WAAW,MACpC,IAAKjnB,EACH,MAAM,IAAIkC,MAAM,sBAEhB1K,KAAK0vB,KAAOlnB,EAEdxI,KAAK2vB,+BACL3vB,KAAK4vB,iCACL5vB,KAAK6vB,oCACL7vB,KAAKsK,UAAA,EAAS3B,EAAAsD,eAAa,K,MACb,QAAZzF,EAAAxG,KAAKsvB,eAAA,IAAO9oB,GAAAA,EAAE0F,QAAQ,IAE1B,CAKQyjB,4BAAAA,GACN3vB,KAAKsK,SAAStK,KAAKob,mBAAmB4R,wBAAuB,IAAMhtB,KAAK+sB,mBAAA,GAAc,MACtF/sB,KAAKsK,SAAStK,KAAKob,mBAAmB6R,qBAAoB,IAAMjtB,KAAK+sB,mBAAA,GAAc,KACrF,CAMQ6C,8BAAAA,GACN5vB,KAAKsK,SAAStK,KAAKmH,eAAemN,0BAAyB,IAAMtU,KAAK+sB,mBACtE/sB,KAAKsK,SAAStK,KAAKwQ,eAAe8M,QAAQ6M,kBAAiB,KACzDnqB,KAAKsvB,QAASpuB,MAAMwsB,QAAU1tB,KAAKwQ,eAAe7D,SAAW3M,KAAKwQ,eAAe8M,QAAQ6G,IAAM,OAAS,OAAO,KAEjHnkB,KAAKsK,SAAStK,KAAKwQ,eAAetF,UAAS,KACrClL,KAAKqvB,yBAA2BrvB,KAAKwQ,eAAe8M,QAAQwS,OAAOljB,MAAM1C,SAC3ElK,KAAK+vB,8BACL/vB,KAAKgwB,2BAAA,IAGX,CAKQH,iCAAAA,GAEN7vB,KAAKsK,SAAStK,KAAKmH,eAAe2D,UAAS,KACpC9K,KAAKiwB,kBAAoBjwB,KAAKiwB,mBAAqBjwB,KAAKysB,eAAeyD,eAC1ElwB,KAAK+sB,eAAA,GACL/sB,KAAKiwB,iBAAmBjwB,KAAKysB,eAAeyD,aAAA,KAIhDlwB,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,sBAAsB,IAAMjjB,KAAK+sB,eAAA,MAE3F/sB,KAAKsK,UAAA,EAASrC,EAAA+D,0BAAyBhM,KAAKivB,mBAAmBltB,OAAQ,UAAU,IAAM/B,KAAK+sB,eAAA,MAE5F/sB,KAAK+sB,eAAA,EACP,CAEQoD,qBAAAA,GAEN,MAAM3pB,EAAa6B,KAAKK,MAAM1I,KAAKsvB,QAAQ3nB,MAAQ,GAC7ClB,EAAa4B,KAAK+nB,KAAKpwB,KAAKsvB,QAAQ3nB,MAAQ,GAClDkB,EAAUwlB,KAAOruB,KAAKsvB,QAAQ3nB,MAC9BkB,EAAU4F,KAAOjI,EACjBqC,EAAUylB,OAAS7nB,EACnBoC,EAAUklB,MAAQvnB,EAElBxG,KAAK+vB,8BAELjnB,EAAMulB,KAAO,EACbvlB,EAAM2F,KAAO,EACb3F,EAAMwlB,OAASzlB,EAAU4F,KACzB3F,EAAMilB,MAAQllB,EAAU4F,KAAO5F,EAAUylB,MAC3C,CAEQyB,2BAAAA,GACNvnB,EAAW6lB,KAAOhmB,KAAKwiB,MAAM,EAAI7qB,KAAKivB,mBAAmBtE,KAEzD,MAAMnkB,EAAgBxG,KAAKsvB,QAAQnuB,OAASnB,KAAKwQ,eAAe7D,OAAOC,MAAM1C,OAEvEzD,EAAgB4B,KAAKwiB,MAAMxiB,KAAKC,IAAID,KAAKgP,IAAI7Q,EAAe,IAAK,GAAKxG,KAAKivB,mBAAmBtE,KACpGniB,EAAWiG,KAAOhI,EAClB+B,EAAW8lB,OAAS7nB,EACpB+B,EAAWulB,MAAQtnB,CACrB,CAEQupB,wBAAAA,GACNhwB,KAAKkvB,gBAAgBH,WAAW,CAC9BV,KAAMhmB,KAAKK,MAAM1I,KAAKwQ,eAAe8M,QAAQC,OAAO3Q,MAAM1C,QAAUlK,KAAKsvB,QAAQnuB,OAAS,GAAKqH,EAAW6lB,MAC1G5f,KAAMpG,KAAKK,MAAM1I,KAAKwQ,eAAe8M,QAAQC,OAAO3Q,MAAM1C,QAAUlK,KAAKsvB,QAAQnuB,OAAS,GAAKqH,EAAWiG,MAC1G6f,OAAQjmB,KAAKK,MAAM1I,KAAKwQ,eAAe8M,QAAQC,OAAO3Q,MAAM1C,QAAUlK,KAAKsvB,QAAQnuB,OAAS,GAAKqH,EAAW8lB,QAC5GP,MAAO1lB,KAAKK,MAAM1I,KAAKwQ,eAAe8M,QAAQC,OAAO3Q,MAAM1C,QAAUlK,KAAKsvB,QAAQnuB,OAAS,GAAKqH,EAAWulB,SAE7G/tB,KAAKqvB,uBAAyBrvB,KAAKwQ,eAAe8M,QAAQwS,OAAOljB,MAAM1C,MACzE,CAEQqlB,wBAAAA,GACNvvB,KAAKsvB,QAAQpuB,MAAMyG,MAAQ,GAAG3H,KAAKgvB,WACnChvB,KAAKsvB,QAAQ3nB,MAAQU,KAAKwiB,MAAM7qB,KAAKgvB,OAAShvB,KAAKivB,mBAAmBtE,KACtE3qB,KAAKsvB,QAAQpuB,MAAMC,OAAS,GAAGnB,KAAKysB,eAAeyD,iBACnDlwB,KAAKsvB,QAAQnuB,OAASkH,KAAKwiB,MAAM7qB,KAAKysB,eAAeyD,aAAelwB,KAAKivB,mBAAmBtE,KAC5F3qB,KAAKmwB,wBACLnwB,KAAKgwB,0BACP,CAEQK,mBAAAA,GACFrwB,KAAKmvB,yBACPnvB,KAAKuvB,2BAEPvvB,KAAK0vB,KAAKY,UAAU,EAAG,EAAGtwB,KAAKsvB,QAAQ3nB,MAAO3H,KAAKsvB,QAAQnuB,QAC3DnB,KAAKkvB,gBAAgB9nB,QACrB,IAAK,MAAMZ,KAAcxG,KAAKob,mBAAmBvH,YAC/C7T,KAAKkvB,gBAAgBV,cAAchoB,GAErCxG,KAAK0vB,KAAKa,UAAY,EACtB,MAAM/pB,EAAQxG,KAAKkvB,gBAAgBX,MACnC,IAAK,MAAM9nB,KAAQD,EACK,SAAlBC,EAAKyhB,UACPloB,KAAKwwB,iBAAiB/pB,GAG1B,IAAK,MAAMA,KAAQD,EACK,SAAlBC,EAAKyhB,UACPloB,KAAKwwB,iBAAiB/pB,GAG1BzG,KAAKmvB,yBAAA,EACLnvB,KAAKovB,qBAAA,CACP,CAEQoB,gBAAAA,CAAiBhqB,GACvBxG,KAAK0vB,KAAKe,UAAYjqB,EAAKgW,MAC3Bxc,KAAK0vB,KAAKgB,SACA5nB,EAAMtC,EAAK0hB,UAAY,QACvB7f,KAAKwiB,OACV7qB,KAAKsvB,QAAQnuB,OAAS,IACtBqF,EAAKqoB,gBAAkB7uB,KAAKwQ,eAAe8M,QAAQC,OAAO3Q,MAAM1C,QAAU1B,EAAWhC,EAAK0hB,UAAY,QAAU,GAE3Grf,EAAUrC,EAAK0hB,UAAY,QAC3B7f,KAAKwiB,OACV7qB,KAAKsvB,QAAQnuB,OAAS,KACrBqF,EAAKsoB,cAAgBtoB,EAAKqoB,iBAAmB7uB,KAAKwQ,eAAe8M,QAAQC,OAAO3Q,MAAM1C,QAAU1B,EAAWhC,EAAK0hB,UAAY,SAGpI,CAEQ6E,aAAAA,CAAcvmB,EAAkCC,GACtDzG,KAAKmvB,wBAA0B3oB,GAA0BxG,KAAKmvB,wBAC9DnvB,KAAKovB,oBAAsB3oB,GAAgBzG,KAAKovB,yBAAA,IAC5CpvB,KAAK8W,kBAGT9W,KAAK8W,gBAAkB9W,KAAKivB,mBAAmBltB,OAAOkV,uBAAsB,KAC1EjX,KAAKqwB,sBACLrwB,KAAK8W,qBAAA,CAA2B,IAEpC,G,wBAzLWoB,EAAqB9P,EAAA,CAkB7BR,EAAA,EAAAgB,EAAAqM,gBACArN,EAAA,EAAAgB,EAAA2S,oBACA3T,EAAA,EAAAa,EAAAuF,gBACApG,EAAA,EAAAgB,EAAA4N,iBACA5O,EAAA,EAAAa,EAAA+X,sBAtBQtI,E,wgBC3Bb,MAAA3P,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MAYO,IAAMY,EAAiBlC,EAAA0a,kBAAvB,MAML,eAAA/C,GAAoC,OAAOpe,KAAK2wB,YAAc,CAkB9DjvB,WAAAA,CACmB8E,EACAC,EACgBsB,EACCK,EACHR,EACEW,GALhB,KAAAqoB,UAAApqB,EACA,KAAA0a,iBAAAza,EACgB,KAAA+J,eAAAzI,EACC,KAAAqN,gBAAAhN,EACH,KAAAyoB,aAAAjpB,EACE,KAAAT,eAAAoB,EAEjCvI,KAAK2wB,cAAA,EACL3wB,KAAK8wB,uBAAA,EACL9wB,KAAK+wB,qBAAuB,CAAE/lB,MAAO,EAAGC,IAAK,GAC7CjL,KAAKgxB,iBAAmB,EAC1B,CAKO3R,gBAAAA,GACLrf,KAAK2wB,cAAA,EACL3wB,KAAK+wB,qBAAqB/lB,MAAQhL,KAAK4wB,UAAUrwB,MAAM2J,OACvDlK,KAAKkhB,iBAAiB9U,YAAc,GACpCpM,KAAKgxB,iBAAmB,GACxBhxB,KAAKkhB,iBAAiB3X,UAAUC,IAAI,SACtC,CAMO8V,iBAAAA,CAAkB9Y,GACvBxG,KAAKkhB,iBAAiB9U,YAAc5F,EAAG5D,KACvC5C,KAAKyf,4BACL/a,YAAW,KACT1E,KAAK+wB,qBAAqB9lB,IAAMjL,KAAK4wB,UAAUrwB,MAAM2J,MAAM,GAC1D,EACL,CAMOqV,cAAAA,GACLvf,KAAKixB,sBAAA,EACP,CAOOtK,OAAAA,CAAQngB,GACb,GAAIxG,KAAK2wB,cAAgB3wB,KAAK8wB,sBAAuB,CACnD,GAAmB,MAAftqB,EAAG+gB,QAEL,OAAO,EAET,GAAmB,KAAf/gB,EAAG+gB,SAAiC,KAAf/gB,EAAG+gB,SAAiC,KAAf/gB,EAAG+gB,QAE/C,OAAO,EAITvnB,KAAKixB,sBAAA,E,CAGP,OAAmB,MAAfzqB,EAAG+gB,UAGLvnB,KAAKkxB,6BAAA,EAKT,CAUQD,oBAAAA,CAAqBzqB,GAI3B,GAHAxG,KAAKkhB,iBAAiB3X,UAAU2C,OAAO,UACvClM,KAAK2wB,cAAA,EAEAnqB,EAKE,CAGL,MAAMA,EAA6B,CACjCwE,MAAOhL,KAAK+wB,qBAAqB/lB,MACjCC,IAAKjL,KAAK+wB,qBAAqB9lB,KAWjCjL,KAAK8wB,uBAAA,EACLpsB,YAAW,KAET,GAAI1E,KAAK8wB,sBAAuB,CAE9B,IAAIrqB,EADJzG,KAAK8wB,uBAAA,EAILtqB,EAA2BwE,OAAShL,KAAKgxB,iBAAiB9mB,OAGxDzD,EAFEzG,KAAK2wB,aAEC3wB,KAAK4wB,UAAUrwB,MAAM4wB,UAAU3qB,EAA2BwE,MAAOxE,EAA2ByE,KAK5FjL,KAAK4wB,UAAUrwB,MAAM4wB,UAAU3qB,EAA2BwE,OAEhEvE,EAAMyD,OAAS,GACjBlK,KAAK6wB,aAAaviB,iBAAiB7H,GAAA,E,IAGtC,E,KA3CoB,CAEvBzG,KAAK8wB,uBAAA,EACL,MAAMtqB,EAAQxG,KAAK4wB,UAAUrwB,MAAM4wB,UAAUnxB,KAAK+wB,qBAAqB/lB,MAAOhL,KAAK+wB,qBAAqB9lB,KACxGjL,KAAK6wB,aAAaviB,iBAAiB9H,GAAA,E,CAyCvC,CAQQ0qB,yBAAAA,GACN,MAAM1qB,EAAWxG,KAAK4wB,UAAUrwB,MAChCmE,YAAW,KAET,IAAK1E,KAAK2wB,aAAc,CACtB,MAAMlqB,EAAWzG,KAAK4wB,UAAUrwB,MAE1BwH,EAAOtB,EAASwH,QAAQzH,EAAU,IAExCxG,KAAKgxB,iBAAmBjpB,EAEpBtB,EAASyD,OAAS1D,EAAS0D,OAC7BlK,KAAK6wB,aAAaviB,iBAAiBvG,GAAA,GAC1BtB,EAASyD,OAAS1D,EAAS0D,OACpClK,KAAK6wB,aAAaviB,iBAAiB,GAAG7F,EAAAoU,GAAGuU,OAAA,GAC/B3qB,EAASyD,SAAW1D,EAAS0D,QAAYzD,IAAaD,GAChExG,KAAK6wB,aAAaviB,iBAAiB7H,GAAA,E,IAItC,EACL,CAQOgZ,yBAAAA,CAA0BjZ,GAC/B,GAAKxG,KAAK2wB,aAAV,CAIA,GAAI3wB,KAAKwQ,eAAe7D,OAAOuR,mBAAoB,CACjD,MAAM1X,EAAU6B,KAAKgP,IAAIrX,KAAKwQ,eAAe7D,OAAOyF,EAAGpS,KAAKwQ,eAAevJ,KAAO,GAE5ER,EAAazG,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OACrD4G,EAAY/H,KAAKwQ,eAAe7D,OAAO0F,EAAIrS,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OACnFiH,EAAa5B,EAAUxG,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MAErE3H,KAAKkhB,iBAAiBhgB,MAAMuN,KAAOrG,EAAa,KAChDpI,KAAKkhB,iBAAiBhgB,MAAMyN,IAAM5G,EAAY,KAC9C/H,KAAKkhB,iBAAiBhgB,MAAMC,OAASsF,EAAa,KAClDzG,KAAKkhB,iBAAiBhgB,MAAMqd,WAAa9X,EAAa,KACtDzG,KAAKkhB,iBAAiBhgB,MAAMmwB,WAAarxB,KAAKoV,gBAAgBhH,WAAWijB,WACzErxB,KAAKkhB,iBAAiBhgB,MAAMiE,SAAWnF,KAAKoV,gBAAgBhH,WAAWjJ,SAAW,KAGlF,MAAMyC,EAAwB5H,KAAKkhB,iBAAiB3S,wBACpDvO,KAAK4wB,UAAU1vB,MAAMuN,KAAOrG,EAAa,KACzCpI,KAAK4wB,UAAU1vB,MAAMyN,IAAM5G,EAAY,KAEvC/H,KAAK4wB,UAAU1vB,MAAMyG,MAAQU,KAAKC,IAAIV,EAAsBD,MAAO,GAAK,KACxE3H,KAAK4wB,UAAU1vB,MAAMC,OAASkH,KAAKC,IAAIV,EAAsBzG,OAAQ,GAAK,KAC1EnB,KAAK4wB,UAAU1vB,MAAMqd,WAAa3W,EAAsBzG,OAAS,I,CAG9DqF,GACH9B,YAAW,IAAM1E,KAAKyf,2BAAA,IAAiC,E,CAE3D,G,oBAjOW9W,EAAiBP,EAAA,CA2BzBR,EAAA,EAAAK,EAAAgN,gBACArN,EAAA,EAAAK,EAAAuO,iBACA5O,EAAA,EAAAK,EAAAqpB,cACA1pB,EAAA,EAAAW,EAAAyF,iBA9BQrF,E,eCdb,SAAgBZ,EAA2BvB,EAA0CC,EAA2CsB,GAC9H,MAAMK,EAAOL,EAAQwG,wBACf3G,EAAepB,EAAOwB,iBAAiBD,GACvCQ,EAAcL,SAASN,EAAaO,iBAAiB,iBACrDF,EAAaC,SAASN,EAAaO,iBAAiB,gBAC1D,MAAO,CACL1B,EAAM+H,QAAUpG,EAAKqG,KAAOlG,EAC5B9B,EAAMiI,QAAUtG,EAAKuG,IAAM1G,EAE/B,C,iGATAxB,EAAA8qB,2BAAAxpB,EA2BAtB,EAAAkO,UAAA,SAA0BnO,EAA0CC,EAAgD2B,EAAsBR,EAAkBW,EAAkBN,EAA2BQ,EAAsBE,EAAuBC,GAEpP,IAAKX,EACH,OAGF,MAAMO,EAAST,EAA2BvB,EAAQC,EAAO2B,GACzD,OAAKI,GAILA,EAAO,GAAKH,KAAK+nB,MAAM5nB,EAAO,IAAMI,EAAcH,EAAe,EAAI,IAAMA,GAC3ED,EAAO,GAAKH,KAAK+nB,KAAK5nB,EAAO,GAAKG,GAKlCH,EAAO,GAAKH,KAAKgP,IAAIhP,KAAKC,IAAIE,EAAO,GAAI,GAAIZ,GAAYgB,EAAc,EAAI,IAC3EJ,EAAO,GAAKH,KAAKgP,IAAIhP,KAAKC,IAAIE,EAAO,GAAI,GAAID,GAEtCC,QAAA,CACT,CAAC,E,4FChDD,MAAAJ,EAAAL,EAAA,MAyEA,SAASH,EAAmBpB,EAAgBC,EAAiBsB,EAA+BK,GAC1F,MAAMR,EAAWpB,EAAS+B,EAAkB/B,EAAQuB,GAC9CU,EAAShC,EAAU8B,EAAkB9B,EAASsB,GAE9CS,EAAaH,KAAK8c,IAAIvd,EAAWa,GAiCzC,SAA0BjC,EAAgBC,EAAiBsB,GACzD,IAAIK,EAAc,EAClB,MAAMR,EAAWpB,EAAS+B,EAAkB/B,EAAQuB,GAC9CU,EAAShC,EAAU8B,EAAkB9B,EAASsB,GAEpD,IAAK,IAAIQ,EAAI,EAAGA,EAAIF,KAAK8c,IAAIvd,EAAWa,GAASF,IAAK,CACpD,MAAME,EAAmD,MAAvCR,EAAkBzB,EAAQC,IAA6B,EAAI,EACvEkC,EAAOZ,EAAc4E,OAAOC,MAAMsD,IAAItI,EAAYa,EAAYF,IAChE,MAAAI,OAAA,EAAAA,EAAMojB,YACR3jB,G,CAIJ,OAAOA,CACT,CAdA,CAjCoE5B,EAAQC,EAASsB,GAEnF,OAAOa,EAAOJ,EAAYG,EAASV,EAAkBzB,EAAQC,GAAU2B,GACzE,CAkDA,SAASG,EAAkB/B,EAAoBC,GAC7C,IAAIsB,EAAW,EACXK,EAAO3B,EAAckG,OAAOC,MAAMsD,IAAI1J,GACtCoB,EAAY,MAAAQ,OAAA,EAAAA,EAAM2jB,UAEtB,KAAOnkB,GAAapB,GAAc,GAAKA,EAAaC,EAAcpB,MAChE0C,IACAK,EAAO3B,EAAckG,OAAOC,MAAMsD,MAAM1J,GACxCoB,EAAY,MAAAQ,OAAA,EAAAA,EAAM2jB,UAGpB,OAAOhkB,CACT,CA6BA,SAASE,EAAkBzB,EAAgBC,GACzC,OAAOD,EAASC,EAAU,IAAe,GAC3C,CAWA,SAASgC,EACPjC,EACAC,EACAsB,EACAK,EACAR,EACAW,GAEA,IAAIN,EAAazB,EACbiC,EAAahC,EACbkC,EAAY,GAEhB,KAAOV,IAAeF,GAAUU,IAAeL,GAC7CH,GAAcL,EAAU,GAAK,EAEzBA,GAAWK,EAAaM,EAActB,KAAO,GAC/C0B,GAAaJ,EAAcoE,OAAOE,4BAChCpE,GAAA,EAAmBjC,EAAUyB,GAE/BA,EAAa,EACbzB,EAAW,EACXiC,MACUb,GAAWK,EAAa,IAClCU,GAAaJ,EAAcoE,OAAOE,4BAChCpE,GAAA,EAAmB,EAAGjC,EAAW,GAEnCyB,EAAaM,EAActB,KAAO,EAClCT,EAAWyB,EACXQ,KAIJ,OAAOE,EAAYJ,EAAcoE,OAAOE,4BACtCpE,GAAA,EAAmBjC,EAAUyB,EAEjC,CAMA,SAASU,EAASnC,EAAsBC,GACtC,MAAMsB,EAAOtB,EAAoB,IAAM,IACvC,OAAO2B,EAAAyU,GAAGC,IAAM/U,EAAMvB,CACxB,CAQA,SAASoC,EAAOpC,EAAeC,GAC7BD,EAAQ6B,KAAKK,MAAMlC,GACnB,IAAIuB,EAAM,GACV,IAAK,IAAIK,EAAI,EAAGA,EAAI5B,EAAO4B,IACzBL,GAAOtB,EAET,OAAOsB,CACT,CApOAtB,EAAA+qB,mBAAA,SAAmChrB,EAAiBC,EAAiBsB,EAA+BK,GAClG,MAAMH,EAASF,EAAc4E,OAAOyF,EAC9B5J,EAAST,EAAc4E,OAAO0F,EAGpC,IAAKtK,EAAc4E,OAAOsY,cACxB,OAsCJ,SAA0Bze,EAAgBC,EAAgBsB,EAAiBK,EAAiBH,EAA+BO,GACzH,OAAqF,IAAjFZ,EAAmBnB,EAAQ2B,EAASH,EAAeO,GAAmB0B,OACjE,GAEFtB,EAAOH,EACZjC,EAAQC,EAAQD,EAChBC,EAAS8B,EAAkB9B,EAAQwB,IAAA,EAAuBA,GAC1DiC,OAAQvB,EAAS,IAAgBH,GACrC,CARA,CAtC4BP,EAAQO,EAAQ,EAAS/B,EAASsB,EAAeK,GACvER,EAAmBY,EAAQ/B,EAASsB,EAAeK,GA+DzD,SAA4B5B,EAAgBC,EAAgBsB,EAAiBK,EAAiBH,EAA+BO,GAC3H,IAAIK,EAEFA,EADEjB,EAAmBnB,EAAQ2B,EAASH,EAAeO,GAAmB0B,OAAS,EACtE9B,EAAUG,EAAkBH,EAASH,GAErCxB,EAGb,MAAMqC,EAASV,EACT8P,EAyDR,SAA6B1R,EAAgBC,EAAgBsB,EAAiBK,EAAiBH,EAA+BQ,GAC5H,IAAIE,EAOJ,OALEA,EADEf,EAAmBG,EAASK,EAASH,EAAeQ,GAAmByB,OAAS,EACvE9B,EAAUG,EAAkBH,EAASH,GAErCxB,EAGRD,EAASuB,GACZY,GAAYP,GACX5B,GAAUuB,GACXY,EAAWP,EACJ,IAEF,GACT,CAfA,CAzDwC5B,EAAQC,EAAQsB,EAASK,EAASH,EAAeO,GAEvF,OAAOI,EAAOH,EACZjC,EAAQqC,EAAUd,EAASe,EACb,MAAdoP,EAA+BjQ,GAC/BiC,OAAQvB,EAASuP,EAAW1P,GAChC,CAfA,CA9DyBP,EAAQO,EAAQhC,EAASC,EAASsB,EAAeK,GAIxE,IAAIS,EACJ,GAAIL,IAAW/B,EAEb,OADAoC,EAAYZ,EAASzB,EAAU,IAAiB,IACzCoC,EAAOP,KAAK8c,IAAIld,EAASzB,GAAUmC,EAASE,EAAWT,IAEhES,EAAYL,EAAS/B,EAAU,IAAiB,IAChD,MAAMqC,EAAgBT,KAAK8c,IAAI3c,EAAS/B,GAIxC,OAAOmC,EAaT,SAAwBpC,EAAeC,GACrC,OAAOA,EAAcQ,KAAOT,CAC9B,CAFA,CAhBqCgC,EAAS/B,EAAUD,EAAUyB,EAAQF,IACrEe,EAAgB,GAAKf,EAAcd,KAAO,IACtBuB,EAAS/B,EAAUwB,EAASzB,GAQpC,GAPYmC,EAASE,EAAWT,GACjD,CAAC,E,ggBCtCD,MAAAG,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,MAEAa,EAAAb,EAAA,MAEAS,EAAAT,EAAA,MACAc,EAAAd,EAAA,MACAe,EAAAf,EAAA,KACAmQ,EAAAnQ,EAAA,MAGMoQ,EAAwB,4BACxBC,EAAsB,aACtBC,EAAkB,YAClBC,EAAkB,YAClBC,EAAc,cACdC,EAAkB,kBAExB,IAAIC,EAAiB,EAQRC,EAAWjS,EAAA8c,YAAjB,cAA0Bza,EAAAE,WAe/BtH,WAAAA,CACmB8E,EACAC,EACAsB,EACAK,EACMR,EACLa,EACDG,EACDJ,EACK0P,EACNG,GAEfpP,QAXiB,KAAA0I,SAAAnL,EACA,KAAAimB,eAAAhmB,EACA,KAAAwZ,iBAAAlY,EACA,KAAA0pB,YAAArpB,EAEkB,KAAAqY,iBAAAhY,EACD,KAAA2M,gBAAAxM,EACD,KAAA4H,eAAAhI,EACK,KAAA6X,oBAAAnI,EACN,KAAAoE,cAAAjE,EAvB1B,KAAAqZ,eAAyBjZ,IAKzB,KAAA9O,aAA8B,GAMtB,KAAA0Y,gBAAkBriB,KAAKsK,SAAS,IAAIzB,EAAAkI,cAAqCE,MAevFjR,KAAKyJ,cAAgBrD,SAASkD,cAAc,OAC5CtJ,KAAKyJ,cAAcF,UAAUC,IAAI4O,GACjCpY,KAAKyJ,cAAcvI,MAAMqd,WAAa,SACtCve,KAAKyJ,cAAcC,aAAa,cAAe,QAC/C1J,KAAK2xB,oBAAoB3xB,KAAKwQ,eAAevJ,KAAMjH,KAAKwQ,eAAenL,MACvErF,KAAK4xB,oBAAsBxrB,SAASkD,cAAc,OAClDtJ,KAAK4xB,oBAAoBroB,UAAUC,IAAIgP,GACvCxY,KAAK4xB,oBAAoBloB,aAAa,cAAe,QAErD1J,KAAKwH,YAAA,EAAamB,EAAAkpB,0BAClB7xB,KAAK8xB,oBACL9xB,KAAKsK,SAAStK,KAAKoV,gBAAgB2c,gBAAe,IAAM/xB,KAAKgyB,2BAE7DhyB,KAAKsK,SAAStK,KAAKsc,cAAciO,gBAAe/jB,GAAKxG,KAAKiyB,WAAWzrB,MACrExG,KAAKiyB,WAAWjyB,KAAKsc,cAAcI,QAEnC1c,KAAKkyB,YAActqB,EAAqBuT,eAAe5S,EAAA4pB,sBAAuB/rB,UAE9EpG,KAAK2R,SAASpI,UAAUC,IAAI2O,EAAwBnY,KAAK0xB,gBACzD1xB,KAAKysB,eAAe5iB,YAAY7J,KAAKyJ,eACrCzJ,KAAKysB,eAAe5iB,YAAY7J,KAAK4xB,qBAErC5xB,KAAKsK,SAAStK,KAAKyxB,YAAYzgB,qBAAoBxK,GAAKxG,KAAKoyB,iBAAiB5rB,MAC9ExG,KAAKsK,SAAStK,KAAKyxB,YAAYtgB,qBAAoB3K,GAAKxG,KAAKqyB,iBAAiB7rB,MAE9ExG,KAAKsK,UAAA,EAASxB,EAAAmD,eAAa,KACzBjM,KAAK2R,SAASpI,UAAU2C,OAAOiM,EAAwBnY,KAAK0xB,gBAI5D1xB,KAAKyJ,cAAcyC,SACnBlM,KAAK4xB,oBAAoB1lB,SACzBlM,KAAKsyB,YAAYpvB,UACjBlD,KAAKuyB,mBAAmBrmB,SACxBlM,KAAKwyB,wBAAwBtmB,QAAQ,KAGvClM,KAAKsyB,YAAc,IAAIrqB,EAAAwqB,WAAWrsB,UAClCpG,KAAKsyB,YAAYI,QACf1yB,KAAKoV,gBAAgBhH,WAAWijB,WAChCrxB,KAAKoV,gBAAgBhH,WAAWjJ,SAChCnF,KAAKoV,gBAAgBhH,WAAWukB,WAChC3yB,KAAKoV,gBAAgBhH,WAAWwkB,gBAElC5yB,KAAK6yB,oBACP,CAEQf,iBAAAA,GACN,MAAMtrB,EAAMxG,KAAKqgB,oBAAoBsK,IACrC3qB,KAAKwH,WAAWkjB,OAAOoI,KAAKnrB,MAAQ3H,KAAKygB,iBAAiB9Y,MAAQnB,EAClExG,KAAKwH,WAAWkjB,OAAOoI,KAAK3xB,OAASkH,KAAK+nB,KAAKpwB,KAAKygB,iBAAiBtf,OAASqF,GAC9ExG,KAAKwH,WAAWkjB,OAAOhjB,KAAKC,MAAQ3H,KAAKwH,WAAWkjB,OAAOoI,KAAKnrB,MAAQU,KAAKwiB,MAAM7qB,KAAKoV,gBAAgBhH,WAAW2kB,eACnH/yB,KAAKwH,WAAWkjB,OAAOhjB,KAAKvG,OAASkH,KAAKK,MAAM1I,KAAKwH,WAAWkjB,OAAOoI,KAAK3xB,OAASnB,KAAKoV,gBAAgBhH,WAAWmQ,YACrHve,KAAKwH,WAAWkjB,OAAOoI,KAAKrkB,KAAO,EACnCzO,KAAKwH,WAAWkjB,OAAOoI,KAAKnkB,IAAM,EAClC3O,KAAKwH,WAAWkjB,OAAO3c,OAAOpG,MAAQ3H,KAAKwH,WAAWkjB,OAAOhjB,KAAKC,MAAQ3H,KAAKwQ,eAAevJ,KAC9FjH,KAAKwH,WAAWkjB,OAAO3c,OAAO5M,OAASnB,KAAKwH,WAAWkjB,OAAOhjB,KAAKvG,OAASnB,KAAKwQ,eAAenL,KAChGrF,KAAKwH,WAAWC,IAAIsG,OAAOpG,MAAQU,KAAKwiB,MAAM7qB,KAAKwH,WAAWkjB,OAAO3c,OAAOpG,MAAQnB,GACpFxG,KAAKwH,WAAWC,IAAIsG,OAAO5M,OAASkH,KAAKwiB,MAAM7qB,KAAKwH,WAAWkjB,OAAO3c,OAAO5M,OAASqF,GACtFxG,KAAKwH,WAAWC,IAAIC,KAAKC,MAAQ3H,KAAKwH,WAAWC,IAAIsG,OAAOpG,MAAQ3H,KAAKwQ,eAAevJ,KACxFjH,KAAKwH,WAAWC,IAAIC,KAAKvG,OAASnB,KAAKwH,WAAWC,IAAIsG,OAAO5M,OAASnB,KAAKwQ,eAAenL,KAE1F,IAAK,MAAMmB,KAAWxG,KAAK2J,aACzBnD,EAAQtF,MAAMyG,MAAQ,GAAG3H,KAAKwH,WAAWC,IAAIsG,OAAOpG,UACpDnB,EAAQtF,MAAMC,OAAS,GAAGnB,KAAKwH,WAAWC,IAAIC,KAAKvG,WACnDqF,EAAQtF,MAAMqd,WAAa,GAAGve,KAAKwH,WAAWC,IAAIC,KAAKvG,WAEvDqF,EAAQtF,MAAM8xB,SAAW,SAGtBhzB,KAAKwyB,0BACRxyB,KAAKwyB,wBAA0BpsB,SAASkD,cAAc,SACtDtJ,KAAKysB,eAAe5iB,YAAY7J,KAAKwyB,0BAGvC,MAAM/rB,EACJ,GAAGzG,KAAKizB,sBAAsB7a,sEAMhCpY,KAAKwyB,wBAAwBpmB,YAAc3F,EAE3CzG,KAAK4xB,oBAAoB1wB,MAAMC,OAASnB,KAAKigB,iBAAiB/e,MAAMC,OACpEnB,KAAKysB,eAAevrB,MAAMyG,MAAQ,GAAG3H,KAAKwH,WAAWC,IAAIsG,OAAOpG,UAChE3H,KAAKysB,eAAevrB,MAAMC,OAAS,GAAGnB,KAAKwH,WAAWC,IAAIsG,OAAO5M,UACnE,CAEQ8wB,UAAAA,CAAWzrB,GACZxG,KAAKuyB,qBACRvyB,KAAKuyB,mBAAqBnsB,SAASkD,cAAc,SACjDtJ,KAAKysB,eAAe5iB,YAAY7J,KAAKuyB,qBAIvC,IAAI9rB,EACF,GAAGzG,KAAKizB,sBAAsB7a,cACnB5R,EAAOZ,WAAW6B,qBACZzH,KAAKoV,gBAAgBhH,WAAWijB,0BAClCrxB,KAAKoV,gBAAgBhH,WAAWjJ,oDAIjDsB,GACE,GAAGzG,KAAKizB,sBAAsB7a,yBACnB5P,EAAAgU,MAAM0W,gBAAgB1sB,EAAOZ,WAAY,IAAK6B,QAG3DhB,GACE,GAAGzG,KAAKizB,0DACSjzB,KAAKoV,gBAAgBhH,WAAWukB,eAE9C3yB,KAAKizB,oDACSjzB,KAAKoV,gBAAgBhH,WAAWwkB,mBAE9C5yB,KAAKizB,6DAIVxsB,GACE,+BAAsCzG,KAAK0xB,eAA3C,4CAKFjrB,GACE,0BAAiCzG,KAAK0xB,eAAtC,UAEA,uBAAuBlrB,EAAOV,OAAO2B,OACrC,YAAYjB,EAAO2sB,aAAa1rB,2CAIhC,YAAYjB,EAAOV,OAAO2B,UAI5BhB,GACE,GAAGzG,KAAKizB,sBAAsB7a,KAAuBG,6FACdvY,KAAK0xB,eAD5C,0BAGA,GAAG1xB,KAAKizB,sBAAsB7a,KAAuBG,kFACnBvY,KAAK0xB,eAJvC,0BAMA,GAAG1xB,KAAKizB,sBAAsB7a,uCAC9B,sBAAsB5R,EAAOV,OAAO2B,OACpC,WAAWjB,EAAO2sB,aAAa1rB,QAE/B,GAAGzH,KAAKizB,sBAAsB7a,yCAC9B,uBAAuB5R,EAAOV,OAAO2B,8BAGrC,GAAGzH,KAAKizB,sBAAsB7a,qCAC9B,gBAAgBpY,KAAKoV,gBAAgBhH,WAAWglB,qBAAqB5sB,EAAOV,OAAO2B,cAEnF,GAAGzH,KAAKizB,sBAAsB7a,2CAC9B,uBAAuB5R,EAAOV,OAAO2B,8DAKvChB,GACE,GAAGzG,KAAKizB,sBAAsBza,8EAO3BxY,KAAKizB,4BAA4Bza,iDAEdhS,EAAO6sB,0BAA0B5rB,QAEpDzH,KAAKizB,sBAAsBza,iDAERhS,EAAO8sB,kCAAkC7rB,QAGjE,IAAK,MAAOM,EAAGK,KAAM5B,EAAOmW,KAAK9J,UAC/BpM,GACE,GAAGzG,KAAKizB,sBAAsB5a,IAAkBtQ,cAAcK,EAAEX,SAC7DzH,KAAKizB,sBAAsB5a,IAAkBtQ,wBAAkCS,EAAAgU,MAAM0W,gBAAgB9qB,EAAG,IAAKX,SAC7GzH,KAAKizB,sBAAsB3a,IAAkBvQ,yBAAyBK,EAAEX,SAE/EhB,GACE,GAAGzG,KAAKizB,sBAAsB5a,IAAkB5P,EAAA8qB,mCAAmC/qB,EAAAgU,MAAMgX,OAAOhtB,EAAOX,YAAY4B,SAChHzH,KAAKizB,sBAAsB5a,IAAkB5P,EAAA8qB,6CAAuD/qB,EAAAgU,MAAM0W,gBAAgB1qB,EAAAgU,MAAMgX,OAAOhtB,EAAOX,YAAa,IAAK4B,SAChKzH,KAAKizB,sBAAsB3a,IAAkB7P,EAAA8qB,8CAA8C/sB,EAAOZ,WAAW6B,SAElHzH,KAAKuyB,mBAAmBnmB,YAAc3F,CACxC,CAUQosB,kBAAAA,GAEN,MAAMrsB,EAAUxG,KAAKwH,WAAWC,IAAIC,KAAKC,MAAQ3H,KAAKsyB,YAAYpiB,IAAI,QAAK,GAC3ElQ,KAAKyJ,cAAcvI,MAAM6xB,cAAgB,GAAGvsB,MAC5CxG,KAAKkyB,YAAYuB,eAAiBjtB,CACpC,CAEOktB,4BAAAA,GACL1zB,KAAK8xB,oBACL9xB,KAAKsyB,YAAYlrB,QACjBpH,KAAK6yB,oBACP,CAEQlB,mBAAAA,CAAoBnrB,EAAcC,GAExC,IAAK,IAAID,EAAIxG,KAAK2J,aAAaO,OAAQ1D,GAAKC,EAAMD,IAAK,CACrD,MAAMA,EAAMJ,SAASkD,cAAc,OACnCtJ,KAAKyJ,cAAcI,YAAYrD,GAC/BxG,KAAK2J,aAAa8C,KAAKjG,E,CAGzB,KAAOxG,KAAK2J,aAAaO,OAASzD,GAChCzG,KAAKyJ,cAAc4D,YAAYrN,KAAK2J,aAAayD,MAErD,CAEO4U,YAAAA,CAAaxb,EAAcC,GAChCzG,KAAK2xB,oBAAoBnrB,EAAMC,GAC/BzG,KAAK8xB,mBACP,CAEO6B,qBAAAA,GACL3zB,KAAK8xB,oBACL9xB,KAAKsyB,YAAYlrB,QACjBpH,KAAK6yB,oBACP,CAEO5Q,UAAAA,GACLjiB,KAAKyJ,cAAcF,UAAU2C,OAAOqM,EACtC,CAEO2J,WAAAA,GACLliB,KAAKyJ,cAAcF,UAAUC,IAAI+O,GACjCvY,KAAK4zB,WAAW5zB,KAAKwQ,eAAe7D,OAAO0F,EAAGrS,KAAKwQ,eAAe7D,OAAO0F,EAC3E,CAEOiQ,sBAAAA,CAAuB9b,EAAqCC,EAAmCsB,GAOpG,GALA/H,KAAK4xB,oBAAoBiC,kBACzB7zB,KAAKkyB,YAAY5P,uBAAuB9b,EAAOC,EAAKsB,GACpD/H,KAAK4zB,WAAW,EAAG5zB,KAAKwQ,eAAenL,KAAO,IAGzCmB,IAAUC,EACb,OAIF,MAAM2B,EAAmB5B,EAAM,GAAKxG,KAAKwQ,eAAe7D,OAAOG,MACzDlF,EAAiBnB,EAAI,GAAKzG,KAAKwQ,eAAe7D,OAAOG,MACrDvE,EAAyBF,KAAKC,IAAIF,EAAkB,GACpDH,EAAuBI,KAAKgP,IAAIzP,EAAgB5H,KAAKwQ,eAAenL,KAAO,GAGjF,GAAIkD,GAA0BvI,KAAKwQ,eAAenL,MAAQ4C,EAAuB,EAC/E,OAIF,MAAMQ,EAAmBrC,SAAS4Z,yBAElC,GAAIjY,EAAkB,CACpB,MAAMA,EAAavB,EAAM,GAAKC,EAAI,GAClCgC,EAAiBoB,YACf7J,KAAK8zB,wBAAwBvrB,EAAwBR,EAAatB,EAAI,GAAKD,EAAM,GAAIuB,EAAavB,EAAM,GAAKC,EAAI,GAAIwB,EAAuBM,EAAyB,G,KAElK,CAEL,MAAMR,EAAWK,IAAqBG,EAAyB/B,EAAM,GAAK,EACpEmC,EAASJ,IAA2BX,EAAiBnB,EAAI,GAAKzG,KAAKwQ,eAAevJ,KACxFwB,EAAiBoB,YAAY7J,KAAK8zB,wBAAwBvrB,EAAwBR,EAAUY,IAE5F,MAAMC,EAAkBX,EAAuBM,EAAyB,EAGxE,GAFAE,EAAiBoB,YAAY7J,KAAK8zB,wBAAwBvrB,EAAyB,EAAG,EAAGvI,KAAKwQ,eAAevJ,KAAM2B,IAE/GL,IAA2BN,EAAsB,CAEnD,MAAMzB,EAASoB,IAAmBK,EAAuBxB,EAAI,GAAKzG,KAAKwQ,eAAevJ,KACtFwB,EAAiBoB,YAAY7J,KAAK8zB,wBAAwB7rB,EAAsB,EAAGzB,G,EAGvFxG,KAAK4xB,oBAAoB/nB,YAAYpB,EACvC,CAQQqrB,uBAAAA,CAAwBttB,EAAaC,EAAkBsB,EAAgBK,EAAmB,GAChG,MAAMR,EAAUxB,SAASkD,cAAc,OAKvC,OAJA1B,EAAQ1G,MAAMC,OAAYiH,EAAWpI,KAAKwH,WAAWC,IAAIC,KAAKvG,OAAvC,KACvByG,EAAQ1G,MAAMyN,IAASnI,EAAMxG,KAAKwH,WAAWC,IAAIC,KAAKvG,OAAlC,KACpByG,EAAQ1G,MAAMuN,KAAUhI,EAAWzG,KAAKwH,WAAWC,IAAIC,KAAKC,MAAvC,KACrBC,EAAQ1G,MAAMyG,MAAW3H,KAAKwH,WAAWC,IAAIC,KAAKC,OAASI,EAAStB,GAA9C,KACfmB,CACT,CAEOma,gBAAAA,GAEP,CAEQiQ,qBAAAA,GAENhyB,KAAK8xB,oBAEL9xB,KAAKiyB,WAAWjyB,KAAKsc,cAAcI,QAEnC1c,KAAKsyB,YAAYI,QACf1yB,KAAKoV,gBAAgBhH,WAAWijB,WAChCrxB,KAAKoV,gBAAgBhH,WAAWjJ,SAChCnF,KAAKoV,gBAAgBhH,WAAWukB,WAChC3yB,KAAKoV,gBAAgBhH,WAAWwkB,gBAElC5yB,KAAK6yB,oBACP,CAEOzrB,KAAAA,GACL,IAAK,MAAMZ,KAAKxG,KAAK2J,aASnBnD,EAAEqtB,iBAEN,CAEOD,UAAAA,CAAWptB,EAAeC,GAC/B,MAAMsB,EAAS/H,KAAKwQ,eAAe7D,OAC7BvE,EAAkBL,EAAOsW,MAAQtW,EAAOsK,EACxCzK,EAAUS,KAAKgP,IAAItP,EAAOqK,EAAGpS,KAAKwQ,eAAevJ,KAAO,GACxDsB,EAAcvI,KAAKoV,gBAAgBhH,WAAW9I,YAC9C2C,EAAcjI,KAAKoV,gBAAgBhH,WAAW7I,YAC9CkD,EAAsBzI,KAAKoV,gBAAgBhH,WAAW2lB,oBAE5D,IAAK,IAAIprB,EAAInC,EAAOmC,GAAKlC,EAAKkC,IAAK,CACjC,MAAMnC,EAAMmC,EAAIZ,EAAO+E,MACjBrG,EAAazG,KAAK2J,aAAahB,GAC/BC,EAAWb,EAAO6E,MAAMsD,IAAI1J,GAClC,IAAKC,IAAemC,EAClB,MAEFnC,EAAWotB,mBACN7zB,KAAKkyB,YAAY8B,UAClBprB,EACApC,EACAA,IAAQ4B,EACRH,EACAQ,EACAb,EACAW,EACAvI,KAAKwH,WAAWC,IAAIC,KAAKC,MACzB3H,KAAKsyB,aACJ,GACA,G,CAIT,CAEA,qBAAAW,GACE,MAAO,IAAI9a,IAAwBnY,KAAK0xB,gBAC1C,CAEQU,gBAAAA,CAAiB5rB,GACvBxG,KAAKi0B,kBAAkBztB,EAAEoO,GAAIpO,EAAEsO,GAAItO,EAAEqO,GAAIrO,EAAEuO,GAAIvO,EAAES,MAAA,EACnD,CAEQorB,gBAAAA,CAAiB7rB,GACvBxG,KAAKi0B,kBAAkBztB,EAAEoO,GAAIpO,EAAEsO,GAAItO,EAAEqO,GAAIrO,EAAEuO,GAAIvO,EAAES,MAAA,EACnD,CAEQgtB,iBAAAA,CAAkBztB,EAAWC,EAAYsB,EAAWK,EAAYR,EAAcW,GAiBhFR,EAAI,IAAGvB,EAAI,GACX4B,EAAK,IAAG3B,EAAK,GACjB,MAAMwB,EAAOjI,KAAKwQ,eAAenL,KAAO,EACxC0C,EAAIM,KAAKC,IAAID,KAAKgP,IAAItP,EAAGE,GAAO,GAChCG,EAAKC,KAAKC,IAAID,KAAKgP,IAAIjP,EAAIH,GAAO,GAElCL,EAAOS,KAAKgP,IAAIzP,EAAM5H,KAAKwQ,eAAevJ,MAC1C,MAAMwB,EAASzI,KAAKwQ,eAAe7D,OAC7BhE,EAAkBF,EAAO4V,MAAQ5V,EAAO4J,EACxCzJ,EAAUP,KAAKgP,IAAI5O,EAAO2J,EAAGxK,EAAO,GACpCY,EAAcxI,KAAKoV,gBAAgBhH,WAAW9I,YAC9CuD,EAAc7I,KAAKoV,gBAAgBhH,WAAW7I,YAC9CuD,EAAsB9I,KAAKoV,gBAAgBhH,WAAW2lB,oBAG5D,IAAK,IAAI9rB,EAAIF,EAAGE,GAAKG,IAAMH,EAAG,CAC5B,MAAMiQ,EAAMjQ,EAAIQ,EAAOqE,MACjBqL,EAAanY,KAAK2J,aAAa1B,GAC/BmQ,EAAa3P,EAAOmE,MAAMsD,IAAIgI,GACpC,IAAKC,IAAeC,EAClB,MAEFD,EAAW0b,mBACN7zB,KAAKkyB,YAAY8B,UAClB5b,EACAF,EACAA,IAAQvP,EACRE,EACAC,EACAF,EACAJ,EACAxI,KAAKwH,WAAWC,IAAIC,KAAKC,MACzB3H,KAAKsyB,YACL/pB,EAAWN,IAAMF,EAAIvB,EAAI,GAAM,EAC/B+B,GAAYN,IAAMG,EAAK3B,EAAKmB,GAAQ,GAAM,G,CAIlD,G,cAvdW8Q,EAAWtQ,EAAA,CAoBnBR,EAAA,EAAAsQ,EAAAgc,uBACAtsB,EAAA,EAAAgB,EAAA+X,kBACA/Y,EAAA,EAAAsQ,EAAA1B,iBACA5O,EAAA,EAAAsQ,EAAAjD,gBACArN,EAAA,EAAAgB,EAAA4X,qBACA5Y,EAAA,EAAAgB,EAAAiY,gBAzBQnI,E,4gBC3Bb,MAAAnQ,EAAAR,EAAA,MACAE,EAAAF,EAAA,KACAU,EAAAV,EAAA,KACAY,EAAAZ,EAAA,MACAa,EAAAb,EAAA,MACAS,EAAAT,EAAA,MACAc,EAAAd,EAAA,MACAe,EAAAf,EAAA,MACAmQ,EAAAnQ,EAAA,MAqBO,IAAMoQ,EAAqB1R,EAAA0rB,sBAA3B,MASLzwB,WAAAA,CACmB8E,EACQC,EACRsB,EACIK,EACPR,EACMW,EACLN,GANE,KAAA4X,UAAArZ,EACyB,KAAAsa,wBAAAra,EACR,KAAA2O,gBAAArN,EACI,KAAAsY,oBAAAjY,EACP,KAAAyoB,aAAAjpB,EACM,KAAAwT,mBAAA7S,EACL,KAAA+T,cAAArU,EAf1B,KAAAksB,UAAsB,IAAI1rB,EAAA8M,SAI1B,KAAA6e,mBAAA,EAED,KAAAX,eAAiB,CAUrB,CAEInR,sBAAAA,CAAuB9b,EAAqCC,EAAmCsB,GACpG/H,KAAKq0B,gBAAkB7tB,EACvBxG,KAAKs0B,cAAgB7tB,EACrBzG,KAAKo0B,kBAAoBrsB,CAC3B,CAEOisB,SAAAA,CACLxtB,EACAC,EACAsB,EACAK,EACAR,EACAa,EACAE,EACAH,EACAM,EACAqP,EACAE,GAGA,MAAMC,EAA8B,GAC9BC,EAAevY,KAAK8gB,wBAAwByT,oBAAoB9tB,GAChE+R,EAASxY,KAAKsc,cAAcI,OAElC,IAKIjE,EALAC,EAAalS,EAASguB,uBACtBzsB,GAAe2Q,EAAajQ,EAAU,IACxCiQ,EAAajQ,EAAU,GAIzB,IAAI4J,EAAa,EACbsG,EAAO,GACPC,EAAQ,EACRC,EAAQ,EACRC,EAAS,EACTC,GAAA,EACAC,EAAa,EACb5G,GAAA,EACA6G,EAAU,EACd,MAAMC,EAAoB,GAEpBC,GAA0B,IAAfhB,IAAiC,IAAbE,EAErC,IAAK,IAAIe,EAAI,EAAGA,EAAIV,EAAYU,IAAK,CACnC5S,EAASkP,SAAS0D,EAAGpZ,KAAKm0B,WAC1B,IAAIzb,EAAQ1Y,KAAKm0B,UAAU7V,WAG3B,GAAc,IAAV5F,EACF,SAIF,IAAIW,GAAA,EACAC,EAAYF,EAKZqb,EAAOz0B,KAAKm0B,UAChB,GAAI5b,EAAarO,OAAS,GAAKkP,IAAMb,EAAa,GAAG,GAAI,CACvDc,GAAA,EACA,MAAM5S,EAAQ8R,EAAapM,QAI3BsoB,EAAO,IAAI5rB,EAAA6rB,eACT10B,KAAKm0B,UACL3tB,EAASwlB,mBAAA,EAAwBvlB,EAAM,GAAIA,EAAM,IACjDA,EAAM,GAAKA,EAAM,IAInB6S,EAAY7S,EAAM,GAAK,EAGvBiS,EAAQ+b,EAAKnW,U,CAGf,MAAMqW,EAAgB30B,KAAK40B,mBAAmBxb,EAAG3S,GAC3CouB,EAAe9sB,GAAeqR,IAAM3Q,EACpCqsB,EAAc3b,GAAYC,GAAKjB,GAAaiB,GAAKf,EAEvD,IAAI0c,GAAA,EACJ/0B,KAAKob,mBAAmB4Z,wBAAwB5b,EAAG3S,OAAA,GAAgBD,IACjEuuB,GAAA,CAAkB,IAIpB,IAAIE,EAAQR,EAAKS,YAAcjtB,EAAAktB,qBAQ/B,GAPc,MAAVF,IAAkBR,EAAKW,eAAiBX,EAAKY,gBAC/CJ,EAAQ,KAIVhc,EAAUP,EAAQlQ,EAAYM,EAAWoH,IAAI+kB,EAAOR,EAAKa,SAAUb,EAAKc,YAEnE9c,EAEE,CAWL,GACEpG,IAEGsiB,GAAiBviB,IACbuiB,IAAkBviB,GAAoBqiB,EAAKe,KAAO5c,KAGtD+b,GAAiBviB,GAAoBoG,EAAOid,qBAC1ChB,EAAKzf,KAAO6D,IAEd4b,EAAK7e,SAAS8f,MAAQ5c,GACtBgc,IAAgB/b,GAChBE,IAAYD,IACX6b,IACAxb,IACA0b,EACJ,CAEApc,GAAQsc,EACR5iB,IACA,Q,CAOIA,IACFoG,EAAYrM,YAAcuM,GAE5BF,EAAczY,KAAK6f,UAAUvW,cAAc,QAC3C+I,EAAa,EACbsG,EAAO,E,MA5CTF,EAAczY,KAAK6f,UAAUvW,cAAc,QAgE7C,GAhBAsP,EAAQ6b,EAAKe,GACb3c,EAAQ4b,EAAKzf,GACb8D,EAAS2b,EAAK7e,SAAS8f,IACvB3c,EAAe+b,EACf9b,EAAaC,EACb7G,EAAmBuiB,EAEftb,GAIE5Q,GAAW2Q,GAAK3Q,GAAW6Q,IAC7B7Q,EAAU2Q,IAITpZ,KAAK6wB,aAAa8E,gBAAkBd,EAEvC,GADA3b,EAAQzM,KAAK,gBACTzM,KAAKqgB,oBAAoBuV,UACvBjtB,GACFuQ,EAAQzM,KAAK,sBAEfyM,EAAQzM,KACU,QAAhBrE,EACI,mBACgB,cAAhBA,EACE,yBACA,2BAGR,GAAIR,EACF,OAAQA,GACN,IAAK,UACHsR,EAAQzM,KAAK,wBACb,MACF,IAAK,QACHyM,EAAQzM,KAAK,sBACb,MACF,IAAK,MACHyM,EAAQzM,KAAK,oBACb,MACF,IAAK,YACHyM,EAAQzM,KAAK,0BA2BvB,GAlBIgoB,EAAKa,UACPpc,EAAQzM,KAAK,cAGXgoB,EAAKc,YACPrc,EAAQzM,KAAK,gBAGXgoB,EAAKoB,SACP3c,EAAQzM,KAAK,aAIbkM,EADE8b,EAAKqB,cACA7tB,EAAAktB,qBAEAV,EAAKS,YAAcjtB,EAAAktB,qBAGxBV,EAAKW,gBACPlc,EAAQzM,KAAK,mBAA6BgoB,EAAK7e,SAASmgB,kBAC3C,MAATpd,IACFA,EAAO,MAEJ8b,EAAKuB,2BACR,GAAIvB,EAAKwB,sBACPxd,EAAYvX,MAAMg1B,oBAAsB,OAAOhe,EAAAie,cAAc1Z,WAAWgY,EAAK2B,qBAAqBC,KAAK,YAClG,CACL,IAAI7vB,EAAKiuB,EAAK2B,oBACVp2B,KAAKoV,gBAAgBhH,WAAWkoB,4BAA8B7B,EAAKa,UAAY9uB,EAAK,IACtFA,GAAM,GAERiS,EAAYvX,MAAMg1B,oBAAsB1d,EAAOmE,KAAKnW,GAAIiB,G,CAK1DgtB,EAAKY,eACPnc,EAAQzM,KAAK,kBACA,MAATkM,IACFA,EAAO,MAIP8b,EAAK8B,mBACPrd,EAAQzM,KAAK,uBAKXqoB,IACFrc,EAAYvX,MAAMs1B,eAAiB,aAGrC,IAAIC,EAAKhC,EAAKiC,aACVC,EAAclC,EAAKmC,iBACnBC,EAAKpC,EAAKqC,aACVC,EAActC,EAAKuC,iBACvB,MAAMC,IAAcxC,EAAKyC,YACzB,GAAID,EAAW,CACb,MAAMzwB,EAAOiwB,EACbA,EAAKI,EACLA,EAAKrwB,EACL,MAAMC,EAAQkwB,EACdA,EAAcI,EACdA,EAActwB,C,CAKhB,IAAI0wB,EACAC,EA6CAC,EA5CAC,GAAA,EA6CJ,OA5CAt3B,KAAKob,mBAAmB4Z,wBAAwB5b,EAAG3S,OAAA,GAAgBD,IACzC,QAApBA,EAAE3E,QAAQ0rB,OAAmB+J,IAG7B9wB,EAAE+wB,qBACJR,EAAc,SACdF,EAAKrwB,EAAE+wB,mBAAmBpa,MAAQ,EAAI,SACtCga,EAAa3wB,EAAE+wB,oBAEb/wB,EAAEgxB,qBACJb,EAAc,SACdF,EAAKjwB,EAAEgxB,mBAAmBra,MAAQ,EAAI,SACtCia,EAAa5wB,EAAEgxB,oBAEjBF,EAA4B,QAApB9wB,EAAE3E,QAAQ0rB,MAAe,KAI9B+J,GAAS3C,IAKZwC,EAAan3B,KAAKqgB,oBAAoBuV,UAAYpd,EAAO6a,0BAA4B7a,EAAO8a,kCAC5FuD,EAAKM,EAAWha,MAAQ,EAAI,SAC5B4Z,EAAc,SAGdO,GAAA,EAEI9e,EAAOid,sBACTkB,EAAc,SACdF,EAAKje,EAAOid,oBAAoBtY,MAAQ,EAAI,SAC5Cia,EAAa5e,EAAOid,sBAKpB6B,GACFpe,EAAQzM,KAAK,wBAKPsqB,GACN,KAAK,SACL,KAAK,SACHM,EAAa7e,EAAOmE,KAAKka,GACzB3d,EAAQzM,KAAK,YAAYoqB,KACzB,MACF,KAAK,SACHQ,EAAazuB,EAAAuU,KAAKC,QAAQyZ,GAAM,GAAIA,GAAM,EAAI,IAAW,IAALA,GACpD72B,KAAKy3B,UAAUhf,EAAa,qBAAqBL,GAAUye,IAAO,GAAGh0B,SAAS,IAAK,IAAK,MACxF,MAEF,QACMo0B,GACFI,EAAa7e,EAAO5S,WACpBsT,EAAQzM,KAAK,YAAYlE,EAAAgrB,2BAEzB8D,EAAa7e,EAAO3S,WAY1B,OAPKsxB,GACC1C,EAAKoB,UACPsB,EAAavuB,EAAA4T,MAAM0W,gBAAgBmE,EAAY,KAK3CV,GACN,KAAK,SACL,KAAK,SACClC,EAAKa,UAAYmB,EAAK,GAAKz2B,KAAKoV,gBAAgBhH,WAAWkoB,6BAC7DG,GAAM,GAEHz2B,KAAK03B,sBAAsBjf,EAAa4e,EAAY7e,EAAOmE,KAAK8Z,GAAKhC,EAAM0C,OAAA,IAC9Eje,EAAQzM,KAAK,YAAYgqB,KAE3B,MACF,KAAK,SACH,MAAMjwB,EAAQoC,EAAAuU,KAAKC,QAChBqZ,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAbA,GAEGz2B,KAAK03B,sBAAsBjf,EAAa4e,EAAY7wB,EAAOiuB,EAAM0C,EAAYC,IAChFp3B,KAAKy3B,UAAUhf,EAAa,UAAUL,EAASqe,EAAG5zB,SAAS,IAAK,IAAK,MAEvE,MAEF,QACO7C,KAAK03B,sBAAsBjf,EAAa4e,EAAY7e,EAAO5S,WAAY6uB,EAAM0C,OAAA,IAC5EF,GACF/d,EAAQzM,KAAK,YAAYlE,EAAAgrB,0BAQ7Bra,EAAQhP,SACVuO,EAAYkf,UAAYze,EAAQmd,KAAK,KACrCnd,EAAQhP,OAAS,GAId2qB,GAAiBxb,GAAa0b,EAGjCtc,EAAYrM,YAAcuM,EAF1BtG,IAKE4G,IAAYjZ,KAAKyzB,iBACnBhb,EAAYvX,MAAM6xB,cAAgB,GAAG9Z,OAGvCX,EAAS7L,KAAKgM,GACdW,EAAIE,C,CAQN,OAJIb,GAAepG,IACjBoG,EAAYrM,YAAcuM,GAGrBL,CACT,CAEQof,qBAAAA,CAAsBlxB,EAAsBC,EAAYsB,EAAYK,EAAiBR,EAAgCW,GAC3H,GAA6D,IAAzDvI,KAAKoV,gBAAgBhH,WAAWwpB,uBAAA,EAA8B9uB,EAAA+uB,iCAAgCzvB,EAAK0vB,WACrG,OAAO,EAIT,MAAM7vB,EAAQjI,KAAK+3B,kBAAkB3vB,GACrC,IAAIK,EAMJ,GALKb,GAAeW,IAClBE,EAAgBR,EAAMmI,SAAS3J,EAAG0W,KAAMpV,EAAGoV,YAAA,IAIzC1U,EAA6B,CAG/B,MAAMjC,EAAQxG,KAAKoV,gBAAgBhH,WAAWwpB,sBAAwBxvB,EAAKytB,QAAU,EAAI,GACzFptB,EAAgBG,EAAA4T,MAAMwb,oBAAoBpwB,GAAcnB,EAAI8B,GAAcR,EAAIvB,GAC9EyB,EAAMkI,UAAUvI,GAAcnB,GAAI0W,MAAO5U,GAAcR,GAAIoV,KAAM,MAAA1U,EAAAA,EAAiB,K,CAGpF,QAAIA,IACFzI,KAAKy3B,UAAUjxB,EAAS,SAASiC,EAAchB,QAAA,EAKnD,CAEQswB,iBAAAA,CAAkBvxB,GACxB,OAAIA,EAAKqvB,QACA71B,KAAKsc,cAAcI,OAAOub,kBAE5Bj4B,KAAKsc,cAAcI,OAAOwb,aACnC,CAEQT,SAAAA,CAAUjxB,EAAsBC,GACtCD,EAAQkD,aAAa,QAAS,GAAGlD,EAAQ0G,aAAa,UAAY,KAAKzG,KACzE,CAEQmuB,kBAAAA,CAAmBpuB,EAAWC,GACpC,MAAMsB,EAAQ/H,KAAKq0B,gBACbjsB,EAAMpI,KAAKs0B,cACjB,SAAKvsB,IAAUK,KAGXpI,KAAKo0B,kBACHrsB,EAAM,IAAMK,EAAI,GACX5B,GAAKuB,EAAM,IAAMtB,GAAKsB,EAAM,IACjCvB,EAAI4B,EAAI,IAAM3B,GAAK2B,EAAI,GAEpB5B,EAAIuB,EAAM,IAAMtB,GAAKsB,EAAM,IAChCvB,GAAK4B,EAAI,IAAM3B,GAAK2B,EAAI,GAEpB3B,EAAIsB,EAAM,IAAMtB,EAAI2B,EAAI,IAC3BL,EAAM,KAAOK,EAAI,IAAM3B,IAAMsB,EAAM,IAAMvB,GAAKuB,EAAM,IAAMvB,EAAI4B,EAAI,IAClEL,EAAM,GAAKK,EAAI,IAAM3B,IAAM2B,EAAI,IAAM5B,EAAI4B,EAAI,IAC7CL,EAAM,GAAKK,EAAI,IAAM3B,IAAMsB,EAAM,IAAMvB,GAAKuB,EAAM,GACzD,GAGF,SAASqQ,EAAS5R,EAAcC,EAAiBsB,GAC/C,KAAOvB,EAAK0D,OAASnC,GACnBvB,EAAOC,EAAUD,EAEnB,OAAOA,CACT,C,wBAtea2R,EAAqB/P,EAAA,CAW7BR,EAAA,EAAAY,EAAAwY,yBACApZ,EAAA,EAAAe,EAAA6N,iBACA5O,EAAA,EAAAY,EAAAgY,qBACA5Y,EAAA,EAAAe,EAAA2oB,cACA1pB,EAAA,EAAAe,EAAA4S,oBACA3T,EAAA,EAAAY,EAAAqY,gBAhBQ1I,E,oFCRb1R,EAAAgsB,WAAA,MAoBE/wB,WAAAA,CAAY8E,GAdF,KAAA2xB,MAAQ,IAAIC,aAAa,KAO3B,KAAAC,MAAQ,GACR,KAAAC,UAAY,EACZ,KAAAC,QAAsB,SACtB,KAAAC,YAA0B,OAE1B,KAAAC,iBAAsC,GAG5Cz4B,KAAK6sB,WAAarmB,EAAU8C,cAAc,OAC1CtJ,KAAK6sB,WAAW3rB,MAAMgnB,SAAW,WACjCloB,KAAK6sB,WAAW3rB,MAAMyN,IAAM,WAC5B3O,KAAK6sB,WAAW3rB,MAAMyG,MAAQ,UAE9B3H,KAAK6sB,WAAW3rB,MAAMw3B,WAAa,MAEnC14B,KAAK6sB,WAAW3rB,MAAMy3B,YAAc,OAEpC,MAAMlyB,EAAUD,EAAU8C,cAAc,QAElCvB,EAAOvB,EAAU8C,cAAc,QACrCvB,EAAK7G,MAAMyxB,WAAa,OAExB,MAAMvqB,EAAS5B,EAAU8C,cAAc,QACvClB,EAAOlH,MAAM03B,UAAY,SAEzB,MAAMhxB,EAAapB,EAAU8C,cAAc,QAC3C1B,EAAW1G,MAAMyxB,WAAa,OAC9B/qB,EAAW1G,MAAM03B,UAAY,SAG7B54B,KAAKy4B,iBAAmB,CAAChyB,EAASsB,EAAMK,EAAQR,GAChD5H,KAAK6sB,WAAWhjB,YAAYpD,GAC5BzG,KAAK6sB,WAAWhjB,YAAY9B,GAC5B/H,KAAK6sB,WAAWhjB,YAAYzB,GAC5BpI,KAAK6sB,WAAWhjB,YAAYjC,GAE5BpB,EAAUqyB,KAAKhvB,YAAY7J,KAAK6sB,YAEhC7sB,KAAKoH,OACP,CAEOlE,OAAAA,GACLlD,KAAK6sB,WAAW3gB,SAChBlM,KAAKy4B,iBAAiBvuB,OAAS,EAC/BlK,KAAK84B,YAAA,CACP,CAKO1xB,KAAAA,GACLpH,KAAKm4B,MAAMY,MAAI,MAEf/4B,KAAK84B,OAAS,IAAIlmB,GACpB,CAOO8f,OAAAA,CAAQlsB,EAAcC,EAAkBsB,EAAoBK,GAE7D5B,IAASxG,KAAKq4B,OACb5xB,IAAazG,KAAKs4B,WAClBvwB,IAAW/H,KAAKu4B,SAChBnwB,IAAepI,KAAKw4B,cAKzBx4B,KAAKq4B,MAAQ7xB,EACbxG,KAAKs4B,UAAY7xB,EACjBzG,KAAKu4B,QAAUxwB,EACf/H,KAAKw4B,YAAcpwB,EAEnBpI,KAAK6sB,WAAW3rB,MAAMmwB,WAAarxB,KAAKq4B,MACxCr4B,KAAK6sB,WAAW3rB,MAAMiE,SAAW,GAAGnF,KAAKs4B,cACzCt4B,KAAKy4B,iBAAiB,GAAqBv3B,MAAMyxB,WAAa,GAAG5qB,IACjE/H,KAAKy4B,iBAAiB,GAAkBv3B,MAAMyxB,WAAa,GAAGvqB,IAC9DpI,KAAKy4B,iBAAiB,GAAoBv3B,MAAMyxB,WAAa,GAAG5qB,IAChE/H,KAAKy4B,iBAAiB,GAAyBv3B,MAAMyxB,WAAa,GAAGvqB,IAErEpI,KAAKoH,QACP,CAMO8I,GAAAA,CAAI1J,EAAWC,EAAwBsB,GAC5C,IAAIK,EAAK,EACT,IAAK3B,IAASsB,GAAuB,IAAbvB,EAAE0D,SAAiB9B,EAAK5B,EAAEygB,WAAW,IAAM,IACjE,OAAqB,OAAdjnB,KAAKm4B,MAAM/vB,GACdpI,KAAKm4B,MAAM/vB,GACVpI,KAAKm4B,MAAM/vB,GAAMpI,KAAKg5B,SAASxyB,EAAG,GAEzC,IAAIoB,EAAMpB,EACNC,IAAMmB,GAAO,KACbG,IAAQH,GAAO,KACnB,IAAIW,EAAQvI,KAAK84B,OAAQ5oB,IAAItI,GAC7B,QAAI,IAAAW,EAAqB,CACvB,IAAIH,EAAU,EACV3B,IAAM2B,GAAW,GACjBL,IAAQK,GAAW,GACvBG,EAAQvI,KAAKg5B,SAASxyB,EAAG4B,GACzBpI,KAAK84B,OAAQ9oB,IAAIpI,EAAKW,E,CAExB,OAAOA,CACT,CAEUywB,QAAAA,CAASxyB,EAAWC,GAC5B,MAAMsB,EAAK/H,KAAKy4B,iBAAiBhyB,GAEjC,OADAsB,EAAGqE,YAAc5F,EAAEyyB,OAAO,IACnBlxB,EAAGiiB,YAAc,EAC1B,EAAC,E,8HCtJH,MAAA5hB,EAAAL,EAAA,MAEatB,EAAA8sB,uBAAyB,IAEzB9sB,EAAAyyB,YAAc,GAIdzyB,EAAA0yB,cAAoC/wB,EAAAyW,WAAazW,EAAAgxB,aAAe,SAAW,e,aCCxF,SAAgBrxB,EAAiBvB,GAI/B,OAAO,OAAUA,GAAaA,GAAa,KAC7C,C,kLAZAC,EAAA4yB,aAAA,SAAgC7yB,GAC9B,IAAKA,EACH,MAAM,IAAIkE,MAAM,2BAElB,OAAOlE,CACT,EAEAC,EAAA6yB,iBAAAvxB,EAOAtB,EAAA8yB,2BAAA,SAA2C/yB,GACzC,OAAO,OAAUA,GAAaA,GAAa,KAC7C,EAMAC,EAAAoxB,gCAAA,SAAgDrxB,GAC9C,OAAOuB,EAAiBvB,IAL1B,SAA2BA,GACzB,OAAO,MAAUA,GAAaA,GAAa,IAC7C,CAFA,CAK0DA,EAC1D,EAEAC,EAAAorB,uBAAA,WACE,MAAO,CACLpqB,IAAK,CACHsG,OAiBG,CACLpG,MAAO,EACPxG,OAAQ,GAlBNuG,KAgBG,CACLC,MAAO,EACPxG,OAAQ,IAhBRupB,OAAQ,CACN3c,OAaG,CACLpG,MAAO,EACPxG,OAAQ,GAdNuG,KAYG,CACLC,MAAO,EACPxG,OAAQ,GAbN2xB,KAAM,CACJnrB,MAAO,EACPxG,OAAQ,EACRsN,KAAM,EACNE,IAAK,IAIb,CAAC,E,qFCvCDlI,EAAA+yB,eAAA,MAuBE93B,WAAAA,CACU8E,GAAA,KAAAgK,eAAAhK,EApBH,KAAAizB,mBAAA,EAOA,KAAAC,qBAA+B,CAetC,CAKOnT,cAAAA,GACLvmB,KAAKqmB,oBAAA,EACLrmB,KAAKsmB,kBAAA,EACLtmB,KAAKy5B,mBAAA,EACLz5B,KAAK05B,qBAAuB,CAC9B,CAKA,uBAAAC,GACE,OAAI35B,KAAKy5B,kBACA,CAAC,EAAG,GAGRz5B,KAAKsmB,cAAiBtmB,KAAKqmB,gBAIzBrmB,KAAK45B,6BAA+B55B,KAAKsmB,aAHvCtmB,KAAKqmB,cAIhB,CAMA,qBAAAwT,GACE,GAAI75B,KAAKy5B,kBACP,MAAO,CAACz5B,KAAKwQ,eAAevJ,KAAMjH,KAAKwQ,eAAe7D,OAAO0R,MAAQre,KAAKwQ,eAAenL,KAAO,GAGlG,GAAKrF,KAAKqmB,eAAV,CAKA,IAAKrmB,KAAKsmB,cAAgBtmB,KAAK45B,6BAA8B,CAC3D,MAAMpzB,EAAkBxG,KAAKqmB,eAAe,GAAKrmB,KAAK05B,qBACtD,OAAIlzB,EAAkBxG,KAAKwQ,eAAevJ,KAEpCT,EAAkBxG,KAAKwQ,eAAevJ,MAAS,EAC1C,CAACjH,KAAKwQ,eAAevJ,KAAMjH,KAAKqmB,eAAe,GAAKhe,KAAKK,MAAMlC,EAAkBxG,KAAKwQ,eAAevJ,MAAQ,GAE/G,CAACT,EAAkBxG,KAAKwQ,eAAevJ,KAAMjH,KAAKqmB,eAAe,GAAKhe,KAAKK,MAAMlC,EAAkBxG,KAAKwQ,eAAevJ,OAEzH,CAACT,EAAiBxG,KAAKqmB,eAAe,G,CAI/C,GAAIrmB,KAAK05B,sBAEH15B,KAAKsmB,aAAa,KAAOtmB,KAAKqmB,eAAe,GAAI,CAEnD,MAAM7f,EAAkBxG,KAAKqmB,eAAe,GAAKrmB,KAAK05B,qBACtD,OAAIlzB,EAAkBxG,KAAKwQ,eAAevJ,KACjC,CAACT,EAAkBxG,KAAKwQ,eAAevJ,KAAMjH,KAAKqmB,eAAe,GAAKhe,KAAKK,MAAMlC,EAAkBxG,KAAKwQ,eAAevJ,OAEzH,CAACoB,KAAKC,IAAI9B,EAAiBxG,KAAKsmB,aAAa,IAAKtmB,KAAKsmB,aAAa,G,CAG/E,OAAOtmB,KAAKsmB,Y,CACd,CAKOsT,0BAAAA,GACL,MAAMpzB,EAAQxG,KAAKqmB,eACb5f,EAAMzG,KAAKsmB,aACjB,SAAK9f,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,GACrE,CAOOqzB,UAAAA,CAAWtzB,GAUhB,OARIxG,KAAKqmB,iBACPrmB,KAAKqmB,eAAe,IAAM7f,GAExBxG,KAAKsmB,eACPtmB,KAAKsmB,aAAa,IAAM9f,GAItBxG,KAAKsmB,cAAgBtmB,KAAKsmB,aAAa,GAAK,GAC9CtmB,KAAKumB,kBAAA,IAKHvmB,KAAKqmB,gBAAkBrmB,KAAKqmB,eAAe,GAAK,IAClDrmB,KAAKqmB,eAAe,GAAK,MAG7B,EAAC,E,mgBCzIH,MAAA9d,EAAAR,EAAA,MACAE,EAAAF,EAAA,MAEAU,EAAAV,EAAA,KAQO,IAAMY,EAAelC,EAAAia,gBAArB,cAA8BjY,EAAAO,WAOnC,gBAAA8e,GAAqC,OAAO9nB,KAAK2H,MAAQ,GAAK3H,KAAKmB,OAAS,CAAG,CAK/EO,WAAAA,CACE8E,EACAC,EACiBsB,GAEjBkB,QAFkC,KAAAmM,gBAAArN,EAZ7B,KAAAJ,MAAgB,EAChB,KAAAxG,OAAiB,EAKP,KAAA44B,kBAAoB/5B,KAAKsK,SAAS,IAAIrC,EAAA8I,cACvC,KAAAipB,iBAAmBh6B,KAAK+5B,kBAAkB9oB,MAQxDjR,KAAKi6B,iBAAmB,IAAIrxB,EAAmBpC,EAAUC,EAAezG,KAAKoV,iBAC7EpV,KAAKsK,SAAStK,KAAKoV,gBAAgB8kB,uBAAuB,CAAC,aAAc,aAAa,IAAMl6B,KAAKqjB,YACnG,CAEOA,OAAAA,GACL,MAAM7c,EAASxG,KAAKi6B,iBAAiB5W,UACjC7c,EAAOmB,QAAU3H,KAAK2H,OAASnB,EAAOrF,SAAWnB,KAAKmB,SACxDnB,KAAK2H,MAAQnB,EAAOmB,MACpB3H,KAAKmB,OAASqF,EAAOrF,OACrBnB,KAAK+5B,kBAAkBtlB,OAE3B,G,kBA7BW9L,EAAeP,EAAA,CAevBR,EAAA,EAAAW,EAAAiO,kBAfQ7N,GAgDb,MAAMC,EAIJlH,WAAAA,CACU8E,EACAC,EACAsB,GAFA,KAAA8X,UAAArZ,EACA,KAAA2zB,eAAA1zB,EACA,KAAA2O,gBAAArN,EANF,KAAAqyB,QAA0B,CAAEzyB,MAAO,EAAGxG,OAAQ,GAQpDnB,KAAKq6B,gBAAkBr6B,KAAK6f,UAAUvW,cAAc,QACpDtJ,KAAKq6B,gBAAgB9wB,UAAUC,IAAI,8BACnCxJ,KAAKq6B,gBAAgBjuB,YAAc,IAAI6sB,OAAO,IAC9Cj5B,KAAKq6B,gBAAgB3wB,aAAa,cAAe,QACjD1J,KAAKq6B,gBAAgBn5B,MAAMw3B,WAAa,MACxC14B,KAAKq6B,gBAAgBn5B,MAAMy3B,YAAc,OACzC34B,KAAKm6B,eAAetwB,YAAY7J,KAAKq6B,gBACvC,CAEOhX,OAAAA,GACLrjB,KAAKq6B,gBAAgBn5B,MAAMmwB,WAAarxB,KAAKoV,gBAAgBhH,WAAWijB,WACxErxB,KAAKq6B,gBAAgBn5B,MAAMiE,SAAW,GAAGnF,KAAKoV,gBAAgBhH,WAAWjJ,aAGzE,MAAMqB,EAAW,CACfrF,OAAQm5B,OAAOt6B,KAAKq6B,gBAAgBzP,cACpCjjB,MAAO2yB,OAAOt6B,KAAKq6B,gBAAgBrQ,cAUrC,OALuB,IAAnBxjB,EAASmB,OAAmC,IAApBnB,EAASrF,SACnCnB,KAAKo6B,QAAQzyB,MAAQnB,EAASmB,MAAQ,GACtC3H,KAAKo6B,QAAQj5B,OAASkH,KAAK+nB,KAAK5pB,EAASrF,SAGpCnB,KAAKo6B,OACd,E,8hBC7FF,MAAA7xB,EAAAR,EAAA,MACAE,EAAAF,EAAA,KACAU,EAAAV,EAAA,KACAY,EAAAZ,EAAA,MAGA,MAAaa,UAAuBL,EAAA4tB,cASlCz0B,WAAAA,CAAY8E,EAAsBC,EAAesB,GAC/CkB,QANK,KAAAsxB,QAAkB,EAGlB,KAAAC,aAAuB,GAI5Bx6B,KAAKgV,GAAKxO,EAAUwO,GACpBhV,KAAKw1B,GAAKhvB,EAAUgvB,GACpBx1B,KAAKw6B,aAAe/zB,EACpBzG,KAAKgvB,OAASjnB,CAChB,CAEO0yB,UAAAA,GAEL,OAAO,OACT,CAEOnc,QAAAA,GACL,OAAOte,KAAKgvB,MACd,CAEOkG,QAAAA,GACL,OAAOl1B,KAAKw6B,YACd,CAEO1C,OAAAA,GAGL,OAAO,OACT,CAEO4C,eAAAA,CAAgBl0B,GACrB,MAAM,IAAIkE,MAAM,kBAClB,CAEOiwB,aAAAA,GACL,MAAO,CAAC36B,KAAKgV,GAAIhV,KAAKk1B,WAAYl1B,KAAKse,WAAYte,KAAK83B,UAC1D,EA1CFrxB,EAAAiuB,eAAA9rB,EA6CO,IAAMJ,EAAsB/B,EAAAsa,uBAA5B,MAAMva,EAOX9E,WAAAA,CACkB8E,GAAQ,KAAAgK,eAAAhK,EALlB,KAAAo0B,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAA1G,UAAsB,IAAI1rB,EAAA8M,QAI9B,CAEGjL,QAAAA,CAAS9D,GACd,MAAMC,EAA2B,CAC/Bq0B,GAAI96B,KAAK66B,yBACTE,QAAAv0B,GAIF,OADAxG,KAAK46B,kBAAkBnuB,KAAKhG,GACrBA,EAAOq0B,EAChB,CAEOjV,UAAAA,CAAWrf,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,KAAK46B,kBAAkB1wB,OAAQzD,IACjD,GAAIzG,KAAK46B,kBAAkBn0B,GAAGq0B,KAAOt0B,EAEnC,OADAxG,KAAK46B,kBAAkBnpB,OAAOhL,EAAG,MAKrC,OAAO,CACT,CAEO8tB,mBAAAA,CAAoB/tB,GACzB,GAAsC,IAAlCxG,KAAK46B,kBAAkB1wB,OACzB,MAAO,GAGT,MAAMzD,EAAOzG,KAAKwQ,eAAe7D,OAAOC,MAAMsD,IAAI1J,GAClD,IAAKC,GAAwB,IAAhBA,EAAKyD,OAChB,MAAO,GAGT,MAAMnC,EAA6B,GAC7BK,EAAU3B,EAAKulB,mBAAA,GAMrB,IAAIpkB,EAAmB,EACnBW,EAAqB,EACrBE,EAAwB,EACxBE,EAAclC,EAAKu0B,MAAM,GACzBpyB,EAAcnC,EAAKw0B,MAAM,GAE7B,IAAK,IAAIz0B,EAAI,EAAGA,EAAIC,EAAK+O,mBAAoBhP,IAG3C,GAFAC,EAAKiP,SAASlP,EAAGxG,KAAKm0B,WAEY,IAA9Bn0B,KAAKm0B,UAAU7V,WAAnB,CAMA,GAAIte,KAAKm0B,UAAUnf,KAAOrM,GAAe3I,KAAKm0B,UAAUqB,KAAO5sB,EAAa,CAG1E,GAAIpC,EAAIoB,EAAmB,EAAG,CAC5B,MAAMpB,EAAexG,KAAKk7B,iBACxB9yB,EACAK,EACAF,EACA9B,EACAmB,GAEF,IAAK,IAAInB,EAAI,EAAGA,EAAID,EAAa0D,OAAQzD,IACvCsB,EAAO0E,KAAKjG,EAAaC,G,CAK7BmB,EAAmBpB,EACnBiC,EAAwBF,EACxBI,EAAc3I,KAAKm0B,UAAUnf,GAC7BpM,EAAc5I,KAAKm0B,UAAUqB,E,CAG/BjtB,GAAsBvI,KAAKm0B,UAAUe,WAAWhrB,QAAUjC,EAAAktB,qBAAqBjrB,M,CAIjF,GAAIlK,KAAKwQ,eAAevJ,KAAOW,EAAmB,EAAG,CACnD,MAAMpB,EAAexG,KAAKk7B,iBACxB9yB,EACAK,EACAF,EACA9B,EACAmB,GAEF,IAAK,IAAInB,EAAI,EAAGA,EAAID,EAAa0D,OAAQzD,IACvCsB,EAAO0E,KAAKjG,EAAaC,G,CAI7B,OAAOsB,CACT,CAUQmzB,gBAAAA,CAAiBz0B,EAAcsB,EAAoBK,EAAkBR,EAAuBW,GAClG,MAAMN,EAAOxB,EAAK0qB,UAAUppB,EAAYK,GAIxC,IAAIK,EAAsC,GAC1C,IACEA,EAAkBzI,KAAK46B,kBAAkB,GAAGG,QAAQ9yB,E,CACpD,MAAOzB,GACP9C,QAAQC,MAAM6C,E,CAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,KAAK46B,kBAAkB1wB,OAAQzD,IAEjD,IACE,MAAMsB,EAAe/H,KAAK46B,kBAAkBn0B,GAAGs0B,QAAQ9yB,GACvD,IAAK,IAAIxB,EAAI,EAAGA,EAAIsB,EAAamC,OAAQzD,IACvCD,EAAuB20B,aAAa1yB,EAAiBV,EAAatB,G,CAEpE,MAAOD,GACP9C,QAAQC,MAAM6C,E,CAIlB,OADAxG,KAAKo7B,0BAA0B3yB,EAAiBb,EAAUW,GACnDE,CACT,CAUQ2yB,yBAAAA,CAA0B50B,EAA4BC,EAAmBsB,GAC/E,IAAIK,EAAoB,EACpBR,GAAA,EACAW,EAAqB,EACrBE,EAAejC,EAAO4B,GAG1B,GAAKK,EAAL,CAIA,IAAK,IAAIE,EAAIZ,EAAUY,EAAI3I,KAAKwQ,eAAevJ,KAAM0B,IAAK,CACxD,MAAMZ,EAAQtB,EAAK6X,SAAS3V,GACtBC,EAASnC,EAAK40B,UAAU1yB,GAAGuB,QAAUjC,EAAAktB,qBAAqBjrB,OAIhE,GAAc,IAAVnC,EAAJ,CAWA,IANKH,GAAuBa,EAAa,IAAMF,IAC7CE,EAAa,GAAKE,EAClBf,GAAA,GAIEa,EAAa,IAAMF,EAAoB,CAOzC,GANAE,EAAa,GAAKE,EAGlBF,EAAejC,IAAS4B,IAGnBK,EACH,MAOEA,EAAa,IAAMF,GACrBE,EAAa,GAAKE,EAClBf,GAAA,GAEAA,GAAA,C,CAMJW,GAAsBK,C,EAKpBH,IACFA,EAAa,GAAKzI,KAAKwQ,eAAevJ,K,CAE1C,CAUQ,mBAAAk0B,CAAoB30B,EAA4BC,GACtD,IAAIsB,GAAA,EACJ,IAAK,IAAIK,EAAI,EAAGA,EAAI5B,EAAO0D,OAAQ9B,IAAK,CACtC,MAAMR,EAAQpB,EAAO4B,GACrB,GAAKL,EAAL,CAwBE,GAAItB,EAAS,IAAMmB,EAAM,GAIvB,OADApB,EAAO4B,EAAI,GAAG,GAAK3B,EAAS,GACrBD,EAGT,GAAIC,EAAS,IAAMmB,EAAM,GAKvB,OAFApB,EAAO4B,EAAI,GAAG,GAAKC,KAAKC,IAAI7B,EAAS,GAAImB,EAAM,IAC/CpB,EAAOiL,OAAOrJ,EAAG,GACV5B,EAKTA,EAAOiL,OAAOrJ,EAAG,GACjBA,G,KA1CF,CACE,GAAI3B,EAAS,IAAMmB,EAAM,GAGvB,OADApB,EAAOiL,OAAOrJ,EAAG,EAAG3B,GACbD,EAGT,GAAIC,EAAS,IAAMmB,EAAM,GAIvB,OADAA,EAAM,GAAKS,KAAKgP,IAAI5Q,EAAS,GAAImB,EAAM,IAChCpB,EAGLC,EAAS,GAAKmB,EAAM,KAGtBA,EAAM,GAAKS,KAAKgP,IAAI5Q,EAAS,GAAImB,EAAM,IACvCG,GAAA,E,EAoCN,OARIA,EAEFvB,EAAOA,EAAO0D,OAAS,GAAG,GAAKzD,EAAS,GAGxCD,EAAOiG,KAAKhG,GAGPD,CACT,G,yBAvRWgC,EAAsBJ,EAAA,CAQ9BR,EAAA,EAAAe,EAAAsM,iBARQzM,E,4FCnDb/B,EAAA6Z,mBAAA,MAME5e,WAAAA,CACU8E,EACQC,GADR,KAAAmqB,UAAApqB,EACQ,KAAAzE,OAAA0E,EALV,KAAA60B,YAAA,EACA,KAAAC,sBAAA,EAMNv7B,KAAK4wB,UAAU3mB,iBAAiB,SAAS,IAAMjK,KAAKs7B,YAAA,IACpDt7B,KAAK4wB,UAAU3mB,iBAAiB,QAAQ,IAAMjK,KAAKs7B,YAAA,GACrD,CAEA,OAAA3Q,GACE,OAAO3qB,KAAK+B,OAAO0V,gBACrB,CAEA,aAAAme,GAKE,YAAO,IAJH51B,KAAKu7B,mBACPv7B,KAAKu7B,iBAAmBv7B,KAAKs7B,YAAct7B,KAAK4wB,UAAU9Q,cAAc0b,WACxEC,gBAAe,IAAMz7B,KAAKu7B,sBAAA,KAErBv7B,KAAKu7B,gBACd,EAAC,E,igBC1BH,MAAAhzB,EAAAR,EAAA,MACAE,EAAAF,EAAA,MAEO,IAAMU,EAAYhC,EAAA8a,aAAlB,MAGL7f,WAAAA,CACmC8E,EACEC,GADF,KAAAU,eAAAX,EACE,KAAAia,iBAAAha,CAErC,CAEOkO,SAAAA,CAAUnO,EAA2CC,EAAsBsB,EAAkBK,EAAkBR,GACpH,OAAO,EAAAK,EAAA0M,WACL5S,OACAyE,EACAC,EACAsB,EACAK,EACApI,KAAKygB,iBAAiBqH,aACtB9nB,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,MACxC3H,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,OACxCyG,EAEJ,CAEO4b,oBAAAA,CAAqBhd,EAAmBC,GAC7C,MAAMsB,GAAA,EAASE,EAAAspB,4BAA2BxvB,OAAQyE,EAAOC,GACzD,GAAKzG,KAAKygB,iBAAiBqH,aAK3B,OAFA/f,EAAO,GAAKM,KAAKgP,IAAIhP,KAAKC,IAAIP,EAAO,GAAI,GAAI/H,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAOpG,MAAQ,GAC/FI,EAAO,GAAKM,KAAKgP,IAAIhP,KAAKC,IAAIP,EAAO,GAAI,GAAI/H,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAO5M,OAAS,GACzF,CACL2iB,IAAKzb,KAAKK,MAAMX,EAAO,GAAK/H,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKC,OACpEoc,IAAK1b,KAAKK,MAAMX,EAAO,GAAK/H,KAAKmH,eAAeK,WAAWC,IAAIC,KAAKvG,QACpEiR,EAAG/J,KAAKK,MAAMX,EAAO,IACrBsK,EAAGhK,KAAKK,MAAMX,EAAO,IAEzB,G,eApCWU,EAAYL,EAAA,CAIpBR,EAAA,EAAAW,EAAAyF,gBACApG,EAAA,EAAAW,EAAAoY,mBALQlY,E,ogBCHb,MAAAF,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MAGAY,EAAAZ,EAAA,MACAa,EAAAb,EAAA,MACAS,EAAAT,EAAA,KACAc,EAAAd,EAAA,MACAe,EAAAf,EAAA,MAQO,IAAMmQ,EAAazR,EAAAwa,cAAnB,cAA4BzY,EAAAQ,WA6BjC,cAAAxB,GAA6C,OAAOxH,KAAK07B,UAAUn7B,MAAOiH,UAAY,CAEtF9F,WAAAA,CACU8E,EACRC,EACiBsB,EACCK,EACER,EACJe,EACKG,EACNoP,GAqDf,GAnDAjP,QATQ,KAAAkO,UAAA3Q,EAG2B,KAAAia,iBAAArY,EAhC7B,KAAAszB,UAA0C17B,KAAKsK,SAAS,IAAI9B,EAAA6R,mBAG5D,KAAAshB,kBAAoB,IAAI9yB,EAAA+yB,kBAExB,KAAAC,WAAA,EACA,KAAAC,mBAAA,EACA,KAAAC,yBAAA,EACA,KAAAC,wBAAA,EACA,KAAAC,aAAuB,EACvB,KAAAC,cAAwB,EACxB,KAAAC,gBAAmC,CACzCnxB,WAAA,EACAC,SAAA,EACAsX,kBAAA,GAGe,KAAA6Z,oBAAsBp8B,KAAKsK,SAAS,IAAI1B,EAAAmI,cACzC,KAAAnF,mBAAsB5L,KAAKo8B,oBAAoBnrB,MAC9C,KAAAorB,0BAA4Br8B,KAAKsK,SAAS,IAAI1B,EAAAmI,cAC/C,KAAAuD,yBAA2BtU,KAAKq8B,0BAA0BprB,MACzD,KAAAwJ,UAAYza,KAAKsK,SAAS,IAAI1B,EAAAmI,cAC/B,KAAAjG,SAAW9K,KAAKya,UAAUxJ,MACzB,KAAAqrB,kBAAoBt8B,KAAKsK,SAAS,IAAI1B,EAAAmI,cACvC,KAAAwrB,iBAAmBv8B,KAAKs8B,kBAAkBrrB,MAgBxDjR,KAAKw8B,iBAAmB,IAAIv0B,EAAAyO,gBAAgB5N,EAAmB/G,QAAQ,CAACyE,EAAOC,IAAQzG,KAAKwK,YAAYhE,EAAOC,KAC/GzG,KAAKsK,SAAStK,KAAKw8B,kBAEnBx8B,KAAK6L,kBAAoB,IAAIpD,EAAAqD,iBAAiBhD,EAAmB/G,QACjE/B,KAAK6L,kBAAkBE,aAAY,IAAM/L,KAAK0zB,iCAC9C1zB,KAAKsK,SAAStK,KAAK6L,mBAEnB7L,KAAKsK,SAAS3B,EAAciC,UAAS,IAAM5K,KAAKy8B,kBAChDz8B,KAAKsK,SAAS3B,EAAc2U,QAAQ6M,kBAAiB,KAAK,IAAA3jB,EAAC,OAAoB,QAApBA,EAAAxG,KAAK07B,UAAUn7B,aAAA,IAAKiG,OAAA,EAAAA,EAAEY,OAAO,KACxFpH,KAAKsK,SAASvC,EAAegqB,gBAAe,IAAM/xB,KAAKgyB,2BACvDhyB,KAAKsK,SAAStK,KAAKygB,iBAAiBuZ,kBAAiB,IAAMh6B,KAAK2zB,2BAKhE3zB,KAAKsK,SAAS1C,EAAkBolB,wBAAuB,IAAMhtB,KAAKy8B,kBAClEz8B,KAAKsK,SAAS1C,EAAkBqlB,qBAAoB,IAAMjtB,KAAKy8B,kBAG/Dz8B,KAAKsK,SAASvC,EAAemyB,uBAAuB,CAClD,eACA,6BACA,gBACA,aACA,aACA,WACA,aACA,iBACA,yBACC,KACDl6B,KAAKoH,QACLpH,KAAKgiB,aAAarZ,EAAc1B,KAAM0B,EAActD,MACpDrF,KAAKy8B,cAAc,KAIrBz8B,KAAKsK,SAASvC,EAAemyB,uBAAuB,CAClD,cACA,gBACC,IAAMl6B,KAAKulB,YAAY5c,EAAcgE,OAAO0F,EAAG1J,EAAcgE,OAAO0F,GAAA,MAIvErS,KAAKsK,UAAA,EAAS/B,EAAAyD,0BAAyBlD,EAAmB/G,OAAQ,UAAU,IAAM/B,KAAK0zB,kCAEvF1zB,KAAKsK,SAAS4N,EAAaqS,gBAAe,IAAMvqB,KAAKy8B,kBAIjD,yBAA0B3zB,EAAmB/G,OAAQ,CACvD,MAAMyE,EAAW,IAAIsC,EAAmB/G,OAAO26B,sBAAqBl2B,GAAKxG,KAAK28B,0BAA0Bn2B,EAAEA,EAAE0D,OAAS,KAAK,CAAE0yB,UAAW,IACvIp2B,EAASq2B,QAAQp2B,GACjBzG,KAAKsK,SAAS,CAAEpH,QAASA,IAAMsD,EAASs2B,c,CAE5C,CAEQH,yBAAAA,CAA0Bn2B,GAChCxG,KAAK67B,eAAA,IAAYr1B,EAAMu2B,eAA4D,IAA5Bv2B,EAAMw2B,mBAA4Bx2B,EAAMu2B,eAG1F/8B,KAAK67B,WAAc77B,KAAKygB,iBAAiBqH,cAC5C9nB,KAAKygB,iBAAiB4C,WAGnBrjB,KAAK67B,WAAa77B,KAAK87B,oBAC1B97B,KAAK27B,kBAAkBsB,QACvBj9B,KAAKulB,YAAY,EAAGvlB,KAAKmX,UAAY,GACrCnX,KAAK87B,mBAAA,EAET,CAEOvW,WAAAA,CAAY/e,EAAeC,EAAasB,GAAA,GACzC/H,KAAK67B,UACP77B,KAAK87B,mBAAA,GAGF/zB,IACH/H,KAAK+7B,yBAAA,GAEP/7B,KAAKw8B,iBAAiB9vB,QAAQlG,EAAOC,EAAKzG,KAAKmX,WACjD,CAEQ3M,WAAAA,CAAYhE,EAAeC,GAC5BzG,KAAK07B,UAAUn7B,QAOpBiG,EAAQ6B,KAAKgP,IAAI7Q,EAAOxG,KAAKmX,UAAY,GACzC1Q,EAAM4B,KAAKgP,IAAI5Q,EAAKzG,KAAKmX,UAAY,GAGrCnX,KAAK07B,UAAUn7B,MAAMqzB,WAAWptB,EAAOC,GAGnCzG,KAAKg8B,yBACPh8B,KAAK07B,UAAUn7B,MAAM+hB,uBAAuBtiB,KAAKm8B,gBAAgBnxB,MAAOhL,KAAKm8B,gBAAgBlxB,IAAKjL,KAAKm8B,gBAAgB5Z,kBACvHviB,KAAKg8B,wBAAA,GAIFh8B,KAAK+7B,yBACR/7B,KAAKq8B,0BAA0B5nB,KAAK,CAAEzJ,MAAAxE,EAAOyE,IAAAxE,IAE/CzG,KAAKya,UAAUhG,KAAK,CAAEzJ,MAAAxE,EAAOyE,IAAAxE,IAC7BzG,KAAK+7B,yBAAA,EACP,CAEO10B,MAAAA,CAAOb,EAAcC,GAC1BzG,KAAKmX,UAAY1Q,EACjBzG,KAAKk9B,qBACP,CAEQlL,qBAAAA,GACDhyB,KAAK07B,UAAUn7B,QAGpBP,KAAKulB,YAAY,EAAGvlB,KAAKmX,UAAY,GACrCnX,KAAKk9B,sBACP,CAEQA,mBAAAA,GACDl9B,KAAK07B,UAAUn7B,QAIhBP,KAAK07B,UAAUn7B,MAAMiH,WAAWC,IAAIsG,OAAOpG,QAAU3H,KAAKi8B,cAAgBj8B,KAAK07B,UAAUn7B,MAAMiH,WAAWC,IAAIsG,OAAO5M,SAAWnB,KAAKk8B,eAGzIl8B,KAAKo8B,oBAAoB3nB,KAAKzU,KAAK07B,UAAUn7B,MAAMiH,YACrD,CAEO4Z,WAAAA,GACL,QAASphB,KAAK07B,UAAUn7B,KAC1B,CAEO8gB,WAAAA,CAAY7a,GACjBxG,KAAK07B,UAAUn7B,MAAQiG,EACvBxG,KAAK07B,UAAUn7B,MAAM8hB,iBAAgB7b,GAAKxG,KAAKulB,YAAY/e,EAAEwE,MAAOxE,EAAEyE,KAAA,KAGtEjL,KAAKg8B,wBAAA,EACLh8B,KAAKy8B,cACP,CAEOzlB,kBAAAA,CAAmBxQ,GACxB,OAAOxG,KAAKw8B,iBAAiBxlB,mBAAmBxQ,EAClD,CAEQi2B,YAAAA,GACFz8B,KAAK67B,UACP77B,KAAK87B,mBAAA,EAEL97B,KAAKulB,YAAY,EAAGvlB,KAAKmX,UAAY,EAEzC,CAEOiR,iBAAAA,G,QACApoB,KAAK07B,UAAUn7B,QAGkB,QAAtCkG,GAAAD,EAAAxG,KAAK07B,UAAUn7B,OAAM6nB,yBAAA,IAAiB3hB,GAAAA,EAAA0P,KAAA3P,GACtCxG,KAAKy8B,eACP,CAEO/I,4BAAAA,GAGL1zB,KAAKygB,iBAAiB4C,UAEjBrjB,KAAK07B,UAAUn7B,QAGpBP,KAAK07B,UAAUn7B,MAAMmzB,+BACrB1zB,KAAKulB,YAAY,EAAGvlB,KAAKmX,UAAY,GACvC,CAEO6K,YAAAA,CAAaxb,EAAcC,GAC3BzG,KAAK07B,UAAUn7B,QAGhBP,KAAK67B,UACP77B,KAAK27B,kBAAkB3rB,KAAI,IAAMhQ,KAAK07B,UAAUn7B,MAAOyhB,aAAaxb,EAAMC,KAE1EzG,KAAK07B,UAAUn7B,MAAMyhB,aAAaxb,EAAMC,GAE1CzG,KAAKy8B,eACP,CAGO9I,qBAAAA,G,MACe,QAApBntB,EAAAxG,KAAK07B,UAAUn7B,aAAA,IAAKiG,GAAAA,EAAEmtB,uBACxB,CAEO1R,UAAAA,G,MACe,QAApBzb,EAAAxG,KAAK07B,UAAUn7B,aAAA,IAAKiG,GAAAA,EAAEyb,YACxB,CAEOC,WAAAA,G,MACe,QAApB1b,EAAAxG,KAAK07B,UAAUn7B,aAAA,IAAKiG,GAAAA,EAAE0b,aACxB,CAEOI,sBAAAA,CAAuB9b,EAAqCC,EAAmCsB,G,MACpG/H,KAAKm8B,gBAAgBnxB,MAAQxE,EAC7BxG,KAAKm8B,gBAAgBlxB,IAAMxE,EAC3BzG,KAAKm8B,gBAAgB5Z,iBAAmBxa,EACpB,QAApBK,EAAApI,KAAK07B,UAAUn7B,aAAA,IAAK6H,GAAAA,EAAEka,uBAAuB9b,EAAOC,EAAKsB,EAC3D,CAEOga,gBAAAA,G,MACe,QAApBvb,EAAAxG,KAAK07B,UAAUn7B,aAAA,IAAKiG,GAAAA,EAAEub,kBACxB,CAEO3a,KAAAA,G,MACe,QAApBZ,EAAAxG,KAAK07B,UAAUn7B,aAAA,IAAKiG,GAAAA,EAAEY,OACxB,G,gBApQW8Q,EAAa9P,EAAA,CAkCrBR,EAAA,EAAAkB,EAAA0N,iBACA5O,EAAA,EAAAe,EAAAgY,kBACA/Y,EAAA,EAAAkB,EAAAyS,oBACA3T,EAAA,EAAAkB,EAAAmM,gBACArN,EAAA,EAAAe,EAAA6X,qBACA5Y,EAAA,EAAAe,EAAAkY,gBAvCQ3I,E,ugBChBb,MAAA3P,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,KAEAY,EAAAZ,EAAA,MACAa,EAAAb,EAAA,MACAS,EAAAT,EAAA,KACAc,EAAAd,EAAA,MAEAe,EAAAf,EAAA,MACAmQ,EAAAnQ,EAAA,KAEAoQ,EAAApQ,EAAA,MAwBMqQ,EAA0BsP,OAAOC,aAAa,KAC9CtP,EAA+B,IAAI8kB,OAAO/kB,EAAyB,KA4BlE,IAAME,EAAgB7R,EAAA0b,iBAAtB,cAA+B3Z,EAAAQ,WAmDpCtH,WAAAA,CACmB8E,EACAC,EACAsB,EACDK,EACFR,EACCW,EACEN,EACDU,EACKE,GAErBI,QAViB,KAAA0I,SAAAnL,EACA,KAAAimB,eAAAhmB,EACA,KAAA22B,WAAAr1B,EACgB,KAAAyI,eAAApI,EACF,KAAAyoB,aAAAjpB,EACC,KAAAgK,cAAArJ,EACE,KAAA6M,gBAAAnN,EACD,KAAAd,eAAAwB,EACK,KAAA0X,oBAAAxX,EAnDhC,KAAAw0B,kBAA4B,EAqB5B,KAAAC,UAAA,EAKA,KAAAnJ,UAAsB,IAAIjc,EAAA3C,SAE1B,KAAAgoB,oBAA8B,EAC9B,KAAAC,kBAAA,EACA,KAAAC,wBAAA,EACA,KAAAC,sBAAA,EAES,KAAAC,uBAAyB39B,KAAKsK,SAAS,IAAI1B,EAAAmI,cAC5C,KAAAyR,sBAAwBxiB,KAAK29B,uBAAuB1sB,MACnD,KAAA2sB,iBAAmB59B,KAAKsK,SAAS,IAAI1B,EAAAmI,cACtC,KAAAsR,gBAAkBriB,KAAK49B,iBAAiB3sB,MACvC,KAAAyJ,mBAAqB1a,KAAKsK,SAAS,IAAI1B,EAAAmI,cACxC,KAAA4J,kBAAoB3a,KAAK0a,mBAAmBzJ,MAC3C,KAAA8Y,sBAAwB/pB,KAAKsK,SAAS,IAAI1B,EAAAmI,cAC3C,KAAA2Q,qBAAuB1hB,KAAK+pB,sBAAsB9Y,MAgBhEjR,KAAK69B,mBAAqBr3B,GAASxG,KAAK6R,iBAAiBrL,GACzDxG,KAAK89B,iBAAmBt3B,GAASxG,KAAK+R,eAAevL,GACrDxG,KAAK6wB,aAAakN,aAAY,KACxB/9B,KAAK0e,cACP1e,KAAKumB,gBAAA,IAGTvmB,KAAKg+B,cAAgBh+B,KAAKwQ,eAAe7D,OAAOC,MAAMqxB,QAAOz3B,GAAUxG,KAAKk+B,YAAY13B,KACxFxG,KAAKsK,SAAStK,KAAKwQ,eAAe8M,QAAQ6M,kBAAiB3jB,GAAKxG,KAAKm+B,sBAAsB33B,MAE3FxG,KAAK+iB,SAEL/iB,KAAKo+B,OAAS,IAAI31B,EAAA+wB,eAAex5B,KAAKwQ,gBACtCxQ,KAAKq+B,qBAAuB,EAE5Br+B,KAAKsK,UAAA,EAAS9B,EAAAyD,eAAa,KACzBjM,KAAKs+B,2BAA2B,IAEpC,CAEOxiB,KAAAA,GACL9b,KAAKumB,gBACP,CAMOzD,OAAAA,GACL9iB,KAAKumB,iBACLvmB,KAAKs9B,UAAA,CACP,CAKOva,MAAAA,GACL/iB,KAAKs9B,UAAA,CACP,CAEA,kBAAAjX,GAA4D,OAAOrmB,KAAKo+B,OAAOzE,mBAAqB,CACpG,gBAAArT,GAA0D,OAAOtmB,KAAKo+B,OAAOvE,iBAAmB,CAKhG,gBAAAnb,GACE,MAAMlY,EAAQxG,KAAKo+B,OAAOzE,oBACpBlzB,EAAMzG,KAAKo+B,OAAOvE,kBACxB,SAAKrzB,IAAUC,GAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,GACjD,CAKA,iBAAAyI,GACE,MAAM1I,EAAQxG,KAAKo+B,OAAOzE,oBACpBlzB,EAAMzG,KAAKo+B,OAAOvE,kBACxB,IAAKrzB,IAAUC,EACb,MAAO,GAGT,MAAMsB,EAAS/H,KAAKwQ,eAAe7D,OAC7BvE,EAAmB,GAEzB,GAAkC,IAA9BpI,KAAKq+B,qBAA+C,CAEtD,GAAI73B,EAAM,KAAOC,EAAI,GACnB,MAAO,GAKT,MAAMmB,EAAWpB,EAAM,GAAKC,EAAI,GAAKD,EAAM,GAAKC,EAAI,GAC9C8B,EAAS/B,EAAM,GAAKC,EAAI,GAAKA,EAAI,GAAKD,EAAM,GAClD,IAAK,IAAIyB,EAAIzB,EAAM,GAAIyB,GAAKxB,EAAI,GAAIwB,IAAK,CACvC,MAAMzB,EAAWuB,EAAO8E,4BAA4B5E,GAAA,EAASL,EAAUW,GACvEH,EAAOqE,KAAKjG,E,MAET,CAEL,MAAMoB,EAAiBpB,EAAM,KAAOC,EAAI,GAAKA,EAAI,QAAK,EACtD2B,EAAOqE,KAAK1E,EAAO8E,4BAA4BrG,EAAM,IAAI,EAAMA,EAAM,GAAIoB,IAGzE,IAAK,IAAIA,EAAIpB,EAAM,GAAK,EAAGoB,GAAKnB,EAAI,GAAK,EAAGmB,IAAK,CAC/C,MAAMpB,EAAauB,EAAO6E,MAAMsD,IAAItI,GAC9BnB,EAAWsB,EAAO8E,4BAA4BjF,GAAA,IAChD,MAAApB,OAAA,EAAAA,EAAYulB,WACd3jB,EAAOA,EAAO8B,OAAS,IAAMzD,EAE7B2B,EAAOqE,KAAKhG,E,CAKhB,GAAID,EAAM,KAAOC,EAAI,GAAI,CACvB,MAAMD,EAAauB,EAAO6E,MAAMsD,IAAIzJ,EAAI,IAClCmB,EAAWG,EAAO8E,4BAA4BpG,EAAI,IAAI,EAAM,EAAGA,EAAI,IACrED,GAAcA,EAAYulB,UAC5B3jB,EAAOA,EAAO8B,OAAS,IAAMtC,EAE7BQ,EAAOqE,KAAK7E,E,EAWlB,OAJwBQ,EAAO4K,KAAIxM,GAC1BA,EAAKyH,QAAQoK,EAA8B,OACjDge,KAAKxtB,EAAQwe,UAAY,OAAS,KAGvC,CAKOd,cAAAA,GACLvmB,KAAKo+B,OAAO7X,iBACZvmB,KAAKs+B,4BACLt+B,KAAK0M,UACL1M,KAAK0a,mBAAmBjG,MAC1B,CAOO/H,OAAAA,CAAQlG,GAERxG,KAAK0pB,yBACR1pB,KAAK0pB,uBAAyB1pB,KAAKqgB,oBAAoBte,OAAOkV,uBAAsB,IAAMjX,KAAKyqB,cAK7F5hB,EAAQoW,SAAWzY,GACCxG,KAAKkP,cACThF,QAChBlK,KAAK29B,uBAAuBlpB,KAAKzU,KAAKkP,cAG5C,CAMQub,QAAAA,GACNzqB,KAAK0pB,4BAAA,EACL1pB,KAAK49B,iBAAiBnpB,KAAK,CACzBzJ,MAAOhL,KAAKo+B,OAAOzE,oBACnB1uB,IAAKjL,KAAKo+B,OAAOvE,kBACjBtX,iBAAgD,IAA9BviB,KAAKq+B,sBAE3B,CAMQE,mBAAAA,CAAoB/3B,GAC1B,MAAMC,EAASzG,KAAKw+B,sBAAsBh4B,GACpCuB,EAAQ/H,KAAKo+B,OAAOzE,oBACpBvxB,EAAMpI,KAAKo+B,OAAOvE,kBAExB,SAAK9xB,GAAUK,GAAQ3B,IAIhBzG,KAAKy+B,sBAAsBh4B,EAAQsB,EAAOK,EACnD,CAEOs2B,iBAAAA,CAAkBl4B,EAAWC,GAClC,MAAMsB,EAAQ/H,KAAKo+B,OAAOzE,oBACpBvxB,EAAMpI,KAAKo+B,OAAOvE,kBACxB,SAAK9xB,IAAUK,IAGRpI,KAAKy+B,sBAAsB,CAACj4B,EAAGC,GAAIsB,EAAOK,EACnD,CAEUq2B,qBAAAA,CAAsBj4B,EAA0BC,EAAyBsB,GACjF,OAAQvB,EAAO,GAAKC,EAAM,IAAMD,EAAO,GAAKuB,EAAI,IAC3CtB,EAAM,KAAOsB,EAAI,IAAMvB,EAAO,KAAOC,EAAM,IAAMD,EAAO,IAAMC,EAAM,IAAMD,EAAO,GAAKuB,EAAI,IAC1FtB,EAAM,GAAKsB,EAAI,IAAMvB,EAAO,KAAOuB,EAAI,IAAMvB,EAAO,GAAKuB,EAAI,IAC7DtB,EAAM,GAAKsB,EAAI,IAAMvB,EAAO,KAAOC,EAAM,IAAMD,EAAO,IAAMC,EAAM,EACzE,CAMQk4B,mBAAAA,CAAoBn4B,EAAmBC,G,QAE7C,MAAMmB,EAAyC,QAAjCQ,EAA2B,QAA3BL,EAAA/H,KAAKo9B,WAAW9sB,mBAAA,IAAWvI,OAAA,EAAAA,EAAE0K,YAAA,IAAIrK,OAAA,EAAAA,EAAEgL,MACjD,GAAIxL,EAIF,OAHA5H,KAAKo+B,OAAO/X,eAAiB,CAACze,EAAMoD,MAAMoH,EAAI,EAAGxK,EAAMoD,MAAMqH,EAAI,GACjErS,KAAKo+B,OAAO1E,sBAAA,EAAuB5wB,EAAA81B,gBAAeh3B,EAAO5H,KAAKwQ,eAAevJ,MAC7EjH,KAAKo+B,OAAO9X,kBAAA,GAAe,EAI7B,MAAM/d,EAASvI,KAAKw+B,sBAAsBh4B,GAC1C,QAAI+B,IACFvI,KAAK6+B,cAAct2B,EAAQ9B,GAC3BzG,KAAKo+B,OAAO9X,kBAAA,GAAe,EAI/B,CAKOE,SAAAA,GACLxmB,KAAKo+B,OAAO3E,mBAAA,EACZz5B,KAAK0M,UACL1M,KAAK0a,mBAAmBjG,MAC1B,CAEOgS,WAAAA,CAAYjgB,EAAeC,GAChCzG,KAAKo+B,OAAO7X,iBACZ/f,EAAQ6B,KAAKC,IAAI9B,EAAO,GACxBC,EAAM4B,KAAKgP,IAAI5Q,EAAKzG,KAAKwQ,eAAe7D,OAAOC,MAAM1C,OAAS,GAC9DlK,KAAKo+B,OAAO/X,eAAiB,CAAC,EAAG7f,GACjCxG,KAAKo+B,OAAO9X,aAAe,CAACtmB,KAAKwQ,eAAevJ,KAAMR,GACtDzG,KAAK0M,UACL1M,KAAK0a,mBAAmBjG,MAC1B,CAMQypB,WAAAA,CAAY13B,GACGxG,KAAKo+B,OAAOtE,WAAWtzB,IAE1CxG,KAAK0M,SAET,CAMQ8xB,qBAAAA,CAAsBh4B,GAC5B,MAAMC,EAASzG,KAAK4R,cAAc+C,UAAUnO,EAAOxG,KAAKysB,eAAgBzsB,KAAKwQ,eAAevJ,KAAMjH,KAAKwQ,eAAenL,MAAA,GACtH,GAAKoB,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAMzG,KAAKwQ,eAAe7D,OAAOG,MACjCrG,CACT,CAOQq4B,0BAAAA,CAA2Bt4B,GACjC,IAAIC,GAAA,EAAS8B,EAAAgpB,4BAA2BvxB,KAAKqgB,oBAAoBte,OAAQyE,EAAOxG,KAAKysB,gBAAgB,GACrG,MAAM1kB,EAAiB/H,KAAKmH,eAAeK,WAAWC,IAAIsG,OAAO5M,OACjE,OAAIsF,GAAU,GAAKA,GAAUsB,EACpB,GAELtB,EAASsB,IACXtB,GAAUsB,GAGZtB,EAAS4B,KAAKgP,IAAIhP,KAAKC,IAAI7B,GA1YG,QA2Y9BA,GA3Y8B,GA4YtBA,EAAS4B,KAAK8c,IAAI1e,GAAW4B,KAAKwiB,MAAe,GAATpkB,GAClD,CAOOue,oBAAAA,CAAqBxe,GAC1B,OAAIqC,EAAQyD,MACH9F,EAAM4d,QAAUpkB,KAAKoV,gBAAgBhH,WAAW2wB,8BAGlDv4B,EAAM6d,QACf,CAMO1B,eAAAA,CAAgBnc,GAIrB,GAHAxG,KAAKu9B,oBAAsB/2B,EAAMw4B,WAGZ,IAAjBx4B,EAAMsY,SAAgB9e,KAAK0e,eAKV,IAAjBlY,EAAMsY,OAAV,CAKA,IAAK9e,KAAKs9B,SAAU,CAClB,IAAKt9B,KAAKglB,qBAAqBxe,GAC7B,OAIFA,EAAM4I,iB,CAIR5I,EAAMkH,iBAGN1N,KAAKq9B,kBAAoB,EAErBr9B,KAAKs9B,UAAY92B,EAAM6d,SACzBrkB,KAAKi/B,wBAAwBz4B,GAER,IAAjBA,EAAM04B,OACRl/B,KAAKm/B,mBAAmB34B,GACE,IAAjBA,EAAM04B,OACfl/B,KAAKo/B,mBAAmB54B,GACE,IAAjBA,EAAM04B,QACfl/B,KAAKq/B,mBAAmB74B,GAI5BxG,KAAKs/B,yBACLt/B,KAAK0M,SAAA,E,CACP,CAKQ4yB,sBAAAA,GAEFt/B,KAAKysB,eAAe3M,gBACtB9f,KAAKysB,eAAe3M,cAAc7V,iBAAiB,YAAajK,KAAK69B,oBACrE79B,KAAKysB,eAAe3M,cAAc7V,iBAAiB,UAAWjK,KAAK89B,mBAErE99B,KAAKu/B,yBAA2Bv/B,KAAKqgB,oBAAoBte,OAAOy9B,aAAY,IAAMx/B,KAAKy/B,eA5c9D,GA6c3B,CAKQnB,yBAAAA,GACFt+B,KAAKysB,eAAe3M,gBACtB9f,KAAKysB,eAAe3M,cAAcxS,oBAAoB,YAAatN,KAAK69B,oBACxE79B,KAAKysB,eAAe3M,cAAcxS,oBAAoB,UAAWtN,KAAK89B,mBAExE99B,KAAKqgB,oBAAoBte,OAAO29B,cAAc1/B,KAAKu/B,0BACnDv/B,KAAKu/B,8BAAA,CACP,CAOQN,uBAAAA,CAAwBz4B,GAC1BxG,KAAKo+B,OAAO/X,iBACdrmB,KAAKo+B,OAAO9X,aAAetmB,KAAKw+B,sBAAsBh4B,GAE1D,CAOQ24B,kBAAAA,CAAmB34B,GAOzB,GANAxG,KAAKo+B,OAAO1E,qBAAuB,EACnC15B,KAAKo+B,OAAO3E,mBAAA,EACZz5B,KAAKq+B,qBAAuBr+B,KAAKwlB,mBAAmBhf,GAAS,EAAuB,EAGpFxG,KAAKo+B,OAAO/X,eAAiBrmB,KAAKw+B,sBAAsBh4B,IACnDxG,KAAKo+B,OAAO/X,eACf,OAEFrmB,KAAKo+B,OAAO9X,kBAAA,EAGZ,MAAM7f,EAAOzG,KAAKwQ,eAAe7D,OAAOC,MAAMsD,IAAIlQ,KAAKo+B,OAAO/X,eAAe,IACxE5f,GAKDA,EAAKyD,SAAWlK,KAAKo+B,OAAO/X,eAAe,IAMM,IAAjD5f,EAAKk5B,SAAS3/B,KAAKo+B,OAAO/X,eAAe,KAC3CrmB,KAAKo+B,OAAO/X,eAAe,IAE/B,CAMQ+Y,kBAAAA,CAAmB54B,GACrBxG,KAAK2+B,oBAAoBn4B,GAAA,KAC3BxG,KAAKq+B,qBAAuB,EAEhC,CAOQgB,kBAAAA,CAAmB74B,GACzB,MAAMC,EAASzG,KAAKw+B,sBAAsBh4B,GACtCC,IACFzG,KAAKq+B,qBAAuB,EAC5Br+B,KAAK4/B,cAAcn5B,EAAO,IAE9B,CAMO+e,kBAAAA,CAAmBhf,GACxB,OAAOA,EAAM4d,UAAYvb,EAAQyD,OAAStM,KAAKoV,gBAAgBhH,WAAW2wB,8BAC5E,CAOQltB,gBAAAA,CAAiBrL,GAQvB,GAJAA,EAAMmH,4BAID3N,KAAKo+B,OAAO/X,eACf,OAKF,MAAM5f,EAAuBzG,KAAKo+B,OAAO9X,aAAe,CAACtmB,KAAKo+B,OAAO9X,aAAa,GAAItmB,KAAKo+B,OAAO9X,aAAa,IAAM,KAIrH,GADAtmB,KAAKo+B,OAAO9X,aAAetmB,KAAKw+B,sBAAsBh4B,IACjDxG,KAAKo+B,OAAO9X,aAEf,YADAtmB,KAAK0M,SAAA,GAK2B,IAA9B1M,KAAKq+B,qBACHr+B,KAAKo+B,OAAO9X,aAAa,GAAKtmB,KAAKo+B,OAAO/X,eAAe,GAC3DrmB,KAAKo+B,OAAO9X,aAAa,GAAK,EAE9BtmB,KAAKo+B,OAAO9X,aAAa,GAAKtmB,KAAKwQ,eAAevJ,KAEb,IAA9BjH,KAAKq+B,sBACdr+B,KAAK6/B,gBAAgB7/B,KAAKo+B,OAAO9X,cAInCtmB,KAAKq9B,kBAAoBr9B,KAAK8+B,2BAA2Bt4B,GAKvB,IAA9BxG,KAAKq+B,uBACHr+B,KAAKq9B,kBAAoB,EAC3Br9B,KAAKo+B,OAAO9X,aAAa,GAAKtmB,KAAKwQ,eAAevJ,KACzCjH,KAAKq9B,kBAAoB,IAClCr9B,KAAKo+B,OAAO9X,aAAa,GAAK,IAOlC,MAAMve,EAAS/H,KAAKwQ,eAAe7D,OACnC,GAAI3M,KAAKo+B,OAAO9X,aAAa,GAAKve,EAAO6E,MAAM1C,OAAQ,CACrD,MAAM1D,EAAOuB,EAAO6E,MAAMsD,IAAIlQ,KAAKo+B,OAAO9X,aAAa,IACnD9f,GAAuD,IAA/CA,EAAKm5B,SAAS3/B,KAAKo+B,OAAO9X,aAAa,KACjDtmB,KAAKo+B,OAAO9X,aAAa,I,CAKxB7f,GACHA,EAAqB,KAAOzG,KAAKo+B,OAAO9X,aAAa,IACrD7f,EAAqB,KAAOzG,KAAKo+B,OAAO9X,aAAa,IACrDtmB,KAAK0M,SAAA,EAET,CAMQ+yB,WAAAA,GACN,GAAKz/B,KAAKo+B,OAAO9X,cAAiBtmB,KAAKo+B,OAAO/X,gBAG1CrmB,KAAKq9B,kBAAmB,CAC1Br9B,KAAK+pB,sBAAsBtV,KAAK,CAAEkN,OAAQ3hB,KAAKq9B,kBAAmBzb,qBAAA,IAKlE,MAAMpb,EAASxG,KAAKwQ,eAAe7D,OAC/B3M,KAAKq9B,kBAAoB,GACO,IAA9Br9B,KAAKq+B,uBACPr+B,KAAKo+B,OAAO9X,aAAa,GAAKtmB,KAAKwQ,eAAevJ,MAEpDjH,KAAKo+B,OAAO9X,aAAa,GAAKje,KAAKgP,IAAI7Q,EAAOsG,MAAQ9M,KAAKwQ,eAAenL,KAAMmB,EAAOoG,MAAM1C,OAAS,KAEpE,IAA9BlK,KAAKq+B,uBACPr+B,KAAKo+B,OAAO9X,aAAa,GAAK,GAEhCtmB,KAAKo+B,OAAO9X,aAAa,GAAK9f,EAAOsG,OAEvC9M,KAAK0M,S,CAET,CAMQqF,cAAAA,CAAevL,GACrB,MAAMC,EAAcD,EAAMw4B,UAAYh/B,KAAKu9B,oBAI3C,GAFAv9B,KAAKs+B,4BAEDt+B,KAAKkP,cAAchF,QAAU,GAAKzD,EAjpBP,KAipBmDD,EAAM4d,QAAUpkB,KAAKoV,gBAAgBhH,WAAW0xB,qBAChI,GAAI9/B,KAAKwQ,eAAe7D,OAAO0R,QAAUre,KAAKwQ,eAAe7D,OAAOG,MAAO,CACzE,MAAMrG,EAAczG,KAAK4R,cAAc+C,UACrCnO,EACAxG,KAAK2R,SACL3R,KAAKwQ,eAAevJ,KACpBjH,KAAKwQ,eAAenL,MAAA,GAGtB,GAAIoB,QAAA,IAAeA,EAAY,aAAoBA,EAAY,GAAkB,CAC/E,MAAMD,GAAA,EAAWyB,EAAAupB,oBAAmB/qB,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAGzG,KAAKwQ,eAAgBxQ,KAAK6wB,aAAa3iB,gBAAgBgX,uBACnIllB,KAAK6wB,aAAaviB,iBAAiB9H,GAAA,E,QAIvCxG,KAAK+/B,8BAET,CAEQA,4BAAAA,GACN,MAAMv5B,EAAQxG,KAAKo+B,OAAOzE,oBACpBlzB,EAAMzG,KAAKo+B,OAAOvE,kBAClB9xB,KAAiBvB,IAAWC,GAAQD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,IAE7EsB,EAQAvB,GAAUC,IAIVzG,KAAKy9B,oBAAuBz9B,KAAK09B,kBACpCl3B,EAAM,KAAOxG,KAAKy9B,mBAAmB,IAAMj3B,EAAM,KAAOxG,KAAKy9B,mBAAmB,IAChFh3B,EAAI,KAAOzG,KAAK09B,iBAAiB,IAAMj3B,EAAI,KAAOzG,KAAK09B,iBAAiB,IAExE19B,KAAKggC,uBAAuBx5B,EAAOC,EAAKsB,IAfpC/H,KAAKw9B,kBACPx9B,KAAKggC,uBAAuBx5B,EAAOC,EAAKsB,EAgB9C,CAEQi4B,sBAAAA,CAAuBx5B,EAAqCC,EAAmCsB,GACrG/H,KAAKy9B,mBAAqBj3B,EAC1BxG,KAAK09B,iBAAmBj3B,EACxBzG,KAAKw9B,iBAAmBz1B,EACxB/H,KAAK0a,mBAAmBjG,MAC1B,CAEQ0pB,qBAAAA,CAAsB33B,GAC5BxG,KAAKumB,iBAKLvmB,KAAKg+B,cAAc96B,UACnBlD,KAAKg+B,cAAgBx3B,EAAE4jB,aAAaxd,MAAMqxB,QAAOz3B,GAAUxG,KAAKk+B,YAAY13B,IAC9E,CAQQy5B,mCAAAA,CAAoCz5B,EAAyBC,GACnE,IAAIsB,EAAYtB,EAChB,IAAK,IAAI2B,EAAI,EAAG3B,GAAK2B,EAAGA,IAAK,CAC3B,MAAMR,EAASpB,EAAWkP,SAAStN,EAAGpI,KAAKm0B,WAAWe,WAAWhrB,OAC/B,IAA9BlK,KAAKm0B,UAAU7V,WAGjBvW,IACSH,EAAS,GAAKnB,IAAM2B,IAI7BL,GAAaH,EAAS,E,CAG1B,OAAOG,CACT,CAEOme,YAAAA,CAAa1f,EAAaC,EAAasB,GAC5C/H,KAAKo+B,OAAO7X,iBACZvmB,KAAKs+B,4BACLt+B,KAAKo+B,OAAO/X,eAAiB,CAAC7f,EAAKC,GACnCzG,KAAKo+B,OAAO1E,qBAAuB3xB,EACnC/H,KAAK0M,UACL1M,KAAK+/B,8BACP,CAEOtwB,gBAAAA,CAAiBjJ,GACjBxG,KAAKu+B,oBAAoB/3B,KACxBxG,KAAK2+B,oBAAoBn4B,GAAA,IAC3BxG,KAAK0M,SAAA,GAEP1M,KAAK+/B,+BAET,CAMQG,UAAAA,CAAW15B,EAA0BC,EAAuCsB,GAAA,EAAyCK,GAAA,GAE3H,GAAI5B,EAAO,IAAMxG,KAAKwQ,eAAevJ,KACnC,OAGF,MAAMW,EAAS5H,KAAKwQ,eAAe7D,OAC7BpE,EAAaX,EAAOgF,MAAMsD,IAAI1J,EAAO,IAC3C,IAAK+B,EACH,OAGF,MAAMN,EAAOL,EAAOiF,4BAA4BrG,EAAO,IAAI,GAG3D,IAAIiC,EAAazI,KAAKigC,oCAAoC13B,EAAY/B,EAAO,IACzEmC,EAAWF,EAGf,MAAMG,EAAapC,EAAO,GAAKiC,EAC/B,IAAID,EAAoB,EACpBK,EAAqB,EACrBC,EAAqB,EACrBoP,EAAsB,EAE1B,GAAgC,MAA5BjQ,EAAKk4B,OAAO13B,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhCR,EAAKk4B,OAAO13B,EAAa,IAChDA,IAEF,KAAOE,EAAWV,EAAKiC,QAAwC,MAA9BjC,EAAKk4B,OAAOx3B,EAAW,IACtDA,G,KAEG,CAKL,IAAIlC,EAAWD,EAAO,GAClBuB,EAASvB,EAAO,GAIkB,IAAlC+B,EAAW+V,SAAS7X,KACtB+B,IACA/B,KAEkC,IAAhC8B,EAAW+V,SAASvW,KACtBc,IACAd,KAIF,MAAMK,EAASG,EAAW8yB,UAAUtzB,GAAQmC,OAO5C,IANI9B,EAAS,IACX8P,GAAuB9P,EAAS,EAChCO,GAAYP,EAAS,GAIhB3B,EAAW,GAAKgC,EAAa,IAAMzI,KAAKogC,qBAAqB73B,EAAWmN,SAASjP,EAAW,EAAGzG,KAAKm0B,aAAa,CACtH5rB,EAAWmN,SAASjP,EAAW,EAAGzG,KAAKm0B,WACvC,MAAM3tB,EAASxG,KAAKm0B,UAAUe,WAAWhrB,OACP,IAA9BlK,KAAKm0B,UAAU7V,YAEjB9V,IACA/B,KACSD,EAAS,IAGlBsC,GAAsBtC,EAAS,EAC/BiC,GAAcjC,EAAS,GAEzBiC,IACAhC,G,CAEF,KAAOsB,EAASQ,EAAW2B,QAAUvB,EAAW,EAAIV,EAAKiC,SAAWlK,KAAKogC,qBAAqB73B,EAAWmN,SAAS3N,EAAS,EAAG/H,KAAKm0B,aAAa,CAC9I5rB,EAAWmN,SAAS3N,EAAS,EAAG/H,KAAKm0B,WACrC,MAAM3tB,EAASxG,KAAKm0B,UAAUe,WAAWhrB,OACP,IAA9BlK,KAAKm0B,UAAU7V,YAEjBzV,IACAd,KACSvB,EAAS,IAGlB0R,GAAuB1R,EAAS,EAChCmC,GAAYnC,EAAS,GAEvBmC,IACAZ,G,EAKJY,IAIA,IAAIwP,EACA1P,EACEG,EACAJ,EACAM,EAIFsP,EAAS/P,KAAKgP,IAAIrX,KAAKwQ,eAAevJ,KACxC0B,EACEF,EACAD,EACAK,EACAC,EACAoP,GAEJ,GAAKzR,GAA4E,KAA5CwB,EAAKo4B,MAAM53B,EAAYE,GAAU23B,OAAtE,CAKA,GAAIv4B,GACY,IAAVoQ,GAA8C,KAA/B5P,EAAWg4B,aAAa,GAAqB,CAC9D,MAAM95B,EAAqBmB,EAAOgF,MAAMsD,IAAI1J,EAAO,GAAK,GACxD,GAAIC,GAAsB8B,EAAWwjB,WAA+E,KAAlEtlB,EAAmB85B,aAAavgC,KAAKwQ,eAAevJ,KAAO,GAAqB,CAChI,MAAMR,EAA2BzG,KAAKkgC,WAAW,CAAClgC,KAAKwQ,eAAevJ,KAAO,EAAGT,EAAO,GAAK,IAAI,MAAO,GACvG,GAAIC,EAA0B,CAC5B,MAAMD,EAASxG,KAAKwQ,eAAevJ,KAAOR,EAAyBuE,MACnEmN,GAAS3R,EACT4R,GAAU5R,C,GAOlB,GAAI4B,GACE+P,EAAQC,IAAWpY,KAAKwQ,eAAevJ,MAAkE,KAA1DsB,EAAWg4B,aAAavgC,KAAKwQ,eAAevJ,KAAO,GAAqB,CACzH,MAAMR,EAAiBmB,EAAOgF,MAAMsD,IAAI1J,EAAO,GAAK,GACpD,IAAI,MAAAC,OAAA,EAAAA,EAAgBslB,YAAgD,KAAnCtlB,EAAe85B,aAAa,GAAqB,CAChF,MAAM95B,EAAuBzG,KAAKkgC,WAAW,CAAC,EAAG15B,EAAO,GAAK,IAAI,MAAO,GACpEC,IACF2R,GAAU3R,EAAqByD,O,EAMvC,MAAO,CAAEc,MAAAmN,EAAOjO,OAAAkO,E,CAClB,CAOUymB,aAAAA,CAAcr4B,EAA0BC,GAChD,MAAMsB,EAAe/H,KAAKkgC,WAAW15B,EAAQC,GAC7C,GAAIsB,EAAc,CAEhB,KAAOA,EAAaiD,MAAQ,GAC1BjD,EAAaiD,OAAShL,KAAKwQ,eAAevJ,KAC1CT,EAAO,KAETxG,KAAKo+B,OAAO/X,eAAiB,CAACte,EAAaiD,MAAOxE,EAAO,IACzDxG,KAAKo+B,OAAO1E,qBAAuB3xB,EAAamC,M,CAEpD,CAMQ21B,eAAAA,CAAgBr5B,GACtB,MAAMC,EAAezG,KAAKkgC,WAAW15B,GAAA,GACrC,GAAIC,EAAc,CAChB,IAAIsB,EAASvB,EAAO,GAGpB,KAAOC,EAAauE,MAAQ,GAC1BvE,EAAauE,OAAShL,KAAKwQ,eAAevJ,KAC1Cc,IAKF,IAAK/H,KAAKo+B,OAAOxE,6BACf,KAAOnzB,EAAauE,MAAQvE,EAAayD,OAASlK,KAAKwQ,eAAevJ,MACpER,EAAayD,QAAUlK,KAAKwQ,eAAevJ,KAC3Cc,IAIJ/H,KAAKo+B,OAAO9X,aAAe,CAACtmB,KAAKo+B,OAAOxE,6BAA+BnzB,EAAauE,MAAQvE,EAAauE,MAAQvE,EAAayD,OAAQnC,E,CAE1I,CAOQq4B,oBAAAA,CAAqB55B,GAG3B,OAAwB,IAApBA,EAAK8X,YAGFte,KAAKoV,gBAAgBhH,WAAWoyB,cAAchvB,QAAQhL,EAAK0uB,aAAe,CACnF,CAMU0K,aAAAA,CAAcp5B,GACtB,MAAMC,EAAezG,KAAKwQ,eAAe7D,OAAO8zB,uBAAuBj6B,GACjEuB,EAAsB,CAC1BiD,MAAO,CAAEoH,EAAG,EAAGC,EAAG5L,EAAai6B,OAC/Bz1B,IAAK,CAAEmH,EAAGpS,KAAKwQ,eAAevJ,KAAO,EAAGoL,EAAG5L,EAAak6B,OAE1D3gC,KAAKo+B,OAAO/X,eAAiB,CAAC,EAAG5f,EAAai6B,OAC9C1gC,KAAKo+B,OAAO9X,kBAAA,EACZtmB,KAAKo+B,OAAO1E,sBAAA,EAAuB5wB,EAAA81B,gBAAe72B,EAAO/H,KAAKwQ,eAAevJ,KAC/E,G,mBA57BWqR,EAAgBlQ,EAAA,CAuDxBR,EAAA,EAAAuQ,EAAAlD,gBACArN,EAAA,EAAAuQ,EAAAmZ,cACA1pB,EAAA,EAAAe,EAAA6Y,eACA5Z,EAAA,EAAAuQ,EAAA3B,iBACA5O,EAAA,EAAAe,EAAAqF,gBACApG,EAAA,EAAAe,EAAA6X,sBA5DQlI,E,iNC9Db,MAAAlQ,EAAAL,EAAA,MAGatB,EAAAka,kBAAA,EAAmBvY,EAAAw4B,iBAAkC,mBAarDn6B,EAAA+Z,qBAAA,EAAsBpY,EAAAw4B,iBAAqC,sBAiB3Dn6B,EAAA+a,eAAA,EAAgBpZ,EAAAw4B,iBAA+B,gBAQ/Cn6B,EAAAuH,gBAAA,EAAiB5F,EAAAw4B,iBAAgC,iBAmCjDn6B,EAAA2b,mBAAA,EAAoBha,EAAAw4B,iBAAmC,oBA6BvDn6B,EAAAua,yBAAA,EAA0B5Y,EAAAw4B,iBAAyC,0BASnEn6B,EAAAoa,eAAA,EAAgBzY,EAAAw4B,iBAA+B,iB,uhBCtH5D,MAAAr4B,EAAAR,EAAA,MAGAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,KACAa,EAAAb,EAAA,MAWMS,EAAqBP,EAAAR,IAAI2V,QAAQ,WACjCvU,EAAqBZ,EAAAR,IAAI2V,QAAQ,WACjCtU,EAAiBb,EAAAR,IAAI2V,QAAQ,WAC7BlF,EAAwBjQ,EAAAR,IAAI2V,QAAQ,WACpCjF,EAAoB,CACxB1Q,IAAK,2BACL0V,KAAM,YAIK1W,EAAAo6B,oBAAsB3sB,OAAO4sB,OAAO,MAC/C,MAAMt6B,EAAS,CAEbyB,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WAEZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,WACZnV,EAAAR,IAAI2V,QAAQ,YAKR3W,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KACzC,IAAK,IAAIsB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAMK,EAAI3B,EAAGsB,EAAI,GAAM,EAAI,GACrBH,EAAInB,EAAGsB,EAAI,EAAK,EAAI,GACpBQ,EAAI9B,EAAEsB,EAAI,GAChBvB,EAAOiG,KAAK,CACVhF,IAAKQ,EAAA84B,SAASC,MAAM54B,EAAGR,EAAGW,GAC1B4U,KAAMlV,EAAA84B,SAASE,OAAO74B,EAAGR,EAAGW,I,CAKhC,IAAK,IAAI9B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMsB,EAAI,EAAQ,GAAJtB,EACdD,EAAOiG,KAAK,CACVhF,IAAKQ,EAAA84B,SAASC,MAAMj5B,EAAGA,EAAGA,GAC1BoV,KAAMlV,EAAA84B,SAASE,OAAOl5B,EAAGA,EAAGA,I,CAIhC,OAAOvB,CACR,EA7CgD,IA+C1C,IAAM4R,EAAY3R,EAAAma,aAAlB,cAA2BjY,EAAAK,WAQhC,UAAA0T,GAAwC,OAAO1c,KAAKkhC,OAAS,CAK7Dx/B,WAAAA,CACmB8E,GAEjByC,QAFkC,KAAAmM,gBAAA5O,EAV5B,KAAA26B,eAAsC,IAAI54B,EAAAoH,mBAC1C,KAAAyxB,mBAA0C,IAAI74B,EAAAoH,mBAKrC,KAAA0xB,gBAAkBrhC,KAAKsK,SAAS,IAAI7B,EAAAsI,cACrC,KAAAwZ,eAAiBvqB,KAAKqhC,gBAAgBpwB,MAOpDjR,KAAKkhC,QAAU,CACbt7B,WAAY4C,EACZ3C,WAAYgD,EACZ/C,OAAQgD,EACRqqB,aAAcjb,EACdud,yBAAA,EACA6L,+BAAgCnpB,EAChCkb,0BAA2BprB,EAAAuU,MAAM+kB,MAAM14B,EAAoBsP,GAC3DqpB,uCAAwCrpB,EACxCmb,kCAAmCrrB,EAAAuU,MAAM+kB,MAAM14B,EAAoBsP,GACnEwE,KAAMlW,EAAAo6B,oBAAoBR,QAC1BnI,cAAel4B,KAAKmhC,eACpBlJ,kBAAmBj4B,KAAKohC,oBAE1BphC,KAAKyhC,uBACLzhC,KAAK0hC,UAAU1hC,KAAKoV,gBAAgBhH,WAAWzI,OAE/C3F,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,wBAAwB,IAAMjjB,KAAKmhC,eAAe/5B,WAC5GpH,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,SAAS,IAAMjjB,KAAK0hC,UAAU1hC,KAAKoV,gBAAgBhH,WAAWzI,SAC1H,CAOQ+7B,SAAAA,CAAUl7B,EAAgB,CAAC,GACjC,MAAMuB,EAAS/H,KAAKkhC,QAkBpB,GAjBAn5B,EAAOnC,WAAayS,EAAW7R,EAAMZ,WAAY4C,GACjDT,EAAOlC,WAAawS,EAAW7R,EAAMX,WAAYgD,GACjDd,EAAOjC,OAASuS,EAAW7R,EAAMV,OAAQgD,GACzCf,EAAOorB,aAAe9a,EAAW7R,EAAM2sB,aAAcjb,GACrDnQ,EAAOu5B,+BAAiCjpB,EAAW7R,EAAMm7B,oBAAqBxpB,GAC9EpQ,EAAOsrB,0BAA4BprB,EAAAuU,MAAM+kB,MAAMx5B,EAAOlC,WAAYkC,EAAOu5B,gCACzEv5B,EAAOy5B,uCAAyCnpB,EAAW7R,EAAMo7B,4BAA6B75B,EAAOu5B,gCACrGv5B,EAAOurB,kCAAoCrrB,EAAAuU,MAAM+kB,MAAMx5B,EAAOlC,WAAYkC,EAAOy5B,wCACjFz5B,EAAO0tB,oBAAsBjvB,EAAMivB,oBAAsBpd,EAAW7R,EAAMivB,oBAAqBxtB,EAAA45B,iBAAA,EAC3F95B,EAAO0tB,sBAAwBxtB,EAAA45B,aACjC95B,EAAO0tB,yBAAA,GAOLxtB,EAAAuU,MAAMslB,SAAS/5B,EAAOu5B,gCAAiC,CACzD,MAAM96B,EAAU,GAChBuB,EAAOu5B,+BAAiCr5B,EAAAuU,MAAMulB,QAAQh6B,EAAOu5B,+BAAgC96B,E,CAE/F,GAAIyB,EAAAuU,MAAMslB,SAAS/5B,EAAOy5B,wCAAyC,CACjE,MAAMh7B,EAAU,GAChBuB,EAAOy5B,uCAAyCv5B,EAAAuU,MAAMulB,QAAQh6B,EAAOy5B,uCAAwCh7B,E,CAmB/G,GAjBAuB,EAAO4U,KAAOlW,EAAAo6B,oBAAoBR,QAClCt4B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAMw7B,MAAOv7B,EAAAo6B,oBAAoB,IAC7D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAMy7B,IAAKx7B,EAAAo6B,oBAAoB,IAC3D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAM07B,MAAOz7B,EAAAo6B,oBAAoB,IAC7D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAM27B,OAAQ17B,EAAAo6B,oBAAoB,IAC9D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAM47B,KAAM37B,EAAAo6B,oBAAoB,IAC5D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAM67B,QAAS57B,EAAAo6B,oBAAoB,IAC/D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAM87B,KAAM77B,EAAAo6B,oBAAoB,IAC5D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAM+7B,MAAO97B,EAAAo6B,oBAAoB,IAC7D94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAMg8B,YAAa/7B,EAAAo6B,oBAAoB,IACnE94B,EAAO4U,KAAK,GAAKtE,EAAW7R,EAAMi8B,UAAWh8B,EAAAo6B,oBAAoB,IACjE94B,EAAO4U,KAAK,IAAMtE,EAAW7R,EAAMk8B,YAAaj8B,EAAAo6B,oBAAoB,KACpE94B,EAAO4U,KAAK,IAAMtE,EAAW7R,EAAMm8B,aAAcl8B,EAAAo6B,oBAAoB,KACrE94B,EAAO4U,KAAK,IAAMtE,EAAW7R,EAAMo8B,WAAYn8B,EAAAo6B,oBAAoB,KACnE94B,EAAO4U,KAAK,IAAMtE,EAAW7R,EAAMq8B,cAAep8B,EAAAo6B,oBAAoB,KACtE94B,EAAO4U,KAAK,IAAMtE,EAAW7R,EAAMs8B,WAAYr8B,EAAAo6B,oBAAoB,KACnE94B,EAAO4U,KAAK,IAAMtE,EAAW7R,EAAMu8B,YAAat8B,EAAAo6B,oBAAoB,KAChEr6B,EAAMw8B,aAAc,CACtB,MAAM56B,EAAaC,KAAKgP,IAAItP,EAAO4U,KAAKzS,OAAS,GAAI1D,EAAMw8B,aAAa94B,QACxE,IAAK,IAAItC,EAAI,EAAGA,EAAIQ,EAAYR,IAC9BG,EAAO4U,KAAK/U,EAAI,IAAMyQ,EAAW7R,EAAMw8B,aAAap7B,GAAInB,EAAAo6B,oBAAoBj5B,EAAI,I,CAIpF5H,KAAKmhC,eAAe/5B,QACpBpH,KAAKohC,mBAAmBh6B,QACxBpH,KAAKyhC,uBACLzhC,KAAKqhC,gBAAgB5sB,KAAKzU,KAAK0c,OACjC,CAEOW,YAAAA,CAAa7W,GAClBxG,KAAKijC,cAAcz8B,GACnBxG,KAAKqhC,gBAAgB5sB,KAAKzU,KAAK0c,OACjC,CAEQumB,aAAAA,CAAcz8B,GAEpB,QAAI,IAAAA,EAMJ,OAAQA,GACN,KAAK,IACHxG,KAAKkhC,QAAQt7B,WAAa5F,KAAKkjC,eAAet9B,WAC9C,MACF,KAAK,IACH5F,KAAKkhC,QAAQr7B,WAAa7F,KAAKkjC,eAAer9B,WAC9C,MACF,KAAK,IACH7F,KAAKkhC,QAAQp7B,OAAS9F,KAAKkjC,eAAep9B,OAC1C,MACF,QACE9F,KAAKkhC,QAAQvkB,KAAKnW,GAAQxG,KAAKkjC,eAAevmB,KAAKnW,QAhBrD,IAAK,IAAIA,EAAI,EAAGA,EAAIxG,KAAKkjC,eAAevmB,KAAKzS,SAAU1D,EACrDxG,KAAKkhC,QAAQvkB,KAAKnW,GAAKxG,KAAKkjC,eAAevmB,KAAKnW,EAiBtD,CAEO0W,YAAAA,CAAa1W,GAClBA,EAASxG,KAAKkhC,SAEdlhC,KAAKqhC,gBAAgB5sB,KAAKzU,KAAK0c,OACjC,CAEQ+kB,oBAAAA,GACNzhC,KAAKkjC,eAAiB,CACpBt9B,WAAY5F,KAAKkhC,QAAQt7B,WACzBC,WAAY7F,KAAKkhC,QAAQr7B,WACzBC,OAAQ9F,KAAKkhC,QAAQp7B,OACrB6W,KAAM3c,KAAKkhC,QAAQvkB,KAAK0jB,QAE5B,GAGF,SAAShoB,EACP7R,EACAC,GAEA,QAAI,IAAAD,EACF,IACE,OAAOyB,EAAAR,IAAI2V,QAAQ5W,E,CACnB,MAAAA,GAAA,CAIJ,OAAOC,CACT,C,eA7Ja2R,EAAYhQ,EAAA,CAcpBR,EAAA,EAAAgB,EAAA4N,kBAdQ4B,E,wFCzEb,MAAAhQ,EAAAL,EAAA,MACAH,EAAAG,EAAA,KAgBA,MAAaQ,UAAwBX,EAAAoB,WAYnCtH,WAAAA,CACU8E,GAERyC,QAFQ,KAAAk6B,WAAA38B,EARM,KAAA48B,gBAAkBpjC,KAAKsK,SAAS,IAAIlC,EAAA2I,cACpC,KAAAsyB,SAAWrjC,KAAKojC,gBAAgBnyB,MAChC,KAAAqyB,gBAAkBtjC,KAAKsK,SAAS,IAAIlC,EAAA2I,cACpC,KAAAwyB,SAAWvjC,KAAKsjC,gBAAgBryB,MAChC,KAAAuyB,cAAgBxjC,KAAKsK,SAAS,IAAIlC,EAAA2I,cAClC,KAAAktB,OAASj+B,KAAKwjC,cAAcvyB,MAM1CjR,KAAKyjC,OAAS,IAAIC,MAAS1jC,KAAKmjC,YAChCnjC,KAAK2jC,YAAc,EACnB3jC,KAAK4jC,QAAU,CACjB,CAEA,aAAAC,GACE,OAAO7jC,KAAKmjC,UACd,CAEA,aAAAU,CAAqBr9B,GAEnB,GAAIxG,KAAKmjC,aAAe38B,EACtB,OAKF,MAAMC,EAAW,IAAIi9B,MAAqBl9B,GAC1C,IAAK,IAAIuB,EAAI,EAAGA,EAAIM,KAAKgP,IAAI7Q,EAAcxG,KAAKkK,QAASnC,IACvDtB,EAASsB,GAAK/H,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgB/7B,IAEjD/H,KAAKyjC,OAASh9B,EACdzG,KAAKmjC,WAAa38B,EAClBxG,KAAK2jC,YAAc,CACrB,CAEA,UAAAz5B,GACE,OAAOlK,KAAK4jC,OACd,CAEA,UAAA15B,CAAkB1D,GAChB,GAAIA,EAAYxG,KAAK4jC,QACnB,IAAK,IAAIn9B,EAAIzG,KAAK4jC,QAASn9B,EAAID,EAAWC,IACxCzG,KAAKyjC,OAAOh9B,QAAA,EAGhBzG,KAAK4jC,QAAUp9B,CACjB,CAUO0J,GAAAA,CAAI1J,GACT,OAAOxG,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgBt9B,GAC1C,CAUOwJ,GAAAA,CAAIxJ,EAAeC,GACxBzG,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgBt9B,IAAUC,CAC7C,CAOOgG,IAAAA,CAAKjG,GACVxG,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgB9jC,KAAK4jC,UAAYp9B,EAC9CxG,KAAK4jC,UAAY5jC,KAAKmjC,YACxBnjC,KAAK2jC,cAAgB3jC,KAAK2jC,YAAc3jC,KAAKmjC,WAC7CnjC,KAAKwjC,cAAc/uB,KAAK,IAExBzU,KAAK4jC,SAET,CAOOG,OAAAA,GACL,GAAI/jC,KAAK4jC,UAAY5jC,KAAKmjC,WACxB,MAAM,IAAIz4B,MAAM,4CAIlB,OAFA1K,KAAK2jC,cAAgB3jC,KAAK2jC,YAAc3jC,KAAKmjC,WAC7CnjC,KAAKwjC,cAAc/uB,KAAK,GACjBzU,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgB9jC,KAAK4jC,QAAU,GACzD,CAKA,UAAAI,GACE,OAAOhkC,KAAK4jC,UAAY5jC,KAAKmjC,UAC/B,CAMO/1B,GAAAA,GACL,OAAOpN,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgB9jC,KAAK4jC,UAAY,GAC3D,CAWOnyB,MAAAA,CAAOjL,EAAeC,KAAwBsB,GAEnD,GAAItB,EAAa,CACf,IAAK,IAAIsB,EAAIvB,EAAOuB,EAAI/H,KAAK4jC,QAAUn9B,EAAasB,IAClD/H,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgB/7B,IAAM/H,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgB/7B,EAAItB,IAE9EzG,KAAK4jC,SAAWn9B,EAChBzG,KAAKojC,gBAAgB3uB,KAAK,CAAE8H,MAAO/V,EAAOmb,OAAQlb,G,CAIpD,IAAK,IAAIA,EAAIzG,KAAK4jC,QAAU,EAAGn9B,GAAKD,EAAOC,IACzCzG,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgBr9B,EAAIsB,EAAMmC,SAAWlK,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgBr9B,IAEzF,IAAK,IAAIA,EAAI,EAAGA,EAAIsB,EAAMmC,OAAQzD,IAChCzG,KAAKyjC,OAAOzjC,KAAK8jC,gBAAgBt9B,EAAQC,IAAMsB,EAAMtB,GAOvD,GALIsB,EAAMmC,QACRlK,KAAKsjC,gBAAgB7uB,KAAK,CAAE8H,MAAO/V,EAAOmb,OAAQ5Z,EAAMmC,SAItDlK,KAAK4jC,QAAU77B,EAAMmC,OAASlK,KAAKmjC,WAAY,CACjD,MAAM38B,EAAexG,KAAK4jC,QAAU77B,EAAMmC,OAAUlK,KAAKmjC,WACzDnjC,KAAK2jC,aAAen9B,EACpBxG,KAAK4jC,QAAU5jC,KAAKmjC,WACpBnjC,KAAKwjC,cAAc/uB,KAAKjO,E,MAExBxG,KAAK4jC,SAAW77B,EAAMmC,MAE1B,CAMO+5B,SAAAA,CAAUz9B,GACXA,EAAQxG,KAAK4jC,UACfp9B,EAAQxG,KAAK4jC,SAEf5jC,KAAK2jC,aAAen9B,EACpBxG,KAAK4jC,SAAWp9B,EAChBxG,KAAKwjC,cAAc/uB,KAAKjO,EAC1B,CAEO09B,aAAAA,CAAc19B,EAAeC,EAAesB,GACjD,KAAItB,GAAS,GAAb,CAGA,GAAID,EAAQ,GAAKA,GAASxG,KAAK4jC,QAC7B,MAAM,IAAIl5B,MAAM,+BAElB,GAAIlE,EAAQuB,EAAS,EACnB,MAAM,IAAI2C,MAAM,gDAGlB,GAAI3C,EAAS,EAAG,CACd,IAAK,IAAIK,EAAI3B,EAAQ,EAAG2B,GAAK,EAAGA,IAC9BpI,KAAKgQ,IAAIxJ,EAAQ4B,EAAIL,EAAQ/H,KAAKkQ,IAAI1J,EAAQ4B,IAEhD,MAAMA,EAAgB5B,EAAQC,EAAQsB,EAAU/H,KAAK4jC,QACrD,GAAIx7B,EAAe,EAEjB,IADApI,KAAK4jC,SAAWx7B,EACTpI,KAAK4jC,QAAU5jC,KAAKmjC,YACzBnjC,KAAK4jC,UACL5jC,KAAK2jC,cACL3jC,KAAKwjC,cAAc/uB,KAAK,E,MAI5B,IAAK,IAAIrM,EAAI,EAAGA,EAAI3B,EAAO2B,IACzBpI,KAAKgQ,IAAIxJ,EAAQ4B,EAAIL,EAAQ/H,KAAKkQ,IAAI1J,EAAQ4B,G,CAGpD,CAQQ07B,eAAAA,CAAgBt9B,GACtB,OAAQxG,KAAK2jC,YAAcn9B,GAASxG,KAAKmjC,UAC3C,EAxNF18B,EAAA09B,aAAA57B,CAAAA,E,6ECfA9B,EAAA29B,MAAA,SAAgB59B,EAASC,EAAQsB,EAAgB,GAC/C,GAAmB,iBAARtB,EACT,OAAOA,EAIT,MAAM2B,EAAoBs7B,MAAMW,QAAQ59B,GAAO,GAAK,CAAC,EAErD,IAAK,MAAMmB,KAAOnB,EAEhB2B,EAAaR,GAAOG,GAAS,EAAItB,EAAImB,GAAQnB,EAAImB,IAAQpB,EAAMC,EAAImB,GAAMG,EAAQ,GAGnF,OAAOK,CACT,CAAC,E,wJCjBD,MAAAA,EAAAL,EAAA,MAGA,IAAIH,EAAK,EACLW,EAAK,EACLN,EAAK,EACLQ,EAAK,EAUT,IAAiBE,EAmBAC,EAuEAJ,EAkGAK,EAoCAC,EA8FjB,SAAgBoP,EAAY1R,GAC1B,MAAMC,EAAID,EAAE3D,SAAS,IACrB,OAAO4D,EAAEyD,OAAS,EAAI,IAAMzD,EAAIA,CAClC,CAQA,SAAgB0R,EAAc3R,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,IAC7B,CAtVaA,EAAAo7B,WAAqB,CAChCp6B,IAAK,YACL0V,KAAM,GAMR,SAAiB3W,GACCA,EAAAw6B,MAAhB,SAAsBx6B,EAAWC,EAAWsB,EAAWK,GACrD,gBAAIA,EACK,IAAI8P,EAAY1R,KAAK0R,EAAYzR,KAAKyR,EAAYnQ,KAAKmQ,EAAY9P,KAErE,IAAI8P,EAAY1R,KAAK0R,EAAYzR,KAAKyR,EAAYnQ,IAC3D,EAEgBvB,EAAAy6B,OAAhB,SAAuBz6B,EAAWC,EAAWsB,EAAWK,EAAY,KAIlE,OAAQ5B,GAAK,GAAKC,GAAK,GAAKsB,GAAK,EAAIK,KAAO,CAC9C,CACD,CAdD,CAAiBO,IAAQlC,EAAAs6B,SAARp4B,EAAQ,KAmBzB,SAAiBnC,GAgDf,SAAgBC,EAAQD,EAAeC,GAGrC,OAFAgC,EAAKJ,KAAKwiB,MAAgB,IAAVpkB,IACfmB,EAAIW,EAAIN,GAAMa,EAAKw7B,WAAW99B,EAAM2W,MAC9B,CACL1V,IAAKkB,EAASq4B,MAAMp5B,EAAIW,EAAIN,EAAIQ,GAChC0U,KAAMxU,EAASs4B,OAAOr5B,EAAIW,EAAIN,EAAIQ,GAEtC,CAtDgBjC,EAAA+6B,MAAhB,SAAsB/6B,EAAYC,GAEhC,GADAgC,GAAgB,IAAVhC,EAAG0W,MAAe,IACb,IAAP1U,EACF,MAAO,CACLhB,IAAKhB,EAAGgB,IACR0V,KAAM1W,EAAG0W,MAGb,MAAMpV,EAAOtB,EAAG0W,MAAQ,GAAM,IACxB/U,EAAO3B,EAAG0W,MAAQ,GAAM,IACxBvU,EAAOnC,EAAG0W,MAAQ,EAAK,IACvB3U,EAAOhC,EAAG2W,MAAQ,GAAM,IACxBtU,EAAOrC,EAAG2W,MAAQ,GAAM,IACxBrU,EAAOtC,EAAG2W,MAAQ,EAAK,IAM7B,OALAvV,EAAKY,EAAMH,KAAKwiB,OAAO9iB,EAAMS,GAAOC,GACpCF,EAAKM,EAAMR,KAAKwiB,OAAOziB,EAAMS,GAAOJ,GACpCR,EAAKa,EAAMT,KAAKwiB,OAAOjiB,EAAME,GAAOL,GAG7B,CAAEhB,IAFGkB,EAASq4B,MAAMp5B,EAAIW,EAAIN,GAErBkV,KADDxU,EAASs4B,OAAOr5B,EAAIW,EAAIN,GAEvC,EAEgBzB,EAAAs7B,SAAhB,SAAyBt7B,GACvB,OAA+B,MAAV,IAAbA,EAAM2W,KAChB,EAEgB3W,EAAAwxB,oBAAhB,SAAoCxxB,EAAYC,EAAYsB,GAC1D,MAAMK,EAASU,EAAKkvB,oBAAoBxxB,EAAG2W,KAAM1W,EAAG0W,KAAMpV,GAC1D,GAAKK,EAGL,OAAOU,EAAKsU,QACThV,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,IAEpB,EAEgB5B,EAAAgtB,OAAhB,SAAuBhtB,GACrB,MAAMC,GAA0B,IAAbD,EAAM2W,QAAiB,EAE1C,OADCvV,EAAIW,EAAIN,GAAMa,EAAKw7B,WAAW79B,GACxB,CACLgB,IAAKkB,EAASq4B,MAAMp5B,EAAIW,EAAIN,GAC5BkV,KAAM1W,EAEV,EAEgBD,EAAAu7B,QAAOt7B,EASPD,EAAA0sB,gBAAhB,SAAgC1sB,EAAeuB,GAE7C,OADAU,EAAkB,IAAbjC,EAAM2W,KACJ1W,EAAQD,EAAQiC,EAAKV,EAAU,IACxC,EAEgBvB,EAAAiW,WAAhB,SAA2BjW,GACzB,MAAO,CAAEA,EAAM2W,MAAQ,GAAM,IAAO3W,EAAM2W,MAAQ,GAAM,IAAO3W,EAAM2W,MAAQ,EAAK,IACpF,CACD,CAjED,CAAiBvU,IAAKnC,EAAA+V,MAAL5T,EAAK,KAuEtB,SAAiBpC,GACf,IAAIC,EACAsB,EACJ,IAAKK,EAAAm8B,OAAQ,CACX,MAAM/9B,EAASJ,SAASkD,cAAc,UACtC9C,EAAOmB,MAAQ,EACfnB,EAAOrF,OAAS,EAChB,MAAMiH,EAAM5B,EAAOipB,WAAW,KAAM,CAClC+U,oBAAA,IAEEp8B,IACF3B,EAAO2B,EACP3B,EAAKg+B,yBAA2B,OAChC18B,EAAetB,EAAKi+B,qBAAqB,EAAG,EAAG,EAAG,G,CAWtCl+B,EAAA4W,QAAhB,SAAwB5W,GAEtB,GAAIA,EAAIm+B,MAAM,kBACZ,OAAQn+B,EAAI0D,QACV,KAAK,EAIH,OAHAtC,EAAKM,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IACzC1wB,EAAKL,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IACzChxB,EAAKC,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IAClCnwB,EAAKsU,QAAQxV,EAAIW,EAAIN,GAE9B,KAAK,EAKH,OAJAL,EAAKM,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IACzC1wB,EAAKL,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IACzChxB,EAAKC,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IACzCxwB,EAAKP,SAAS1B,EAAI65B,MAAM,EAAG,GAAGpH,OAAO,GAAI,IAClCnwB,EAAKsU,QAAQxV,EAAIW,EAAIN,EAAIQ,GAElC,KAAK,EACH,MAAO,CACLhB,IAAAjB,EACA2W,MAAOjV,SAAS1B,EAAI65B,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MAAO,CACL54B,IAAAjB,EACA2W,KAAMjV,SAAS1B,EAAI65B,MAAM,GAAI,MAAQ,GAM7C,MAAMj4B,EAAY5B,EAAIm+B,MAAM,sFAC5B,GAAIv8B,EAKF,OAJAR,EAAKM,SAASE,EAAU,IACxBG,EAAKL,SAASE,EAAU,IACxBH,EAAKC,SAASE,EAAU,IACxBK,EAAKJ,KAAKwiB,MAAoE,cAA7DziB,EAAU,GAAmB,EAAIw8B,WAAWx8B,EAAU,MAChEU,EAAKsU,QAAQxV,EAAIW,EAAIN,EAAIQ,GAIlC,IAAKhC,IAASsB,EACZ,MAAM,IAAI2C,MAAM,uCAOlB,GAFAjE,EAAKgqB,UAAY1oB,EACjBtB,EAAKgqB,UAAYjqB,EACa,iBAAnBC,EAAKgqB,UACd,MAAM,IAAI/lB,MAAM,uCAOlB,GAJAjE,EAAKiqB,SAAS,EAAG,EAAG,EAAG,IACtB9oB,EAAIW,EAAIN,EAAIQ,GAAMhC,EAAKo+B,aAAa,EAAG,EAAG,EAAG,GAAGjiC,KAGtC,MAAP6F,EACF,MAAM,IAAIiC,MAAM,uCAMlB,MAAO,CACLyS,KAAMxU,EAASs4B,OAAOr5B,EAAIW,EAAIN,EAAIQ,GAClChB,IAAAjB,EAEJ,CACD,CA7FD,CAAiBgC,IAAG/B,EAAAgB,IAAHe,EAAG,KAkGpB,SAAiBhC,GAsBf,SAAgBC,EAAmBD,EAAWC,EAAWsB,GACvD,MAAMK,EAAK5B,EAAI,IACToB,EAAKnB,EAAI,IACT8B,EAAKR,EAAI,IAIf,MAAY,OAHDK,GAAM,OAAUA,EAAK,MAAQC,KAAKy8B,KAAK18B,EAAK,MAAS,MAAO,MAG7C,OAFfR,GAAM,OAAUA,EAAK,MAAQS,KAAKy8B,KAAKl9B,EAAK,MAAS,MAAO,MAE/B,OAD7BW,GAAM,OAAUA,EAAK,MAAQF,KAAKy8B,KAAKv8B,EAAK,MAAS,MAAO,KAEzE,CAvBgB/B,EAAAu+B,kBAAhB,SAAkCv+B,GAChC,OAAOC,EACJD,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAdA,EACJ,EAUgBA,EAAAw+B,mBAAkBv+B,CASnC,CA/BD,CAAiBoC,IAAGpC,EAAAw+B,IAAHp8B,EAAG,KAoCpB,SAAiBrC,GAyCf,SAAgBC,EAAgBD,EAAgBC,EAAgBsB,GAG9D,MAAMK,EAAO5B,GAAU,GAAM,IACvBoB,EAAOpB,GAAU,GAAM,IACvB+B,EAAO/B,GAAW,EAAK,IAC7B,IAAIyB,EAAOxB,GAAU,GAAM,IACvBgC,EAAOhC,GAAU,GAAM,IACvBkC,EAAOlC,GAAW,EAAK,IACvBmC,EAAKuP,EAActP,EAAIm8B,mBAAmB/8B,EAAKQ,EAAKE,GAAME,EAAIm8B,mBAAmB58B,EAAKR,EAAKW,IAC/F,KAAOK,EAAKb,IAAUE,EAAM,GAAKQ,EAAM,GAAKE,EAAM,IAEhDV,GAAOI,KAAKC,IAAI,EAAGD,KAAK+nB,KAAW,GAANnoB,IAC7BQ,GAAOJ,KAAKC,IAAI,EAAGD,KAAK+nB,KAAW,GAAN3nB,IAC7BE,GAAON,KAAKC,IAAI,EAAGD,KAAK+nB,KAAW,GAANznB,IAC7BC,EAAKuP,EAActP,EAAIm8B,mBAAmB/8B,EAAKQ,EAAKE,GAAME,EAAIm8B,mBAAmB58B,EAAKR,EAAKW,IAE7F,OAAQN,GAAO,GAAKQ,GAAO,GAAKE,GAAO,EAAI,OAAU,CACvD,CAEA,SAAgBZ,EAAkBvB,EAAgBC,EAAgBsB,GAGhE,MAAMK,EAAO5B,GAAU,GAAM,IACvBoB,EAAOpB,GAAU,GAAM,IACvB+B,EAAO/B,GAAW,EAAK,IAC7B,IAAIyB,EAAOxB,GAAU,GAAM,IACvBgC,EAAOhC,GAAU,GAAM,IACvBkC,EAAOlC,GAAW,EAAK,IACvBmC,EAAKuP,EAActP,EAAIm8B,mBAAmB/8B,EAAKQ,EAAKE,GAAME,EAAIm8B,mBAAmB58B,EAAKR,EAAKW,IAC/F,KAAOK,EAAKb,IAAUE,EAAM,KAAQQ,EAAM,KAAQE,EAAM,MAEtDV,EAAMI,KAAKgP,IAAI,IAAMpP,EAAMI,KAAK+nB,KAAmB,IAAb,IAAMnoB,KAC5CQ,EAAMJ,KAAKgP,IAAI,IAAM5O,EAAMJ,KAAK+nB,KAAmB,IAAb,IAAM3nB,KAC5CE,EAAMN,KAAKgP,IAAI,IAAM1O,EAAMN,KAAK+nB,KAAmB,IAAb,IAAMznB,KAC5CC,EAAKuP,EAActP,EAAIm8B,mBAAmB/8B,EAAKQ,EAAKE,GAAME,EAAIm8B,mBAAmB58B,EAAKR,EAAKW,IAE7F,OAAQN,GAAO,GAAKQ,GAAO,GAAKE,GAAO,EAAI,OAAU,CACvD,CAjEgBnC,EAAAwxB,oBAAhB,SAAoCxxB,EAAgB4B,EAAgBR,GAClE,MAAMW,EAAMM,EAAIk8B,kBAAkBv+B,GAAU,GACtCyB,EAAMY,EAAIk8B,kBAAkB38B,GAAU,GAE5C,GADW+P,EAAc5P,EAAKN,GACrBL,EAAO,CACd,GAAIK,EAAMM,EAAK,CACb,MAAMN,EAAUxB,EAAgBD,EAAQ4B,EAAQR,GAC1Ca,EAAe0P,EAAc5P,EAAKM,EAAIk8B,kBAAkB98B,GAAW,IACzE,GAAIQ,EAAeb,EAAO,CACxB,MAAMnB,EAAUsB,EAAkBvB,EAAQ4B,EAAQR,GAElD,OAAOa,EADc0P,EAAc5P,EAAKM,EAAIk8B,kBAAkBt+B,GAAW,IACpCwB,EAAUxB,C,CAEjD,OAAOwB,C,CAET,MAAMQ,EAAUV,EAAkBvB,EAAQ4B,EAAQR,GAC5Ce,EAAewP,EAAc5P,EAAKM,EAAIk8B,kBAAkBt8B,GAAW,IACzE,GAAIE,EAAef,EAAO,CACxB,MAAMG,EAAUtB,EAAgBD,EAAQ4B,EAAQR,GAEhD,OAAOe,EADcwP,EAAc5P,EAAKM,EAAIk8B,kBAAkBh9B,GAAW,IACpCU,EAAUV,C,CAEjD,OAAOU,C,CAGX,EAEgBjC,EAAA0+B,gBAAez+B,EAoBfD,EAAA2+B,kBAAiBp9B,EAqBjBvB,EAAA89B,WAAhB,SAA2B99B,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EAC3E,EAEgBA,EAAA4W,QAAhB,SAAwB5W,EAAWC,EAAWsB,EAAWK,GACvD,MAAO,CACLX,IAAKkB,EAASq4B,MAAMx6B,EAAGC,EAAGsB,EAAGK,GAC7B+U,KAAMxU,EAASs4B,OAAOz6B,EAAGC,EAAGsB,EAAGK,GAEnC,CACD,CA5FD,CAAiBU,IAAIrC,EAAA0W,KAAJrU,EAAI,KA8FrBrC,EAAA2+B,YAAAltB,EAWAzR,EAAA4+B,cAAAltB,CAAAA,E,sFCvUA,MAAA/P,EAAAL,EAAA,KACAH,EAAAG,EAAA,MACAQ,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,KACAY,EAAAZ,EAAA,MAEAa,EAAAb,EAAA,MACAS,EAAAT,EAAA,MACAc,EAAAd,EAAA,MACAe,EAAAf,EAAA,MACAmQ,EAAAnQ,EAAA,MACAoQ,EAAApQ,EAAA,MAGAqQ,EAAArQ,EAAA,MACAsQ,EAAAtQ,EAAA,MACAuQ,EAAAvQ,EAAA,MAGA,IAAIwQ,GAAA,EAEJ,MAAsBC,UAAqBpQ,EAAAY,WAiCzC,YAAAkC,GAOE,OANKlL,KAAKslC,eACRtlC,KAAKslC,aAAetlC,KAAKsK,SAAS,IAAI9B,EAAAuI,cACtC/Q,KAAKyiB,UAAUxR,OAAMzK,I,MACF,QAAjBC,EAAAzG,KAAKslC,oBAAA,IAAY7+B,GAAAA,EAAEgO,KAAKjO,EAAG0hB,SAAS,KAGjCloB,KAAKslC,aAAar0B,KAC3B,CAEA,QAAAhK,GAA4B,OAAOjH,KAAKwQ,eAAevJ,IAAM,CAC7D,QAAA5B,GAA4B,OAAOrF,KAAKwQ,eAAenL,IAAM,CAC7D,WAAAiY,GAAmC,OAAOtd,KAAKwQ,eAAe8M,OAAS,CACvE,WAAAzb,GAAmD,OAAO7B,KAAK4e,eAAe/c,OAAS,CACvF,WAAAA,CAAmB2E,GACjB,IAAK,MAAMC,KAAOD,EAChBxG,KAAK4e,eAAe/c,QAAQ4E,GAAOD,EAAQC,EAE/C,CAEA/E,WAAAA,CACE8E,GAEAyC,QA1CM,KAAAs8B,2BAA6BvlC,KAAKsK,SAAS,IAAIlC,EAAAiS,mBAEtC,KAAAmrB,UAAYxlC,KAAKsK,SAAS,IAAI9B,EAAAuI,cAC/B,KAAA00B,SAAWzlC,KAAKwlC,UAAUv0B,MACzB,KAAAy0B,QAAU1lC,KAAKsK,SAAS,IAAI9B,EAAAuI,cAC7B,KAAAjO,OAAS9C,KAAK0lC,QAAQz0B,MAC5B,KAAA00B,YAAc3lC,KAAKsK,SAAS,IAAI9B,EAAAuI,cAC1B,KAAA1F,WAAarL,KAAK2lC,YAAY10B,MAC7B,KAAA20B,UAAY5lC,KAAKsK,SAAS,IAAI9B,EAAAuI,cAC/B,KAAAnG,SAAW5K,KAAK4lC,UAAU30B,MACvB,KAAA40B,eAAiB7lC,KAAKsK,SAAS,IAAI9B,EAAAuI,cACtC,KAAA+0B,cAAgB9lC,KAAK6lC,eAAe50B,MAO1C,KAAAwR,UAAYziB,KAAKsK,SAAS,IAAI9B,EAAAuI,cA2BtC/Q,KAAKkb,sBAAwB,IAAI3S,EAAAw9B,qBACjC/lC,KAAK4e,eAAiB5e,KAAKsK,SAAS,IAAI3B,EAAAq9B,eAAex/B,IACvDxG,KAAKkb,sBAAsBI,WAAW1T,EAAA4O,gBAAiBxW,KAAK4e,gBAC5D5e,KAAKwQ,eAAiBxQ,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAe1S,EAAAw9B,gBAC9EjmC,KAAKkb,sBAAsBI,WAAW1T,EAAAqN,eAAgBjV,KAAKwQ,gBAC3DxQ,KAAK2f,YAAc3f,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAelT,EAAAi+B,aAC3ElmC,KAAKkb,sBAAsBI,WAAW1T,EAAAu+B,YAAanmC,KAAK2f,aACxD3f,KAAK4c,YAAc5c,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAevS,EAAAw9B,cAC3EpmC,KAAKkb,sBAAsBI,WAAW1T,EAAA0pB,aAActxB,KAAK4c,aACzD5c,KAAK4iB,iBAAmB5iB,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAetS,EAAAw9B,mBAChFrmC,KAAKkb,sBAAsBI,WAAW1T,EAAA0+B,kBAAmBtmC,KAAK4iB,kBAC9D5iB,KAAKumC,eAAiBvmC,KAAKsK,SAAStK,KAAKkb,sBAAsBC,eAAerS,EAAA09B,iBAC9ExmC,KAAKkb,sBAAsBI,WAAW1T,EAAA6+B,gBAAiBzmC,KAAKumC,gBAC5DvmC,KAAK0mC,gBAAkB1mC,KAAKkb,sBAAsBC,eAAejD,EAAAyuB,gBACjE3mC,KAAKkb,sBAAsBI,WAAW1T,EAAAg/B,gBAAiB5mC,KAAK0mC,iBAC5D1mC,KAAKqV,gBAAkBrV,KAAKkb,sBAAsBC,eAAe7C,EAAAuuB,gBACjE7mC,KAAKkb,sBAAsBI,WAAW1T,EAAA6O,gBAAiBzW,KAAKqV,iBAG5DrV,KAAKwb,cAAgBxb,KAAKsK,SAAS,IAAI8N,EAAA0uB,aAAa9mC,KAAKwQ,eAAgBxQ,KAAK0mC,gBAAiB1mC,KAAK4c,YAAa5c,KAAK2f,YAAa3f,KAAK4e,eAAgB5e,KAAKqV,gBAAiBrV,KAAK4iB,iBAAkB5iB,KAAKumC,iBAC1MvmC,KAAKsK,UAAA,EAAS9B,EAAA2T,cAAanc,KAAKwb,cAAcnQ,WAAYrL,KAAK2lC,cAC/D3lC,KAAKsK,SAAStK,KAAKwb,eAGnBxb,KAAKsK,UAAA,EAAS9B,EAAA2T,cAAanc,KAAKwQ,eAAe5F,SAAU5K,KAAK4lC,YAC9D5lC,KAAKsK,UAAA,EAAS9B,EAAA2T,cAAanc,KAAK4c,YAAY9Z,OAAQ9C,KAAK0lC,UACzD1lC,KAAKsK,UAAA,EAAS9B,EAAA2T,cAAanc,KAAK4c,YAAY6oB,SAAUzlC,KAAKwlC,YAC3DxlC,KAAKsK,SAAStK,KAAK4c,YAAYmqB,yBAAwB,IAAM/mC,KAAK6mB,oBAClE7mB,KAAKsK,SAAStK,KAAK4c,YAAYmhB,aAAY,IAAO/9B,KAAKgnC,aAAaC,qBACpEjnC,KAAKsK,SAAStK,KAAK4e,eAAesb,uBAAuB,CAAC,cAAe,eAAe,IAAMl6B,KAAKknC,mCACnGlnC,KAAKsK,SAAStK,KAAKwQ,eAAetF,UAAS1E,IACzCxG,KAAKyiB,UAAUhO,KAAK,CAAEyT,SAAUloB,KAAKwQ,eAAe7D,OAAOG,MAAOqb,OAAQ,IAC1EnoB,KAAKwb,cAAc2rB,eAAennC,KAAKwQ,eAAe7D,OAAOme,UAAW9qB,KAAKwQ,eAAe7D,OAAOy6B,aAAa,KAElHpnC,KAAKsK,SAAStK,KAAKwb,cAActQ,UAAS1E,IACxCxG,KAAKyiB,UAAUhO,KAAK,CAAEyT,SAAUloB,KAAKwQ,eAAe7D,OAAOG,MAAOqb,OAAQ,IAC1EnoB,KAAKwb,cAAc2rB,eAAennC,KAAKwQ,eAAe7D,OAAOme,UAAW9qB,KAAKwQ,eAAe7D,OAAOy6B,aAAa,KAIlHpnC,KAAKgnC,aAAehnC,KAAKsK,SAAS,IAAI+N,EAAAgvB,aAAY,CAAC7gC,EAAMC,IAAkBzG,KAAKwb,cAAc8rB,MAAM9gC,EAAMC,MAC1GzG,KAAKsK,UAAA,EAAS9B,EAAA2T,cAAanc,KAAKgnC,aAAalB,cAAe9lC,KAAK6lC,gBACnE,CAEOv/B,KAAAA,CAAME,EAA2BC,GACtCzG,KAAKgnC,aAAa1gC,MAAME,EAAMC,EAChC,CAWO8gC,SAAAA,CAAU/gC,EAA2BC,GACtCzG,KAAK2f,YAAYiF,UAAYhd,EAAA4/B,aAAaC,OAASlvB,IACrDvY,KAAK2f,YAAYpJ,KAAK,qDACtBgC,GAAA,GAEFvY,KAAKgnC,aAAaO,UAAU/gC,EAAMC,EACpC,CAEOY,MAAAA,CAAOb,EAAWC,GACnBO,MAAMR,IAAMQ,MAAMP,KAItBD,EAAI6B,KAAKC,IAAI9B,EAAGiC,EAAAi/B,cAChBjhC,EAAI4B,KAAKC,IAAI7B,EAAGgC,EAAAk/B,cAEhB3nC,KAAKwQ,eAAenJ,OAAOb,EAAGC,GAChC,CAOOmhC,MAAAA,CAAOphC,EAA2BC,GAAA,GACvCzG,KAAKwQ,eAAeo3B,OAAOphC,EAAWC,EACxC,CAUO+G,WAAAA,CAAYhH,EAAcC,EAA+BsB,GAC9D/H,KAAKwQ,eAAehD,YAAYhH,EAAMC,EAAqBsB,EAC7D,CAEO8/B,WAAAA,CAAYrhC,GACjBxG,KAAKwN,YAAYhH,GAAaxG,KAAKqF,KAAO,GAC5C,CAEOyiC,WAAAA,GACL9nC,KAAKwN,aAAaxN,KAAKwQ,eAAe7D,OAAOG,MAC/C,CAEO+Z,cAAAA,GACL7mB,KAAKwN,YAAYxN,KAAKwQ,eAAe7D,OAAO0R,MAAQre,KAAKwQ,eAAe7D,OAAOG,MACjF,CAEOi7B,YAAAA,CAAavhC,GAClB,MAAMC,EAAeD,EAAOxG,KAAKwQ,eAAe7D,OAAOG,MAClC,IAAjBrG,GACFzG,KAAKwN,YAAY/G,EAErB,CAGOuhC,kBAAAA,CAAmBxhC,EAAyBC,GACjD,OAAOzG,KAAKwb,cAAcwsB,mBAAmBxhC,EAAIC,EACnD,CAGOwhC,kBAAAA,CAAmBzhC,EAAyBC,GACjD,OAAOzG,KAAKwb,cAAcysB,mBAAmBzhC,EAAIC,EACnD,CAGOyhC,kBAAAA,CAAmB1hC,EAAyBC,GACjD,OAAOzG,KAAKwb,cAAc0sB,mBAAmB1hC,EAAIC,EACnD,CAGO0hC,kBAAAA,CAAmB3hC,EAAeC,GACvC,OAAOzG,KAAKwb,cAAc2sB,mBAAmB3hC,EAAOC,EACtD,CAEUuU,MAAAA,GACRhb,KAAKknC,+BACP,CAEOprB,KAAAA,GACL9b,KAAKwb,cAAcM,QACnB9b,KAAKwQ,eAAesL,QACpB9b,KAAK0mC,gBAAgB5qB,QACrB9b,KAAK4c,YAAYd,QACjB9b,KAAK4iB,iBAAiB9G,OACxB,CAGQorB,6BAAAA,GACN,IAAI1gC,GAAA,EACJ,MAAMC,EAAazG,KAAK4e,eAAexQ,WAAWg6B,WAC9C3hC,QAAA,IAAcA,EAAW4hC,kBAAA,IAA6B5hC,EAAW4hC,YACnE7hC,KAAkC,WAAvBC,EAAW6hC,SAAwB7hC,EAAW4hC,YAAc,OAC9DroC,KAAK4e,eAAexQ,WAAWm6B,cACxC/hC,GAAA,GAEEA,EACFxG,KAAKwoC,mCAELxoC,KAAKulC,2BAA2Bn+B,OAEpC,CAEUohC,gCAAAA,GACR,IAAKxoC,KAAKulC,2BAA2BhlC,MAAO,CAC1C,MAAMiG,EAA6B,GACnCA,EAAYiG,KAAKzM,KAAKqL,WAAW8M,EAAAswB,8BAA8Bh+B,KAAK,KAAMzK,KAAKwQ,kBAC/EhK,EAAYiG,KAAKzM,KAAKkoC,mBAAmB,CAAEQ,MAAO,MAAO,QACvDvwB,EAAAswB,+BAA8BzoC,KAAKwQ,iBAAA,MAGrCxQ,KAAKulC,2BAA2BhlC,OAAA,EAAQ6H,EAAA6D,eAAa,KACnD,IAAK,MAAMxF,KAAKD,EACdC,EAAEvD,SAAA,G,CAIV,EA7OFuD,EAAA8S,aAAAf,CAAAA,E,mGCxBA/R,EAAAsK,aAAA,MAAArP,WAAAA,GACU,KAAAinC,WAAgC,GAEhC,KAAAC,WAAA,CA4CV,CA1CE,SAAA33B,GAmBE,OAlBKjR,KAAK6oC,SACR7oC,KAAK6oC,OAAUriC,IACbxG,KAAK2oC,WAAWl8B,KAAKjG,GACF,CACjBtD,QAASA,KACP,IAAKlD,KAAK4oC,UACR,IAAK,IAAIniC,EAAI,EAAGA,EAAIzG,KAAK2oC,WAAWz+B,OAAQzD,IAC1C,GAAIzG,KAAK2oC,WAAWliC,KAAOD,EAEzB,YADAxG,KAAK2oC,WAAWl3B,OAAOhL,EAAG,EAAE,KAUnCzG,KAAK6oC,MACd,CAEOp0B,IAAAA,CAAKjO,EAASC,GACnB,MAAMsB,EAA2B,GACjC,IAAK,IAAIvB,EAAI,EAAGA,EAAIxG,KAAK2oC,WAAWz+B,OAAQ1D,IAC1CuB,EAAM0E,KAAKzM,KAAK2oC,WAAWniC,IAE7B,IAAK,IAAI4B,EAAI,EAAGA,EAAIL,EAAMmC,OAAQ9B,IAChCL,EAAMK,GAAG+N,UAAA,EAAgB3P,EAAMC,EAEnC,CAEOvD,OAAAA,GACLlD,KAAK8oC,iBACL9oC,KAAK4oC,WAAA,CACP,CAEOE,cAAAA,GACD9oC,KAAK2oC,aACP3oC,KAAK2oC,WAAWz+B,OAAS,EAE7B,GAGFzD,EAAA0V,aAAA,SAAgC3V,EAAiBC,GAC/C,OAAOD,GAAKA,GAAKC,EAAGgO,KAAKjO,IAC3B,CAAC,E,4hBCjED,MAAA+B,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,KACAa,EAAAb,EAAA,KACAS,EAAAT,EAAA,MACAc,EAAAd,EAAA,MAEAe,EAAAf,EAAA,KACAmQ,EAAAnQ,EAAA,KACAoQ,EAAApQ,EAAA,MACAqQ,EAAArQ,EAAA,MACAsQ,EAAAtQ,EAAA,MACAuQ,EAAAvQ,EAAA,MAEAwQ,EAAAxQ,EAAA,MAKMyQ,EAAoC,CAAE,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAgCnFC,EAAyB,OAQ/B,SAASC,EAAoBlS,EAAWC,GACtC,GAAID,EAAI,GACN,OAAOC,EAAKsiC,cAAA,EAEd,OAAQviC,GACN,KAAK,EAAG,QAASC,EAAKuiC,WACtB,KAAK,EAAG,QAASviC,EAAKwiC,YACtB,KAAK,EAAG,QAASxiC,EAAKyiC,eACtB,KAAK,EAAG,QAASziC,EAAK0iC,iBACtB,KAAK,EAAG,QAAS1iC,EAAK2iC,SACtB,KAAK,EAAG,QAAS3iC,EAAK4iC,SACtB,KAAK,EAAG,QAAS5iC,EAAK6iC,WACtB,KAAK,EAAG,QAAS7iC,EAAK8iC,gBACtB,KAAK,EAAG,QAAS9iC,EAAK+iC,YACtB,KAAK,GAAI,QAAS/iC,EAAKgjC,cACvB,KAAK,GAAI,QAAShjC,EAAKijC,YACvB,KAAK,GAAI,QAASjjC,EAAKkjC,eACvB,KAAK,GAAI,QAASljC,EAAKmjC,iBACvB,KAAK,GAAI,QAASnjC,EAAKojC,oBACvB,KAAK,GAAI,QAASpjC,EAAKqjC,kBACvB,KAAK,GAAI,QAASrjC,EAAKsjC,gBACvB,KAAK,GAAI,QAAStjC,EAAKujC,mBACvB,KAAK,GAAI,QAASvjC,EAAKwjC,aACvB,KAAK,GAAI,QAASxjC,EAAKyjC,YACvB,KAAK,GAAI,QAASzjC,EAAK0jC,UACvB,KAAK,GAAI,QAAS1jC,EAAK2jC,SACvB,KAAK,GAAI,QAAS3jC,EAAKsiC,YAEzB,OAAO,CACT,CAEA,IAAY12B,GAAZ,SAAY7L,GACVA,EAAAA,EAAA8hB,oBAAA,yBACA9hB,EAAAA,EAAAgiB,qBAAA,yBACD,CAHD,CAAYnW,IAAwB5L,EAAA4hB,yBAAxBhW,EAAwB,KASpC,IAAIsG,EAAQ,EASZ,MAAaC,UAAqBjQ,EAAAK,WAYzBqhC,WAAAA,GAAgC,OAAOrqC,KAAKsqC,YAAc,CAyCjE5oC,WAAAA,CACmB8E,EACAC,EACAsB,EACAK,EACAR,EACAe,EACAG,EACAqP,EACAC,EAAiC,IAAI3P,EAAA8hC,sBAEtDthC,QAViB,KAAAuH,eAAAhK,EACA,KAAAkgC,gBAAAjgC,EACA,KAAAoqB,aAAA9oB,EACA,KAAA4X,YAAAvX,EACA,KAAAgN,gBAAAxN,EACA,KAAAyN,gBAAA1M,EACA,KAAA6hC,kBAAA1hC,EACA,KAAA2hC,gBAAAtyB,EACA,KAAAuyB,QAAAtyB,EA7DX,KAAAuyB,aAA4B,IAAIC,YAAY,MAC5C,KAAAC,eAAgC,IAAIjiC,EAAAkiC,cACpC,KAAAC,aAA4B,IAAIniC,EAAAoiC,YAChC,KAAA7W,UAAsB,IAAIjc,EAAA3C,SAC1B,KAAA01B,aAAe,GACf,KAAAC,UAAY,GAEV,KAAAC,kBAA8B,GAC9B,KAAAC,eAA2B,GAE7B,KAAAd,aAA+B9hC,EAAAyf,kBAAkBmc,QAEjD,KAAAiH,uBAAyC7iC,EAAAyf,kBAAkBmc,QAIlD,KAAAkH,eAAiBtrC,KAAKsK,SAAS,IAAIzB,EAAAkI,cACpC,KAAA0K,cAAgBzb,KAAKsrC,eAAer6B,MACnC,KAAAs6B,sBAAwBvrC,KAAKsK,SAAS,IAAIzB,EAAAkI,cAC3C,KAAA2K,qBAAuB1b,KAAKurC,sBAAsBt6B,MACjD,KAAAu6B,gBAAkBxrC,KAAKsK,SAAS,IAAIzB,EAAAkI,cACrC,KAAA8K,eAAiB7b,KAAKwrC,gBAAgBv6B,MACrC,KAAAw6B,oBAAsBzrC,KAAKsK,SAAS,IAAIzB,EAAAkI,cACzC,KAAA4K,mBAAqB3b,KAAKyrC,oBAAoBx6B,MAC7C,KAAAy6B,wBAA0B1rC,KAAKsK,SAAS,IAAIzB,EAAAkI,cAC7C,KAAA8Q,uBAAyB7hB,KAAK0rC,wBAAwBz6B,MACrD,KAAA06B,+BAAiC3rC,KAAKsK,SAAS,IAAIzB,EAAAkI,cACpD,KAAAgL,8BAAgC/b,KAAK2rC,+BAA+B16B,MAEnE,KAAA26B,YAAc5rC,KAAKsK,SAAS,IAAIzB,EAAAkI,cACjC,KAAA5F,WAAanL,KAAK4rC,YAAY36B,MAC7B,KAAA46B,WAAa7rC,KAAKsK,SAAS,IAAIzB,EAAAkI,cAChC,KAAAzF,UAAYtL,KAAK6rC,WAAW56B,MAC3B,KAAAqJ,cAAgBta,KAAKsK,SAAS,IAAIzB,EAAAkI,cACnC,KAAAwJ,aAAeva,KAAKsa,cAAcrJ,MACjC,KAAA00B,YAAc3lC,KAAKsK,SAAS,IAAIzB,EAAAkI,cACjC,KAAA1F,WAAarL,KAAK2lC,YAAY10B,MAC7B,KAAAwR,UAAYziB,KAAKsK,SAAS,IAAIzB,EAAAkI,cAC/B,KAAA7F,SAAWlL,KAAKyiB,UAAUxR,MACzB,KAAA2J,eAAiB5a,KAAKsK,SAAS,IAAIzB,EAAAkI,cACpC,KAAA8J,cAAgB7a,KAAK4a,eAAe3J,MACnC,KAAA66B,SAAW9rC,KAAKsK,SAAS,IAAIzB,EAAAkI,cAC9B,KAAAkL,QAAUjc,KAAK8rC,SAAS76B,MAEhC,KAAA86B,YAA2B,CACjCC,QAAA,EACAC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfjkB,SAAU,GAgxFJ,KAAAkkB,eAAiB,CAAC,IAAD,SAjwFvBpsC,KAAKsK,SAAStK,KAAK0qC,SACnB1qC,KAAKqsC,iBAAmB,IAAIxzB,EAAgB7Y,KAAKwQ,gBAGjDxQ,KAAKkqB,cAAgBlqB,KAAKwQ,eAAe7D,OACzC3M,KAAKsK,SAAStK,KAAKwQ,eAAe8M,QAAQ6M,kBAAiB3jB,GAAKxG,KAAKkqB,cAAgB1jB,EAAE4jB,gBAKvFpqB,KAAK0qC,QAAQ4B,uBAAsB,CAAC9lC,EAAOC,KACzCzG,KAAK2f,YAAYC,MAAM,qBAAsB,CAAE2sB,WAAYvsC,KAAK0qC,QAAQ8B,cAAchmC,GAAQimC,OAAQhmC,EAAOimC,WAAY,IAE3H1sC,KAAK0qC,QAAQiC,uBAAsBnmC,IACjCxG,KAAK2f,YAAYC,MAAM,qBAAsB,CAAE2sB,WAAYvsC,KAAK0qC,QAAQ8B,cAAchmC,IAAS,IAEjGxG,KAAK0qC,QAAQkC,2BAA0BpmC,IACrCxG,KAAK2f,YAAYC,MAAM,yBAA0B,CAAEitB,KAAArmC,GAAO,IAE5DxG,KAAK0qC,QAAQoC,uBAAsB,CAACtmC,EAAYC,EAAQsB,KACtD/H,KAAK2f,YAAYC,MAAM,qBAAsB,CAAE2sB,WAAA/lC,EAAYwd,OAAAvd,EAAQ7D,KAAAmF,GAAO,IAE5E/H,KAAK0qC,QAAQqC,uBAAsB,CAACvmC,EAAOC,EAAQsB,KAClC,SAAXtB,IACFsB,EAAUA,EAAQ2kC,WAEpB1sC,KAAK2f,YAAYC,MAAM,qBAAsB,CAAE2sB,WAAYvsC,KAAK0qC,QAAQ8B,cAAchmC,GAAQwd,OAAAvd,EAAQumC,QAAAjlC,GAAU,IAMlH/H,KAAK0qC,QAAQuC,iBAAgB,CAACzmC,EAAMC,EAAOsB,IAAQ/H,KAAKktC,MAAM1mC,EAAMC,EAAOsB,KAK3E/H,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKmtC,YAAY3mC,KAC3ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAKqtC,WAAW7mC,KAC9FxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKstC,SAAS9mC,KACxExG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAKutC,YAAY/mC,KAC/FxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKwtC,WAAWhnC,KAC1ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKytC,cAAcjnC,KAC7ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK0tC,eAAelnC,KAC9ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK2tC,eAAennC,KAC9ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK4tC,oBAAoBpnC,KACnFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK6tC,mBAAmBrnC,KAClFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK8tC,eAAetnC,KAC9ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK+tC,iBAAiBvnC,KAChFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKguC,eAAexnC,GAAA,KAC9ExG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKvF,MAAO,MAAOliC,GAAUxG,KAAKguC,eAAexnC,GAAA,KAC3FxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKkuC,YAAY1nC,GAAA,KAC3ExG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKvF,MAAO,MAAOliC,GAAUxG,KAAKkuC,YAAY1nC,GAAA,KACxFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKmuC,YAAY3nC,KAC3ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKouC,YAAY5nC,KAC3ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKquC,YAAY7nC,KAC3ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKsuC,SAAS9nC,KACxExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKuuC,WAAW/nC,KAC1ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKwuC,WAAWhoC,KAC1ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKyuC,kBAAkBjoC,KACjFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK0uC,gBAAgBloC,KAC/ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK2uC,kBAAkBnoC,KACjFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK4uC,yBAAyBpoC,KACxFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK6uC,4BAA4BroC,KAC3FxG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKvF,MAAO,MAAOliC,GAAUxG,KAAK8uC,8BAA8BtoC,KAC1GxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK+uC,gBAAgBvoC,KAC/ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKgvC,kBAAkBxoC,KACjFxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKivC,WAAWzoC,KAC1ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKkvC,SAAS1oC,KACxExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKmvC,QAAQ3oC,KACvExG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKvF,MAAO,MAAOliC,GAAUxG,KAAKovC,eAAe5oC,KAC3FxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKqvC,UAAU7oC,KACzExG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKvF,MAAO,MAAOliC,GAAUxG,KAAKsvC,iBAAiB9oC,KAC7FxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKuvC,eAAe/oC,KAC9ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAKwvC,aAAahpC,KAC5ExG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKvF,MAAO,MAAOliC,GAAUxG,KAAKyvC,oBAAoBjpC,KAChGxG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAK0vC,UAAUlpC,KAC7FxG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAK2vC,eAAenpC,KAClGxG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK4vC,gBAAgBppC,KAC/ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK6vC,WAAWrpC,KAC1ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK8vC,cAActpC,KAC7ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEQ,MAAO,MAAOliC,GAAUxG,KAAK+vC,cAAcvpC,KAC7ExG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAM1E,MAAO,MAAOliC,GAAUxG,KAAKgwC,cAAcxpC,KAClGxG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAM1E,MAAO,MAAOliC,GAAUxG,KAAKiwC,cAAczpC,KAClGxG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAKkwC,gBAAgB1pC,KACnGxG,KAAK0qC,QAAQxC,mBAAmB,CAAEkF,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAKmwC,YAAY3pC,GAAA,KAC/FxG,KAAK0qC,QAAQxC,mBAAmB,CAAE+F,OAAQ,IAAKb,cAAe,IAAK1E,MAAO,MAAOliC,GAAUxG,KAAKmwC,YAAY3pC,GAAA,KAK5GxG,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAGwzB,KAAK,IAAMrwC,KAAKswC,SAClDtwC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAG0zB,IAAI,IAAMvwC,KAAKwwC,aACjDxwC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAG4zB,IAAI,IAAMzwC,KAAKwwC,aACjDxwC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAG6zB,IAAI,IAAM1wC,KAAKwwC,aACjDxwC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAGsK,IAAI,IAAMnnB,KAAK2wC,mBACjD3wC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAG+zB,IAAI,IAAM5wC,KAAK6wC,cACjD7wC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAGi0B,IAAI,IAAM9wC,KAAK+wC,QACjD/wC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAGm0B,IAAI,IAAMhxC,KAAKixC,aACjDjxC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAAsU,GAAGq0B,IAAI,IAAMlxC,KAAKmxC,YAGjDnxC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAA6oC,GAAGC,KAAK,IAAMrxC,KAAKuc,UAClDvc,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAA6oC,GAAGE,KAAK,IAAMtxC,KAAKuxC,aAClDvxC,KAAK0qC,QAAQ0F,kBAAkB7nC,EAAA6oC,GAAGI,KAAK,IAAMxxC,KAAKyxC,WAMlDzxC,KAAK0qC,QAAQvC,mBAAmB,EAAG,IAAI9vB,EAAAq5B,YAAWlrC,IAAUxG,KAAK2xC,SAASnrC,GAAOxG,KAAK4xC,YAAYprC,IAAA,MAElGxG,KAAK0qC,QAAQvC,mBAAmB,EAAG,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAK4xC,YAAYprC,MAE3ExG,KAAK0qC,QAAQvC,mBAAmB,EAAG,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAK2xC,SAASnrC,MAGxExG,KAAK0qC,QAAQvC,mBAAmB,EAAG,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAK6xC,wBAAwBrrC,MAKvFxG,KAAK0qC,QAAQvC,mBAAmB,EAAG,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAK8xC,aAAatrC,MAE5ExG,KAAK0qC,QAAQvC,mBAAmB,GAAI,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAK+xC,mBAAmBvrC,MAEnFxG,KAAK0qC,QAAQvC,mBAAmB,GAAI,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAKgyC,mBAAmBxrC,MAEnFxG,KAAK0qC,QAAQvC,mBAAmB,GAAI,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAKiyC,uBAAuBzrC,MAavFxG,KAAK0qC,QAAQvC,mBAAmB,IAAK,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAKkyC,oBAAoB1rC,MAIrFxG,KAAK0qC,QAAQvC,mBAAmB,IAAK,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAKmyC,eAAe3rC,MAEhFxG,KAAK0qC,QAAQvC,mBAAmB,IAAK,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAKoyC,eAAe5rC,MAEhFxG,KAAK0qC,QAAQvC,mBAAmB,IAAK,IAAI9vB,EAAAq5B,YAAWlrC,GAAQxG,KAAKqyC,mBAAmB7rC,MAYpFxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK6vC,eAC3D7vC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK+vC,kBAC3D/vC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKuc,UAC3Dvc,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKuxC,aAC3DvxC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKyxC,WAC3DzxC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKsyC,iBAC3DtyC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKuyC,0BAC3DvyC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKwyC,sBAC3DxyC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAKyyC,cAC3DzyC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK0yC,UAAU,KACrE1yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK0yC,UAAU,KACrE1yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK0yC,UAAU,KACrE1yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK0yC,UAAU,KACrE1yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEU,MAAO,MAAO,IAAM1oC,KAAK0yC,UAAU,KACrE1yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAO,MAAO,IAAM1oC,KAAK2yC,yBAC/E3yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAO,MAAO,IAAM1oC,KAAK2yC,yBAC/E,IAAK,MAAMnsC,KAAQyB,EAAA2qC,SACjB5yC,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KACpGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KACpGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KACpGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KACpGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KACpGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KACpGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAOliC,IAAQ,IAAMxG,KAAK6yC,cAAc,IAAMrsC,KAEtGxG,KAAK0qC,QAAQ1C,mBAAmB,CAAEoF,cAAe,IAAK1E,MAAO,MAAO,IAAM1oC,KAAK8yC,2BAK/E9yC,KAAK0qC,QAAQqI,iBAAiBvsC,IAC5BxG,KAAK2f,YAAYhc,MAAM,kBAAmB6C,GACnCA,KAMTxG,KAAK0qC,QAAQzC,mBAAmB,CAAEmF,cAAe,IAAK1E,MAAO,KAAO,IAAIpwB,EAAA06B,YAAW,CAACxsC,EAAMC,IAAWzG,KAAKizC,oBAAoBzsC,EAAMC,KACtI,CAKQysC,cAAAA,CAAe1sC,EAAsBC,EAAsBsB,EAAuBK,GACxFpI,KAAK+rC,YAAYC,QAAA,EACjBhsC,KAAK+rC,YAAYE,aAAezlC,EAChCxG,KAAK+rC,YAAYG,aAAezlC,EAChCzG,KAAK+rC,YAAYI,cAAgBpkC,EACjC/H,KAAK+rC,YAAY7jB,SAAW9f,CAC9B,CAEQ+qC,sBAAAA,CAAuB3sC,GAEzBxG,KAAK2f,YAAYiF,UAAYxM,EAAAovB,aAAaC,MAC5C2L,QAAQC,KAAK,CAAC7sC,EAAG,IAAI4sC,SAAQ,CAAC5sC,EAAKC,IAAQ/B,YAAW,IAAM+B,EAAI,kBArS7C,SAsShB7B,OAAM4B,IACL,GAAY,kBAARA,EACF,MAAMA,EAER9C,QAAQ6S,KAAK,kDAAiE,GAGtF,CAEQ+8B,iBAAAA,GACN,OAAOtzC,KAAKsqC,aAAa10B,SAASC,KACpC,CAeOyxB,KAAAA,CAAM9gC,EAA2BC,GACtC,IAAIsB,EACAK,EAAepI,KAAKkqB,cAAc9X,EAClCxK,EAAe5H,KAAKkqB,cAAc7X,EAClC9J,EAAQ,EACZ,MAAMN,EAAYjI,KAAK+rC,YAAYC,OAEnC,GAAI/jC,EAAW,CAEb,GAAIF,EAAS/H,KAAK0qC,QAAQpD,MAAMtnC,KAAK2qC,aAAc3qC,KAAK+rC,YAAYI,cAAe1lC,GAEjF,OADAzG,KAAKmzC,uBAAuBprC,GACrBA,EAETK,EAAepI,KAAK+rC,YAAYE,aAChCrkC,EAAe5H,KAAK+rC,YAAYG,aAChClsC,KAAK+rC,YAAYC,QAAA,EACbxlC,EAAK0D,OAASuO,IAChBlQ,EAAQvI,KAAK+rC,YAAY7jB,SAAWzP,E,CA0BxC,GArBIzY,KAAK2f,YAAYiF,UAAYxM,EAAAovB,aAAa+L,OAC5CvzC,KAAK2f,YAAYC,MAAM,gBAA+B,iBAATpZ,EAAoB,KAAKA,KAAU,KAAKk9B,MAAM8P,UAAUxgC,IAAImD,KAAK3P,GAAMA,GAAKkhB,OAAOC,aAAanhB,KAAI6vB,KAAK,QAA0B,iBAAT7vB,EACnKA,EAAKitC,MAAM,IAAIzgC,KAAIxM,GAAKA,EAAEygB,WAAW,KACrCzgB,GAKFxG,KAAK2qC,aAAazgC,OAAS1D,EAAK0D,QAC9BlK,KAAK2qC,aAAazgC,OAASuO,IAC7BzY,KAAK2qC,aAAe,IAAIC,YAAYviC,KAAKgP,IAAI7Q,EAAK0D,OAAQuO,KAMzDxQ,GACHjI,KAAKqsC,iBAAiBqH,aAIpBltC,EAAK0D,OAASuO,EAChB,IAAK,IAAIhS,EAAI8B,EAAO9B,EAAID,EAAK0D,OAAQzD,GAAKgS,EAAwB,CAChE,MAAMlQ,EAAM9B,EAAIgS,EAAyBjS,EAAK0D,OAASzD,EAAIgS,EAAyBjS,EAAK0D,OACnFjC,EAAuB,iBAATzB,EAChBxG,KAAK6qC,eAAe8I,OAAOntC,EAAK2qB,UAAU1qB,EAAG8B,GAAMvI,KAAK2qC,cACxD3qC,KAAK+qC,aAAa4I,OAAOntC,EAAKotC,SAASntC,EAAG8B,GAAMvI,KAAK2qC,cACzD,GAAI5iC,EAAS/H,KAAK0qC,QAAQpD,MAAMtnC,KAAK2qC,aAAc1iC,GAGjD,OAFAjI,KAAKkzC,eAAe9qC,EAAcR,EAAcK,EAAKxB,GACrDzG,KAAKmzC,uBAAuBprC,GACrBA,C,MAIX,IAAKE,EAAW,CACd,MAAMxB,EAAuB,iBAATD,EAChBxG,KAAK6qC,eAAe8I,OAAOntC,EAAMxG,KAAK2qC,cACtC3qC,KAAK+qC,aAAa4I,OAAOntC,EAAMxG,KAAK2qC,cACxC,GAAI5iC,EAAS/H,KAAK0qC,QAAQpD,MAAMtnC,KAAK2qC,aAAclkC,GAGjD,OAFAzG,KAAKkzC,eAAe9qC,EAAcR,EAAcnB,EAAK,GACrDzG,KAAKmzC,uBAAuBprC,GACrBA,C,CAKT/H,KAAKkqB,cAAc9X,IAAMhK,GAAgBpI,KAAKkqB,cAAc7X,IAAMzK,GACpE5H,KAAKsa,cAAc7F,OAIrBzU,KAAKurC,sBAAsB92B,KAAKzU,KAAKqsC,iBAAiBrhC,MAAOhL,KAAKqsC,iBAAiBphC,IACrF,CAEOiiC,KAAAA,CAAM1mC,EAAmBC,EAAesB,GAC7C,IAAIK,EACAR,EACJ,MAAMW,EAAUvI,KAAK0mC,gBAAgBmN,QAC/B5rC,EAAmBjI,KAAKoV,gBAAgBhH,WAAW4U,iBACnDva,EAAOzI,KAAKwQ,eAAevJ,KAC3B0B,EAAiB3I,KAAK6wB,aAAa3iB,gBAAgB4lC,WACnDtrC,EAAaxI,KAAK6wB,aAAakjB,MAAMC,WACrCnrC,EAAU7I,KAAKsqC,aACrB,IAAIpyB,EAAYlY,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAE3FrS,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,GAG/CrS,KAAKkqB,cAAc9X,GAAKrK,EAAMtB,EAAQ,GAAsD,IAAjDyR,EAAUoG,SAASte,KAAKkqB,cAAc9X,EAAI,IACvF8F,EAAUg8B,qBAAqBl0C,KAAKkqB,cAAc9X,EAAI,EAAG,EAAG,EAAGvJ,EAAQmM,GAAInM,EAAQ2sB,GAAI3sB,EAAQ+M,UAGjG,IAAK,IAAIuC,EAAM1R,EAAO0R,EAAMpQ,IAAOoQ,EAAK,CAUtC,GATA/P,EAAO5B,EAAK2R,GAIZvQ,EAAU5H,KAAKyqC,gBAAgB0J,QAAQ/rC,GAKnCA,EAAO,KAAOG,EAAS,CACzB,MAAM/B,EAAK+B,EAAQmf,OAAOC,aAAavf,IACnC5B,IACF4B,EAAO5B,EAAGygB,WAAW,G,CAezB,GAXIhf,GACFjI,KAAK4rC,YAAYn3B,MAAA,EAAK7L,EAAAwrC,qBAAoBhsC,IAExCpI,KAAKszC,qBACPtzC,KAAKqV,gBAAgBg/B,cAAcr0C,KAAKszC,oBAAqBtzC,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAOxGzK,IAAW5H,KAAKkqB,cAAc9X,EAAnC,CAeA,GAAIpS,KAAKkqB,cAAc9X,EAAIxK,EAAU,GAAKa,EAGxC,GAAIE,EAAgB,CAElB,KAAO3I,KAAKkqB,cAAc9X,EAAI3J,GAC5ByP,EAAUg8B,qBAAqBl0C,KAAKkqB,cAAc9X,IAAK,EAAG,EAAGvJ,EAAQmM,GAAInM,EAAQ2sB,GAAI3sB,EAAQ+M,UAE/F5V,KAAKkqB,cAAc9X,EAAI,EACvBpS,KAAKkqB,cAAc7X,IACfrS,KAAKkqB,cAAc7X,IAAMrS,KAAKkqB,cAAckd,aAAe,GAC7DpnC,KAAKkqB,cAAc7X,IACnBrS,KAAKwQ,eAAeo3B,OAAO5nC,KAAKs0C,kBAAA,KAE5Bt0C,KAAKkqB,cAAc7X,GAAKrS,KAAKwQ,eAAenL,OAC9CrF,KAAKkqB,cAAc7X,EAAIrS,KAAKwQ,eAAenL,KAAO,GAIpDrF,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAAI0Z,WAAA,GAGjF7T,EAAYlY,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,E,MAGvF,GADArS,KAAKkqB,cAAc9X,EAAI3J,EAAO,EACd,IAAZb,EAGF,SAuBN,GAjBIY,IAEF0P,EAAUq8B,YAAYv0C,KAAKkqB,cAAc9X,EAAGxK,EAAS5H,KAAKkqB,cAAcsqB,YAAY3rC,GAAUA,GAIzD,IAAjCqP,EAAUoG,SAAS7V,EAAO,IAC5ByP,EAAUg8B,qBAAqBzrC,EAAO,EAAGK,EAAA2rC,eAAgB3rC,EAAA4rC,gBAAiB7rC,EAAQmM,GAAInM,EAAQ2sB,GAAI3sB,EAAQ+M,WAK9GsC,EAAUg8B,qBAAqBl0C,KAAKkqB,cAAc9X,IAAKhK,EAAMR,EAASiB,EAAQmM,GAAInM,EAAQ2sB,GAAI3sB,EAAQ+M,UAKlGhO,EAAU,EACZ,OAASA,GAEPsQ,EAAUg8B,qBAAqBl0C,KAAKkqB,cAAc9X,IAAK,EAAG,EAAGvJ,EAAQmM,GAAInM,EAAQ2sB,GAAI3sB,EAAQ+M,S,MApE1FsC,EAAUoG,SAASte,KAAKkqB,cAAc9X,EAAI,GAM7C8F,EAAUy8B,mBAAmB30C,KAAKkqB,cAAc9X,EAAI,EAAGhK,GAFvD8P,EAAUy8B,mBAAmB30C,KAAKkqB,cAAc9X,EAAI,EAAGhK,E,CAwEzDL,EAAMtB,EAAQ,IAChByR,EAAUxC,SAAS1V,KAAKkqB,cAAc9X,EAAI,EAAGpS,KAAKm0B,WAChB,IAA9Bn0B,KAAKm0B,UAAU7V,YAAoBte,KAAKm0B,UAAU2D,UAAY,MAChE93B,KAAK0qC,QAAQkK,mBAAqB,EACzB50C,KAAKm0B,UAAUsG,aACxBz6B,KAAK0qC,QAAQkK,mBAAqB50C,KAAKm0B,UAAUe,WAAWjO,WAAW,GAEvEjnB,KAAK0qC,QAAQkK,mBAAqB50C,KAAKm0B,UAAUoG,SAKjDv6B,KAAKkqB,cAAc9X,EAAI3J,GAAQV,EAAMtB,EAAQ,GAAkD,IAA7CyR,EAAUoG,SAASte,KAAKkqB,cAAc9X,KAAa8F,EAAUzC,WAAWzV,KAAKkqB,cAAc9X,IAC/I8F,EAAUg8B,qBAAqBl0C,KAAKkqB,cAAc9X,EAAG,EAAG,EAAGvJ,EAAQmM,GAAInM,EAAQ2sB,GAAI3sB,EAAQ+M,UAG7F5V,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,EACrD,CAKO61B,kBAAAA,CAAmB1hC,EAAyBC,GACjD,MAAiB,MAAbD,EAAGkiC,OAAkBliC,EAAGynC,QAAWznC,EAAG4mC,cASnCptC,KAAK0qC,QAAQxC,mBAAmB1hC,EAAIC,GAPlCzG,KAAK0qC,QAAQxC,mBAAmB1hC,GAAIA,IACpCkS,EAAoBlS,EAAOimC,OAAO,GAAIzsC,KAAKoV,gBAAgBhH,WAAW0hC,gBAGpErpC,EAASD,IAItB,CAKOyhC,kBAAAA,CAAmBzhC,EAAyBC,GACjD,OAAOzG,KAAK0qC,QAAQzC,mBAAmBzhC,EAAI,IAAI8R,EAAA06B,WAAWvsC,GAC5D,CAKOuhC,kBAAAA,CAAmBxhC,EAAyBC,GACjD,OAAOzG,KAAK0qC,QAAQ1C,mBAAmBxhC,EAAIC,EAC7C,CAKO0hC,kBAAAA,CAAmB3hC,EAAeC,GACvC,OAAOzG,KAAK0qC,QAAQvC,mBAAmB3hC,EAAO,IAAI6R,EAAAq5B,WAAWjrC,GAC/D,CAUO6pC,IAAAA,GAEL,OADAtwC,KAAKsrC,eAAe72B,QAAA,CAEtB,CAYO+7B,QAAAA,GA0BL,OAzBAxwC,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,GAC/CrS,KAAKoV,gBAAgBhH,WAAWlJ,aAClClF,KAAKkqB,cAAc9X,EAAI,GAEzBpS,KAAKkqB,cAAc7X,IACfrS,KAAKkqB,cAAc7X,IAAMrS,KAAKkqB,cAAckd,aAAe,GAC7DpnC,KAAKkqB,cAAc7X,IACnBrS,KAAKwQ,eAAeo3B,OAAO5nC,KAAKs0C,mBACvBt0C,KAAKkqB,cAAc7X,GAAKrS,KAAKwQ,eAAenL,KACrDrF,KAAKkqB,cAAc7X,EAAIrS,KAAKwQ,eAAenL,KAAO,EAOlDrF,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAAI0Z,WAAA,EAG7E/rB,KAAKkqB,cAAc9X,GAAKpS,KAAKwQ,eAAevJ,MAC9CjH,KAAKkqB,cAAc9X,IAErBpS,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,GAEnDrS,KAAK2lC,YAAYlxB,QAAA,CAEnB,CAQOk8B,cAAAA,GAEL,OADA3wC,KAAKkqB,cAAc9X,EAAI,IAEzB,CAaOy+B,SAAAA,G,MAEL,IAAK7wC,KAAK6wB,aAAa3iB,gBAAgB2mC,kBAKrC,OAJA70C,KAAK80C,kBACD90C,KAAKkqB,cAAc9X,EAAI,GACzBpS,KAAKkqB,cAAc9X,KAAA,EAUvB,GAFApS,KAAK80C,gBAAgB90C,KAAKwQ,eAAevJ,MAErCjH,KAAKkqB,cAAc9X,EAAI,EACzBpS,KAAKkqB,cAAc9X,SAUnB,GAA6B,IAAzBpS,KAAKkqB,cAAc9X,GAClBpS,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,WAC1C9qB,KAAKkqB,cAAc7X,GAAKrS,KAAKkqB,cAAckd,eACkC,QAA7E5gC,EAAAxG,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,UAAA,IAAE7L,OAAA,EAAAA,EAAEulB,WAAW,CAC7F/rB,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAAI0Z,WAAA,EAC/E/rB,KAAKkqB,cAAc7X,IACnBrS,KAAKkqB,cAAc9X,EAAIpS,KAAKwQ,eAAevJ,KAAO,EAMlD,MAAMT,EAAOxG,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GACpF7L,EAAKm5B,SAAS3/B,KAAKkqB,cAAc9X,KAAO5L,EAAKiP,WAAWzV,KAAKkqB,cAAc9X,IAC7EpS,KAAKkqB,cAAc9X,G,CAQzB,OADApS,KAAK80C,mBAAA,CAEP,CAQO/D,GAAAA,GACL,GAAI/wC,KAAKkqB,cAAc9X,GAAKpS,KAAKwQ,eAAevJ,KAC9C,OAAO,EAET,MAAMT,EAAYxG,KAAKkqB,cAAc9X,EAKrC,OAJApS,KAAKkqB,cAAc9X,EAAIpS,KAAKkqB,cAAc6qB,WACtC/0C,KAAKoV,gBAAgBhH,WAAW4U,kBAClChjB,KAAK6rC,WAAWp3B,KAAKzU,KAAKkqB,cAAc9X,EAAI5L,IAAA,CAGhD,CASOyqC,QAAAA,GAEL,OADAjxC,KAAK0mC,gBAAgBgM,UAAU,KAEjC,CASOvB,OAAAA,GAEL,OADAnxC,KAAK0mC,gBAAgBgM,UAAU,KAEjC,CAKQoC,eAAAA,CAAgBtuC,EAAiBxG,KAAKwQ,eAAevJ,KAAO,GAClEjH,KAAKkqB,cAAc9X,EAAI/J,KAAKgP,IAAI7Q,EAAQ6B,KAAKC,IAAI,EAAGtI,KAAKkqB,cAAc9X,IACvEpS,KAAKkqB,cAAc7X,EAAIrS,KAAK6wB,aAAa3iB,gBAAgB4b,OACrDzhB,KAAKgP,IAAIrX,KAAKkqB,cAAckd,aAAc/+B,KAAKC,IAAItI,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAc7X,IACpGhK,KAAKgP,IAAIrX,KAAKwQ,eAAenL,KAAO,EAAGgD,KAAKC,IAAI,EAAGtI,KAAKkqB,cAAc7X,IAC1ErS,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,EACrD,CAKQ2iC,UAAAA,CAAWxuC,EAAWC,GAC5BzG,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,GAC/CrS,KAAK6wB,aAAa3iB,gBAAgB4b,QACpC9pB,KAAKkqB,cAAc9X,EAAI5L,EACvBxG,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UAAYrkB,IAEtDzG,KAAKkqB,cAAc9X,EAAI5L,EACvBxG,KAAKkqB,cAAc7X,EAAI5L,GAEzBzG,KAAK80C,kBACL90C,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,EACrD,CAKQ4iC,WAAAA,CAAYzuC,EAAWC,GAG7BzG,KAAK80C,kBACL90C,KAAKg1C,WAAWh1C,KAAKkqB,cAAc9X,EAAI5L,EAAGxG,KAAKkqB,cAAc7X,EAAI5L,EACnE,CASO6mC,QAAAA,CAAS9mC,GAEd,MAAMC,EAAYzG,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UAM5D,OALIrkB,GAAa,EACfzG,KAAKi1C,YAAY,GAAI5sC,KAAKgP,IAAI5Q,EAAWD,EAAOimC,OAAO,IAAM,IAE7DzsC,KAAKi1C,YAAY,IAAKzuC,EAAOimC,OAAO,IAAM,MAG9C,CASOe,UAAAA,CAAWhnC,GAEhB,MAAMC,EAAezG,KAAKkqB,cAAckd,aAAepnC,KAAKkqB,cAAc7X,EAM1E,OALI5L,GAAgB,EAClBzG,KAAKi1C,YAAY,EAAG5sC,KAAKgP,IAAI5Q,EAAcD,EAAOimC,OAAO,IAAM,IAE/DzsC,KAAKi1C,YAAY,EAAGzuC,EAAOimC,OAAO,IAAM,KAG5C,CAQOgB,aAAAA,CAAcjnC,GAEnB,OADAxG,KAAKi1C,YAAYzuC,EAAOimC,OAAO,IAAM,EAAG,KAE1C,CAQOiB,cAAAA,CAAelnC,GAEpB,OADAxG,KAAKi1C,cAAczuC,EAAOimC,OAAO,IAAM,GAAI,KAE7C,CAUOkB,cAAAA,CAAennC,GAGpB,OAFAxG,KAAKwtC,WAAWhnC,GAChBxG,KAAKkqB,cAAc9X,EAAI,IAEzB,CAUOw7B,mBAAAA,CAAoBpnC,GAGzB,OAFAxG,KAAKstC,SAAS9mC,GACdxG,KAAKkqB,cAAc9X,EAAI,IAEzB,CAQOy7B,kBAAAA,CAAmBrnC,GAExB,OADAxG,KAAKg1C,YAAYxuC,EAAOimC,OAAO,IAAM,GAAK,EAAGzsC,KAAKkqB,cAAc7X,IAAA,CAElE,CAWOy7B,cAAAA,CAAetnC,GAOpB,OANAxG,KAAKg1C,WAEFxuC,EAAO0D,QAAU,GAAM1D,EAAOimC,OAAO,IAAM,GAAK,EAAI,GAEpDjmC,EAAOimC,OAAO,IAAM,GAAK,KAG9B,CASOiC,eAAAA,CAAgBloC,GAErB,OADAxG,KAAKg1C,YAAYxuC,EAAOimC,OAAO,IAAM,GAAK,EAAGzsC,KAAKkqB,cAAc7X,IAAA,CAElE,CAQOs8B,iBAAAA,CAAkBnoC,GAEvB,OADAxG,KAAKi1C,YAAYzuC,EAAOimC,OAAO,IAAM,EAAG,KAE1C,CAQOsC,eAAAA,CAAgBvoC,GAErB,OADAxG,KAAKg1C,WAAWh1C,KAAKkqB,cAAc9X,GAAI5L,EAAOimC,OAAO,IAAM,GAAK,KAElE,CASOuC,iBAAAA,CAAkBxoC,GAEvB,OADAxG,KAAKi1C,YAAY,EAAGzuC,EAAOimC,OAAO,IAAM,KAE1C,CAUOwC,UAAAA,CAAWzoC,GAEhB,OADAxG,KAAK8tC,eAAetnC,IAAA,CAEtB,CAaO0oC,QAAAA,CAAS1oC,GACd,MAAMC,EAAQD,EAAOimC,OAAO,GAM5B,OALc,IAAVhmC,SACKzG,KAAKkqB,cAAcgrB,KAAKl1C,KAAKkqB,cAAc9X,GAC/B,IAAV3L,IACTzG,KAAKkqB,cAAcgrB,KAAO,CAAC,KAG/B,CAQOnH,gBAAAA,CAAiBvnC,GACtB,GAAIxG,KAAKkqB,cAAc9X,GAAKpS,KAAKwQ,eAAevJ,KAC9C,OAAO,EAET,IAAIR,EAAQD,EAAOimC,OAAO,IAAM,EAChC,KAAOhmC,KACLzG,KAAKkqB,cAAc9X,EAAIpS,KAAKkqB,cAAc6qB,WAE5C,OAAO,CACT,CAOOtG,iBAAAA,CAAkBjoC,GACvB,GAAIxG,KAAKkqB,cAAc9X,GAAKpS,KAAKwQ,eAAevJ,KAC9C,OAAO,EAET,IAAIR,EAAQD,EAAOimC,OAAO,IAAM,EAEhC,KAAOhmC,KACLzG,KAAKkqB,cAAc9X,EAAIpS,KAAKkqB,cAAcirB,WAE5C,OAAO,CACT,CAOOjF,eAAAA,CAAgB1pC,GACrB,MAAMC,EAAID,EAAOimC,OAAO,GAGxB,OAFU,IAANhmC,IAASzG,KAAKsqC,aAAa9U,IAAM,WAC3B,IAAN/uB,GAAiB,IAANA,IAASzG,KAAKsqC,aAAa9U,KAAM,aAElD,CAYQ4f,kBAAAA,CAAmB5uC,EAAWC,EAAesB,EAAaK,GAAA,EAA4BR,GAAA,GAC5F,MAAMW,EAAOvI,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQ7X,GACrE+B,EAAK8sC,aACH5uC,EACAsB,EACA/H,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBACpCt0C,KAAKs0C,iBACL1sC,GAEEQ,IACFG,EAAKwjB,WAAA,EAET,CAOQupB,gBAAAA,CAAiB9uC,EAAWC,GAAA,GAClC,MAAMsB,EAAO/H,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQ7X,GACjEuB,IACFA,EAAKgxB,KAAK/4B,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBAAmB7tC,GACjEzG,KAAKwQ,eAAe7D,OAAO4oC,aAAav1C,KAAKkqB,cAAc7L,MAAQ7X,GACnEuB,EAAKgkB,WAAA,EAET,CA0BOiiB,cAAAA,CAAexnC,EAAiBC,GAAA,GAErC,IAAIsB,EACJ,OAFA/H,KAAK80C,gBAAgB90C,KAAKwQ,eAAevJ,MAEjCT,EAAOimC,OAAO,IACpB,KAAK,EAIH,IAHA1kC,EAAI/H,KAAKkqB,cAAc7X,EACvBrS,KAAKqsC,iBAAiB4H,UAAUlsC,GAChC/H,KAAKo1C,mBAAmBrtC,IAAK/H,KAAKkqB,cAAc9X,EAAGpS,KAAKwQ,eAAevJ,KAA+B,IAAzBjH,KAAKkqB,cAAc9X,EAAS3L,GAClGsB,EAAI/H,KAAKwQ,eAAenL,KAAM0C,IACnC/H,KAAKs1C,iBAAiBvtC,EAAGtB,GAE3BzG,KAAKqsC,iBAAiB4H,UAAUlsC,GAChC,MACF,KAAK,EASH,IARAA,EAAI/H,KAAKkqB,cAAc7X,EACvBrS,KAAKqsC,iBAAiB4H,UAAUlsC,GAEhC/H,KAAKo1C,mBAAmBrtC,EAAG,EAAG/H,KAAKkqB,cAAc9X,EAAI,GAAG,EAAM3L,GAC1DzG,KAAKkqB,cAAc9X,EAAI,GAAKpS,KAAKwQ,eAAevJ,OAElDjH,KAAKkqB,cAActd,MAAMsD,IAAInI,EAAI,GAAIgkB,WAAA,GAEhChkB,KACL/H,KAAKs1C,iBAAiBvtC,EAAGtB,GAE3BzG,KAAKqsC,iBAAiB4H,UAAU,GAChC,MACF,KAAK,EAGH,IAFAlsC,EAAI/H,KAAKwQ,eAAenL,KACxBrF,KAAKqsC,iBAAiB4H,UAAUlsC,EAAI,GAC7BA,KACL/H,KAAKs1C,iBAAiBvtC,EAAGtB,GAE3BzG,KAAKqsC,iBAAiB4H,UAAU,GAChC,MACF,KAAK,EAEH,MAAMztC,EAAiBxG,KAAKkqB,cAActd,MAAM1C,OAASlK,KAAKwQ,eAAenL,KACzEmB,EAAiB,IACnBxG,KAAKkqB,cAActd,MAAMq3B,UAAUz9B,GACnCxG,KAAKkqB,cAAc7L,MAAQhW,KAAKC,IAAItI,KAAKkqB,cAAc7L,MAAQ7X,EAAgB,GAC/ExG,KAAKkqB,cAAcpd,MAAQzE,KAAKC,IAAItI,KAAKkqB,cAAcpd,MAAQtG,EAAgB,GAE/ExG,KAAKyiB,UAAUhO,KAAK,IAI1B,OAAO,CACT,CAwBOy5B,WAAAA,CAAY1nC,EAAiBC,GAAA,GAElC,OADAzG,KAAK80C,gBAAgB90C,KAAKwQ,eAAevJ,MACjCT,EAAOimC,OAAO,IACpB,KAAK,EACHzsC,KAAKo1C,mBAAmBp1C,KAAKkqB,cAAc7X,EAAGrS,KAAKkqB,cAAc9X,EAAGpS,KAAKwQ,eAAevJ,KAA+B,IAAzBjH,KAAKkqB,cAAc9X,EAAS3L,GAC1H,MACF,KAAK,EACHzG,KAAKo1C,mBAAmBp1C,KAAKkqB,cAAc7X,EAAG,EAAGrS,KAAKkqB,cAAc9X,EAAI,GAAG,EAAO3L,GAClF,MACF,KAAK,EACHzG,KAAKo1C,mBAAmBp1C,KAAKkqB,cAAc7X,EAAG,EAAGrS,KAAKwQ,eAAevJ,MAAA,EAAYR,GAIrF,OADAzG,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,IAAA,CAErD,CAWO87B,WAAAA,CAAY3nC,GACjBxG,KAAK80C,kBACL,IAAIruC,EAAQD,EAAOimC,OAAO,IAAM,EAEhC,GAAIzsC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAckd,cAAgBpnC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UACtG,OAAO,EAGT,MAAM/iB,EAAc/H,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,EAE5DjK,EAAyBpI,KAAKwQ,eAAenL,KAAO,EAAIrF,KAAKkqB,cAAckd,aAC3Ex/B,EAAuB5H,KAAKwQ,eAAenL,KAAO,EAAIrF,KAAKkqB,cAAc7L,MAAQjW,EAAyB,EAChH,KAAO3B,KAGLzG,KAAKkqB,cAActd,MAAM6E,OAAO7J,EAAuB,EAAG,GAC1D5H,KAAKkqB,cAActd,MAAM6E,OAAO1J,EAAK,EAAG/H,KAAKkqB,cAAclC,aAAahoB,KAAKs0C,mBAK/E,OAFAt0C,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAc7X,EAAGrS,KAAKkqB,cAAckd,cAC9EpnC,KAAKkqB,cAAc9X,EAAI,IAEzB,CAWOg8B,WAAAA,CAAY5nC,GACjBxG,KAAK80C,kBACL,IAAIruC,EAAQD,EAAOimC,OAAO,IAAM,EAEhC,GAAIzsC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAckd,cAAgBpnC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UACtG,OAAO,EAGT,MAAM/iB,EAAc/H,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,EAElE,IAAIjK,EAGJ,IAFAA,EAAIpI,KAAKwQ,eAAenL,KAAO,EAAIrF,KAAKkqB,cAAckd,aACtDh/B,EAAIpI,KAAKwQ,eAAenL,KAAO,EAAIrF,KAAKkqB,cAAc7L,MAAQjW,EACvD3B,KAGLzG,KAAKkqB,cAActd,MAAM6E,OAAO1J,EAAK,GACrC/H,KAAKkqB,cAActd,MAAM6E,OAAOrJ,EAAG,EAAGpI,KAAKkqB,cAAclC,aAAahoB,KAAKs0C,mBAK7E,OAFAt0C,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAc7X,EAAGrS,KAAKkqB,cAAckd,cAC9EpnC,KAAKkqB,cAAc9X,EAAI,IAEzB,CAcO+6B,WAAAA,CAAY3mC,GACjBxG,KAAK80C,kBACL,MAAMruC,EAAOzG,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAUxF,OATI5L,IACFA,EAAK8tC,YACHv0C,KAAKkqB,cAAc9X,EACnB5L,EAAOimC,OAAO,IAAM,EACpBzsC,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBACpCt0C,KAAKs0C,kBAEPt0C,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,KAAA,CAGvD,CAcOg8B,WAAAA,CAAY7nC,GACjBxG,KAAK80C,kBACL,MAAMruC,EAAOzG,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAUxF,OATI5L,IACFA,EAAK+uC,YACHx1C,KAAKkqB,cAAc9X,EACnB5L,EAAOimC,OAAO,IAAM,EACpBzsC,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBACpCt0C,KAAKs0C,kBAEPt0C,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,KAAA,CAGvD,CAUOi8B,QAAAA,CAAS9nC,GACd,IAAIC,EAAQD,EAAOimC,OAAO,IAAM,EAEhC,KAAOhmC,KACLzG,KAAKkqB,cAActd,MAAM6E,OAAOzR,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAcY,UAAW,GACzF9qB,KAAKkqB,cAActd,MAAM6E,OAAOzR,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAckd,aAAc,EAAGpnC,KAAKkqB,cAAclC,aAAahoB,KAAKs0C,mBAGtI,OADAt0C,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,eAAA,CAExF,CAOOmH,UAAAA,CAAW/nC,GAChB,IAAIC,EAAQD,EAAOimC,OAAO,IAAM,EAEhC,KAAOhmC,KACLzG,KAAKkqB,cAActd,MAAM6E,OAAOzR,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAckd,aAAc,GAC5FpnC,KAAKkqB,cAActd,MAAM6E,OAAOzR,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAcY,UAAW,EAAG9qB,KAAKkqB,cAAclC,aAAaxf,EAAAyf,oBAG9H,OADAjoB,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,eAAA,CAExF,CAoBOiG,UAAAA,CAAW7mC,GAChB,GAAIxG,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAckd,cAAgBpnC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UACtG,OAAO,EAET,MAAMrkB,EAAQD,EAAOimC,OAAO,IAAM,EAClC,IAAK,IAAIjmC,EAAIxG,KAAKkqB,cAAcY,UAAWtkB,GAAKxG,KAAKkqB,cAAckd,eAAgB5gC,EAAG,CACpF,MAAMuB,EAAO/H,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQ7X,GACrEuB,EAAKytC,YAAY,EAAG/uC,EAAOzG,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBAAmBt0C,KAAKs0C,kBACvFvsC,EAAKgkB,WAAA,C,CAGP,OADA/rB,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,eAAA,CAExF,CAqBOmG,WAAAA,CAAY/mC,GACjB,GAAIxG,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAckd,cAAgBpnC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UACtG,OAAO,EAET,MAAMrkB,EAAQD,EAAOimC,OAAO,IAAM,EAClC,IAAK,IAAIjmC,EAAIxG,KAAKkqB,cAAcY,UAAWtkB,GAAKxG,KAAKkqB,cAAckd,eAAgB5gC,EAAG,CACpF,MAAMuB,EAAO/H,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQ7X,GACrEuB,EAAKwsC,YAAY,EAAG9tC,EAAOzG,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBAAmBt0C,KAAKs0C,kBACvFvsC,EAAKgkB,WAAA,C,CAGP,OADA/rB,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,eAAA,CAExF,CAWO4I,aAAAA,CAAcxpC,GACnB,GAAIxG,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAckd,cAAgBpnC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UACtG,OAAO,EAET,MAAMrkB,EAAQD,EAAOimC,OAAO,IAAM,EAClC,IAAK,IAAIjmC,EAAIxG,KAAKkqB,cAAcY,UAAWtkB,GAAKxG,KAAKkqB,cAAckd,eAAgB5gC,EAAG,CACpF,MAAMuB,EAAO/H,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQ7X,GACrEuB,EAAKwsC,YAAYv0C,KAAKkqB,cAAc9X,EAAG3L,EAAOzG,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBAAmBt0C,KAAKs0C,kBAC1GvsC,EAAKgkB,WAAA,C,CAGP,OADA/rB,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,eAAA,CAExF,CAWO6I,aAAAA,CAAczpC,GACnB,GAAIxG,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAckd,cAAgBpnC,KAAKkqB,cAAc7X,EAAIrS,KAAKkqB,cAAcY,UACtG,OAAO,EAET,MAAMrkB,EAAQD,EAAOimC,OAAO,IAAM,EAClC,IAAK,IAAIjmC,EAAIxG,KAAKkqB,cAAcY,UAAWtkB,GAAKxG,KAAKkqB,cAAckd,eAAgB5gC,EAAG,CACpF,MAAMuB,EAAO/H,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQ7X,GACrEuB,EAAKytC,YAAYx1C,KAAKkqB,cAAc9X,EAAG3L,EAAOzG,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBAAmBt0C,KAAKs0C,kBAC1GvsC,EAAKgkB,WAAA,C,CAGP,OADA/rB,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,eAAA,CAExF,CAUOoH,UAAAA,CAAWhoC,GAChBxG,KAAK80C,kBACL,MAAMruC,EAAOzG,KAAKkqB,cAActd,MAAMsD,IAAIlQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,GAUxF,OATI5L,IACFA,EAAK4uC,aACHr1C,KAAKkqB,cAAc9X,EACnBpS,KAAKkqB,cAAc9X,GAAK5L,EAAOimC,OAAO,IAAM,GAC5CzsC,KAAKkqB,cAAcsqB,YAAYx0C,KAAKs0C,kBACpCt0C,KAAKs0C,kBAEPt0C,KAAKqsC,iBAAiB4H,UAAUj0C,KAAKkqB,cAAc7X,KAAA,CAGvD,CA6BOu8B,wBAAAA,CAAyBpoC,GAC9B,IAAKxG,KAAK0qC,QAAQkK,mBAChB,OAAO,EAGT,MAAMnuC,EAASD,EAAOimC,OAAO,IAAM,EAC7B1kC,EAAO,IAAI6iC,YAAYnkC,GAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIC,IAAUD,EAC5BuB,EAAKvB,GAAKxG,KAAK0qC,QAAQkK,mBAGzB,OADA50C,KAAKktC,MAAMnlC,EAAM,EAAGA,EAAKmC,SAAA,CAE3B,CA2BO2kC,2BAAAA,CAA4BroC,GACjC,OAAIA,EAAOimC,OAAO,GAAK,IAGnBzsC,KAAKy1C,IAAI,UAAYz1C,KAAKy1C,IAAI,iBAAmBz1C,KAAKy1C,IAAI,UAC5Dz1C,KAAK6wB,aAAaviB,iBAAiB/F,EAAAsU,GAAGC,IAAM,UACnC9c,KAAKy1C,IAAI,UAClBz1C,KAAK6wB,aAAaviB,iBAAiB/F,EAAAsU,GAAGC,IAAM,WAGhD,CA0BOgyB,6BAAAA,CAA8BtoC,GACnC,OAAIA,EAAOimC,OAAO,GAAK,IAMnBzsC,KAAKy1C,IAAI,SACXz1C,KAAK6wB,aAAaviB,iBAAiB/F,EAAAsU,GAAGC,IAAM,cACnC9c,KAAKy1C,IAAI,gBAClBz1C,KAAK6wB,aAAaviB,iBAAiB/F,EAAAsU,GAAGC,IAAM,cACnC9c,KAAKy1C,IAAI,SAGlBz1C,KAAK6wB,aAAaviB,iBAAiB9H,EAAOimC,OAAO,GAAK,KAC7CzsC,KAAKy1C,IAAI,WAClBz1C,KAAK6wB,aAAaviB,iBAAiB/F,EAAAsU,GAAGC,IAAM,oBAGhD,CAMQ24B,GAAAA,CAAIjvC,GACV,OAAyE,KAAjExG,KAAKoV,gBAAgBhH,WAAWsnC,SAAW,IAAIlkC,QAAQhL,EACjE,CAmBO2oC,OAAAA,CAAQ3oC,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAO0D,OAAQzD,IACjC,OAAQD,EAAOimC,OAAOhmC,IACpB,KAAK,EACHzG,KAAK6wB,aAAakjB,MAAMC,YAAA,EACxB,MACF,KAAK,GACHh0C,KAAKoV,gBAAgBvT,QAAQqD,YAAA,EAInC,OAAO,CACT,CAoHOkqC,cAAAA,CAAe5oC,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAO0D,OAAQzD,IACjC,OAAQD,EAAOimC,OAAOhmC,IACpB,KAAK,EACHzG,KAAK6wB,aAAa3iB,gBAAgBgX,uBAAA,EAClC,MACF,KAAK,EACHllB,KAAK0mC,gBAAgBiP,YAAY,EAAG1tC,EAAA2tC,iBACpC51C,KAAK0mC,gBAAgBiP,YAAY,EAAG1tC,EAAA2tC,iBACpC51C,KAAK0mC,gBAAgBiP,YAAY,EAAG1tC,EAAA2tC,iBACpC51C,KAAK0mC,gBAAgBiP,YAAY,EAAG1tC,EAAA2tC,iBAEpC,MACF,KAAK,EAMC51C,KAAKoV,gBAAgBhH,WAAW0hC,cAAc/G,cAChD/oC,KAAKwQ,eAAenJ,OAAO,IAAKrH,KAAKwQ,eAAenL,MACpDrF,KAAKwrC,gBAAgB/2B,QAEvB,MACF,KAAK,EACHzU,KAAK6wB,aAAa3iB,gBAAgB4b,QAAA,EAClC9pB,KAAKg1C,WAAW,EAAG,GACnB,MACF,KAAK,EACHh1C,KAAK6wB,aAAa3iB,gBAAgB4lC,YAAA,EAClC,MACF,KAAK,GACH9zC,KAAKoV,gBAAgBvT,QAAQyD,aAAA,EAC7B,MACF,KAAK,GACHtF,KAAK6wB,aAAa3iB,gBAAgB2mC,mBAAA,EAClC,MACF,KAAK,GACH70C,KAAK2f,YAAYC,MAAM,6CACvB5f,KAAK6wB,aAAa3iB,gBAAgB2nC,mBAAA,EAClC71C,KAAK0rC,wBAAwBj3B,OAC7B,MACF,KAAK,EAEHzU,KAAKwqC,kBAAkBzlB,eAAiB,MACxC,MACF,KAAK,IAEH/kB,KAAKwqC,kBAAkBzlB,eAAiB,QACxC,MACF,KAAK,KACH/kB,KAAKwqC,kBAAkBzlB,eAAiB,OACxC,MACF,KAAK,KAGH/kB,KAAKwqC,kBAAkBzlB,eAAiB,MACxC,MACF,KAAK,KAGH/kB,KAAK6wB,aAAa3iB,gBAAgB0P,WAAA,EAClC5d,KAAKyrC,oBAAoBh3B,OACzB,MACF,KAAK,KACHzU,KAAK2f,YAAYC,MAAM,yCACvB,MACF,KAAK,KACH5f,KAAKwqC,kBAAkBsL,eAAiB,MACxC,MACF,KAAK,KACH91C,KAAK2f,YAAYC,MAAM,yCACvB,MACF,KAAK,KACH5f,KAAKwqC,kBAAkBsL,eAAiB,aACxC,MACF,KAAK,GACH91C,KAAK6wB,aAAa8E,gBAAA,EAClB,MACF,KAAK,KACH31B,KAAK6vC,aACL,MACF,KAAK,KACH7vC,KAAK6vC,aAEP,KAAK,GACL,KAAK,KACH7vC,KAAKwQ,eAAe8M,QAAQy4B,kBAAkB/1C,KAAKs0C,kBACnDt0C,KAAK6wB,aAAapL,qBAAA,EAClBzlB,KAAKurC,sBAAsB92B,KAAK,EAAGzU,KAAKwQ,eAAenL,KAAO,GAC9DrF,KAAK0rC,wBAAwBj3B,OAC7B,MACF,KAAK,KACHzU,KAAK6wB,aAAa3iB,gBAAgBC,oBAAA,EAIxC,OAAO,CACT,CAuBOkhC,SAAAA,CAAU7oC,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAO0D,OAAQzD,IACjC,OAAQD,EAAOimC,OAAOhmC,IACpB,KAAK,EACHzG,KAAK6wB,aAAakjB,MAAMC,YAAA,EACxB,MACF,KAAK,GACHh0C,KAAKoV,gBAAgBvT,QAAQqD,YAAA,EAInC,OAAO,CACT,CAgHOoqC,gBAAAA,CAAiB9oC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAO0D,OAAQzD,IACjC,OAAQD,EAAOimC,OAAOhmC,IACpB,KAAK,EACHzG,KAAK6wB,aAAa3iB,gBAAgBgX,uBAAA,EAClC,MACF,KAAK,EAMCllB,KAAKoV,gBAAgBhH,WAAW0hC,cAAc/G,cAChD/oC,KAAKwQ,eAAenJ,OAAO,GAAIrH,KAAKwQ,eAAenL,MACnDrF,KAAKwrC,gBAAgB/2B,QAEvB,MACF,KAAK,EACHzU,KAAK6wB,aAAa3iB,gBAAgB4b,QAAA,EAClC9pB,KAAKg1C,WAAW,EAAG,GACnB,MACF,KAAK,EACHh1C,KAAK6wB,aAAa3iB,gBAAgB4lC,YAAA,EAClC,MACF,KAAK,GACH9zC,KAAKoV,gBAAgBvT,QAAQyD,aAAA,EAC7B,MACF,KAAK,GACHtF,KAAK6wB,aAAa3iB,gBAAgB2mC,mBAAA,EAClC,MACF,KAAK,GACH70C,KAAK2f,YAAYC,MAAM,oCACvB5f,KAAK6wB,aAAa3iB,gBAAgB2nC,mBAAA,EAClC71C,KAAK0rC,wBAAwBj3B,OAC7B,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACHzU,KAAKwqC,kBAAkBzlB,eAAiB,OACxC,MACF,KAAK,KACH/kB,KAAK6wB,aAAa3iB,gBAAgB0P,WAAA,EAClC,MACF,KAAK,KACH5d,KAAK2f,YAAYC,MAAM,yCACvB,MACF,KAAK,KAML,KAAK,KACH5f,KAAKwqC,kBAAkBsL,eAAiB,UACxC,MALF,KAAK,KACH91C,KAAK2f,YAAYC,MAAM,yCACvB,MAIF,KAAK,GACH5f,KAAK6wB,aAAa8E,gBAAA,EAClB,MACF,KAAK,KACH31B,KAAK+vC,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEH/vC,KAAKwQ,eAAe8M,QAAQ04B,uBACH,OAArBxvC,EAAOimC,OAAOhmC,IAChBzG,KAAK+vC,gBAEP/vC,KAAK6wB,aAAapL,qBAAA,EAClBzlB,KAAKurC,sBAAsB92B,KAAK,EAAGzU,KAAKwQ,eAAenL,KAAO,GAC9DrF,KAAK0rC,wBAAwBj3B,OAC7B,MACF,KAAK,KACHzU,KAAK6wB,aAAa3iB,gBAAgBC,oBAAA,EAIxC,OAAO,CACT,CAmCOgiC,WAAAA,CAAY3pC,EAAiBC,GAWlC,MAAMsB,EAAK/H,KAAK6wB,aAAa3iB,iBACrB6W,eAAgB3c,EAAe0tC,eAAgBluC,GAAkB5H,KAAKwqC,kBACxEviC,EAAKjI,KAAK6wB,cACVvT,QAAE7U,EAAOxB,KAAE0B,GAAS3I,KAAKwQ,gBACzB+M,OAAE3U,EAAMub,IAAE3b,GAAQC,EAClBI,EAAO7I,KAAKoV,gBAAgBhH,WAM5BtF,EAAOtC,GAAsBA,EAAQ,EAAQ,EAE7C0R,EAAI1R,EAAOimC,OAAO,GAExB,OARWt0B,EASaD,EATFE,EAQlB3R,EACQ,IAANyR,EAAqB,EACf,IAANA,EAAqBpP,EAAIb,EAAG8rC,MAAMC,YAC5B,KAAN97B,EAAsB,EAChB,KAANA,EAAsBpP,EAAID,EAAK3D,YACvB,EAGJ,IAANgT,EAAqBpP,EAAIf,EAAGmd,uBACtB,IAANhN,EAAqBrP,EAAKinC,cAAc/G,YAAwB,KAATpgC,EAAc,EAAmB,MAATA,EAAe,EAAQ,EAAoB,EACpH,IAANuP,EAAqBpP,EAAIf,EAAG+hB,QACtB,IAAN5R,EAAqBpP,EAAIf,EAAG+rC,YACtB,IAAN57B,EAAqB,EACf,IAANA,EAAqBpP,EAAsB,QAAlBV,GACnB,KAAN8P,EAAsBpP,EAAID,EAAKvD,aACzB,KAAN4S,EAAsBpP,GAAKb,EAAG0tB,gBACxB,KAANzd,EAAsBpP,EAAIf,EAAG8sC,mBACvB,KAAN38B,EAAsBpP,EAAIf,EAAG8tC,mBACvB,KAAN39B,EAAsB,EAChB,MAANA,EAAwBpP,EAAsB,UAAlBV,GACtB,OAAN8P,EAAwBpP,EAAsB,SAAlBV,GACtB,OAAN8P,EAAwBpP,EAAsB,QAAlBV,GACtB,OAAN8P,EAAwBpP,EAAIf,EAAG6V,WACzB,OAAN1F,EAAwB,EAClB,OAANA,EAAwBpP,EAAsB,QAAlBlB,GACtB,OAANsQ,EAAwB,EAClB,OAANA,EAAwBpP,EAAsB,eAAlBlB,GACtB,OAANsQ,EAAwB,EAClB,KAANA,GAAkB,OAANA,GAAoB,OAANA,EAAwBpP,EAAIF,IAAWJ,GAC3D,OAAN0P,EAAwBpP,EAAIf,EAAGoG,oBACvB,EArCVlG,EAAGqG,iBAAiB,GAAG/F,EAAAsU,GAAGC,OAAOrW,EAAO,GAAK,MAAM0R,KAAKC,QAAA,EADhD,IAACD,EAAWC,CAuCxB,CAKQ69B,gBAAAA,CAAiBzvC,EAAeC,EAAcsB,EAAYK,EAAYR,GAS5E,OARa,IAATnB,GACFD,GAAS,SACTA,IAAS,SACTA,GAAS2R,EAAAge,cAAc+f,aAAa,CAACnuC,EAAIK,EAAIR,KAC3B,IAATnB,IACTD,IAAS,SACTA,GAAS,SAA2B,IAALuB,GAE1BvB,CACT,CAMQ2vC,aAAAA,CAAc3vC,EAAiBC,EAAasB,GAKlD,MAAMK,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG9B,IAAIR,EAAS,EAGTW,EAAU,EAEd,EAAG,CAED,GADAH,EAAKG,EAAUX,GAAUpB,EAAOimC,OAAOhmC,EAAM8B,GACzC/B,EAAO4vC,aAAa3vC,EAAM8B,GAAU,CACtC,MAAMR,EAAYvB,EAAO6vC,aAAa5vC,EAAM8B,GAC5C,IAAIN,EAAI,EACR,GACkB,IAAZG,EAAK,KACPR,EAAS,GAEXQ,EAAKG,EAAUN,EAAI,EAAIL,GAAUG,EAAUE,WAClCA,EAAIF,EAAUmC,QAAUjC,EAAIM,EAAU,EAAIX,EAASQ,EAAK8B,QACnE,K,CAGF,GAAiB,IAAZ9B,EAAK,IAAYG,EAAUX,GAAU,GACxB,IAAZQ,EAAK,IAAYG,EAAUX,GAAU,EACzC,MAGEQ,EAAK,KACPR,EAAS,E,SAEFW,EAAU9B,EAAMD,EAAO0D,QAAU3B,EAAUX,EAASQ,EAAK8B,QAGpE,IAAK,IAAI1D,EAAI,EAAGA,EAAI4B,EAAK8B,SAAU1D,GAChB,IAAb4B,EAAK5B,KACP4B,EAAK5B,GAAK,GAKd,OAAQ4B,EAAK,IACX,KAAK,GACHL,EAAKiN,GAAKhV,KAAKi2C,iBAAiBluC,EAAKiN,GAAI5M,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHL,EAAKytB,GAAKx1B,KAAKi2C,iBAAiBluC,EAAKytB,GAAIptB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHL,EAAK6N,SAAW7N,EAAK6N,SAASwuB,QAC9Br8B,EAAK6N,SAAS0gC,eAAiBt2C,KAAKi2C,iBAAiBluC,EAAK6N,SAAS0gC,eAAgBluC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvH,OAAOG,CACT,CAWQguC,iBAAAA,CAAkB/vC,EAAeC,GAGvCA,EAAKmP,SAAWnP,EAAKmP,SAASwuB,WAGxB59B,GAASA,EAAQ,KACrBA,EAAQ,GAEVC,EAAKmP,SAASmgB,eAAiBvvB,EAC/BC,EAAKuO,IAAM,UAGG,IAAVxO,IACFC,EAAKuO,KAAM,WAIbvO,EAAK+vC,gBACP,CAEQC,YAAAA,CAAajwC,GACnBA,EAAKwO,GAAKxM,EAAAyf,kBAAkBjT,GAC5BxO,EAAKgvB,GAAKhtB,EAAAyf,kBAAkBuN,GAC5BhvB,EAAKoP,SAAWpP,EAAKoP,SAASwuB,QAG9B59B,EAAKoP,SAASmgB,eAAiB,EAC/BvvB,EAAKoP,SAAS0gC,iBAAkB,SAChC9vC,EAAKgwC,gBACP,CAuFOjH,cAAAA,CAAe/oC,GAEpB,GAAsB,IAAlBA,EAAO0D,QAAqC,IAArB1D,EAAOimC,OAAO,GAEvC,OADAzsC,KAAKy2C,aAAaz2C,KAAKsqC,eAAA,EAIzB,MAAM7jC,EAAID,EAAO0D,OACjB,IAAInC,EACJ,MAAMK,EAAOpI,KAAKsqC,aAElB,IAAK,IAAI1iC,EAAI,EAAGA,EAAInB,EAAGmB,IACrBG,EAAIvB,EAAOimC,OAAO7kC,GACdG,GAAK,IAAMA,GAAK,IAElBK,EAAK4M,KAAM,SACX5M,EAAK4M,IAAM,SAAqBjN,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBK,EAAKotB,KAAM,SACXptB,EAAKotB,IAAM,SAAqBztB,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBK,EAAK4M,KAAM,SACX5M,EAAK4M,IAAM,SAAqBjN,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1BK,EAAKotB,KAAM,SACXptB,EAAKotB,IAAM,SAAqBztB,EAAI,KACrB,IAANA,EAET/H,KAAKy2C,aAAaruC,GACH,IAANL,EAETK,EAAK4M,IAAM,UACI,IAANjN,EAETK,EAAKotB,IAAM,SACI,IAANztB,GAETK,EAAK4M,IAAM,UACXhV,KAAKu2C,kBAAkB/vC,EAAO4vC,aAAaxuC,GAAKpB,EAAO6vC,aAAazuC,GAAI,GAAK,EAAuBQ,IACrF,IAANL,EAETK,EAAK4M,IAAM,UACI,IAANjN,EAGTK,EAAK4M,IAAM,SACI,IAANjN,EAETK,EAAK4M,IAAM,WACI,IAANjN,EAETK,EAAK4M,IAAM,WACI,IAANjN,EAETK,EAAKotB,IAAM,UACI,KAANztB,EAET/H,KAAKu2C,kBAAkB,EAAuBnuC,GAC/B,KAANL,GAETK,EAAK4M,KAAM,UACX5M,EAAKotB,KAAM,WACI,KAANztB,EAETK,EAAKotB,KAAM,SACI,KAANztB,GAETK,EAAK4M,KAAM,UACXhV,KAAKu2C,kBAAkB,EAAqBnuC,IAC7B,KAANL,EAETK,EAAK4M,KAAM,UACI,KAANjN,EAETK,EAAK4M,KAAM,SACI,KAANjN,EAETK,EAAK4M,KAAM,WACI,KAANjN,EAETK,EAAK4M,IAAM,WACI,KAANjN,GAETK,EAAK4M,KAAM,SACX5M,EAAK4M,IAA6B,SAAvBxM,EAAAyf,kBAAkBjT,IACd,KAANjN,GAETK,EAAKotB,KAAM,SACXptB,EAAKotB,IAA6B,SAAvBhtB,EAAAyf,kBAAkBuN,IACd,KAANztB,GAAkB,KAANA,GAAkB,KAANA,EAEjCH,GAAK5H,KAAKm2C,cAAc3vC,EAAQoB,EAAGQ,GACpB,KAANL,EAETK,EAAKotB,IAAM,WACI,KAANztB,EAETK,EAAKotB,KAAM,WACI,KAANztB,GACTK,EAAKwN,SAAWxN,EAAKwN,SAASwuB,QAC9Bh8B,EAAKwN,SAAS0gC,gBAAkB,EAChCluC,EAAKouC,kBACU,MAANzuC,GAETK,EAAK4M,KAAM,SACX5M,EAAK4M,IAA6B,SAAvBxM,EAAAyf,kBAAkBjT,GAC7B5M,EAAKotB,KAAM,SACXptB,EAAKotB,IAA6B,SAAvBhtB,EAAAyf,kBAAkBuN,IAE7Bx1B,KAAK2f,YAAYC,MAAM,6BAA8B7X,GAGzD,OAAO,CACT,CA2BOynC,YAAAA,CAAahpC,GAClB,OAAQA,EAAOimC,OAAO,IACpB,KAAK,EAEHzsC,KAAK6wB,aAAaviB,iBAAiB,GAAG/F,EAAAsU,GAAGC,UACzC,MACF,KAAK,EAEH,MAAMtW,EAAIxG,KAAKkqB,cAAc7X,EAAI,EAC3B5L,EAAIzG,KAAKkqB,cAAc9X,EAAI,EACjCpS,KAAK6wB,aAAaviB,iBAAiB,GAAG/F,EAAAsU,GAAGC,OAAOtW,KAAKC,MAGzD,OAAO,CACT,CAGOgpC,mBAAAA,CAAoBjpC,GAGzB,GACO,IADCA,EAAOimC,OAAO,GACpB,CAEE,MAAMjmC,EAAIxG,KAAKkqB,cAAc7X,EAAI,EAC3B5L,EAAIzG,KAAKkqB,cAAc9X,EAAI,EACjCpS,KAAK6wB,aAAaviB,iBAAiB,GAAG/F,EAAAsU,GAAGC,QAAQtW,KAAKC,KACjD,CAkBT,OAAO,CACT,CAsBOipC,SAAAA,CAAUlpC,GAkBf,OAjBAxG,KAAK6wB,aAAa8E,gBAAA,EAClB31B,KAAK0rC,wBAAwBj3B,OAC7BzU,KAAKkqB,cAAcY,UAAY,EAC/B9qB,KAAKkqB,cAAckd,aAAepnC,KAAKwQ,eAAenL,KAAO,EAC7DrF,KAAKsqC,aAAe9hC,EAAAyf,kBAAkBmc,QACtCpkC,KAAK6wB,aAAa/U,QAClB9b,KAAK0mC,gBAAgB5qB,QAGrB9b,KAAKkqB,cAAcwsB,OAAS,EAC5B12C,KAAKkqB,cAAcysB,OAAS32C,KAAKkqB,cAAc7L,MAC/Cre,KAAKkqB,cAAc0sB,iBAAiB5hC,GAAKhV,KAAKsqC,aAAat1B,GAC3DhV,KAAKkqB,cAAc0sB,iBAAiBphB,GAAKx1B,KAAKsqC,aAAa9U,GAC3Dx1B,KAAKkqB,cAAc2sB,aAAe72C,KAAK0mC,gBAAgBmN,QAGvD7zC,KAAK6wB,aAAa3iB,gBAAgB4b,QAAA,GAAS,CAE7C,CAqBO6lB,cAAAA,CAAenpC,GACpB,MAAMC,EAAQD,EAAOimC,OAAO,IAAM,EAClC,OAAQhmC,GACN,KAAK,EACL,KAAK,EACHzG,KAAKoV,gBAAgBvT,QAAQ0D,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACHvF,KAAKoV,gBAAgBvT,QAAQ0D,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACHvF,KAAKoV,gBAAgBvT,QAAQ0D,YAAc,MAG/C,MAAMwC,EAAatB,EAAQ,GAAM,EAEjC,OADAzG,KAAKoV,gBAAgBvT,QAAQyD,YAAcyC,GAAA,CAE7C,CASO6nC,eAAAA,CAAgBppC,GACrB,MAAMC,EAAMD,EAAOimC,OAAO,IAAM,EAChC,IAAI1kC,EAWJ,OATIvB,EAAO0D,OAAS,IAAMnC,EAASvB,EAAOimC,OAAO,IAAMzsC,KAAKwQ,eAAenL,MAAmB,IAAX0C,KACjFA,EAAS/H,KAAKwQ,eAAenL,MAG3B0C,EAAStB,IACXzG,KAAKkqB,cAAcY,UAAYrkB,EAAM,EACrCzG,KAAKkqB,cAAckd,aAAer/B,EAAS,EAC3C/H,KAAKg1C,WAAW,EAAG,MAGvB,CAgCOlF,aAAAA,CAActpC,GACnB,IAAKkS,EAAoBlS,EAAOimC,OAAO,GAAIzsC,KAAKoV,gBAAgBhH,WAAW0hC,eACzE,OAAO,EAET,MAAMrpC,EAAUD,EAAO0D,OAAS,EAAK1D,EAAOimC,OAAO,GAAK,EACxD,OAAQjmC,EAAOimC,OAAO,IACpB,KAAK,GACY,IAAXhmC,GACFzG,KAAK2rC,+BAA+Bl3B,KAAKpC,EAAyBiW,qBAEpE,MACF,KAAK,GACHtoB,KAAK2rC,+BAA+Bl3B,KAAKpC,EAAyBmW,sBAClE,MACF,KAAK,GACCxoB,KAAKwQ,gBACPxQ,KAAK6wB,aAAaviB,iBAAiB,GAAG/F,EAAAsU,GAAGC,SAAS9c,KAAKwQ,eAAenL,QAAQrF,KAAKwQ,eAAevJ,SAEpG,MACF,KAAK,GACY,IAAXR,GAA2B,IAAXA,IAClBzG,KAAKmrC,kBAAkB1+B,KAAKzM,KAAKirC,cAC7BjrC,KAAKmrC,kBAAkBjhC,OA7rFjB,IA8rFRlK,KAAKmrC,kBAAkBh/B,SAGZ,IAAX1F,GAA2B,IAAXA,IAClBzG,KAAKorC,eAAe3+B,KAAKzM,KAAKkrC,WAC1BlrC,KAAKorC,eAAelhC,OAnsFd,IAosFRlK,KAAKorC,eAAej/B,SAGxB,MACF,KAAK,GACY,IAAX1F,GAA2B,IAAXA,GACdzG,KAAKmrC,kBAAkBjhC,QACzBlK,KAAK2xC,SAAS3xC,KAAKmrC,kBAAkB/9B,OAG1B,IAAX3G,GAA2B,IAAXA,GACdzG,KAAKorC,eAAelhC,QACtBlK,KAAK4xC,YAAY5xC,KAAKorC,eAAeh+B,OAK7C,OAAO,CACT,CAWOyiC,UAAAA,CAAWrpC,GAMhB,OALAxG,KAAKkqB,cAAcwsB,OAAS12C,KAAKkqB,cAAc9X,EAC/CpS,KAAKkqB,cAAcysB,OAAS32C,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,EAC1ErS,KAAKkqB,cAAc0sB,iBAAiB5hC,GAAKhV,KAAKsqC,aAAat1B,GAC3DhV,KAAKkqB,cAAc0sB,iBAAiBphB,GAAKx1B,KAAKsqC,aAAa9U,GAC3Dx1B,KAAKkqB,cAAc2sB,aAAe72C,KAAK0mC,gBAAgBmN,SAAA,CAEzD,CAWO9D,aAAAA,CAAcvpC,GAUnB,OATAxG,KAAKkqB,cAAc9X,EAAIpS,KAAKkqB,cAAcwsB,QAAU,EACpD12C,KAAKkqB,cAAc7X,EAAIhK,KAAKC,IAAItI,KAAKkqB,cAAcysB,OAAS32C,KAAKkqB,cAAc7L,MAAO,GACtFre,KAAKsqC,aAAat1B,GAAKhV,KAAKkqB,cAAc0sB,iBAAiB5hC,GAC3DhV,KAAKsqC,aAAa9U,GAAKx1B,KAAKkqB,cAAc0sB,iBAAiBphB,GAC3Dx1B,KAAK0mC,gBAAgBmN,QAAW7zC,KAAa82C,cACzC92C,KAAKkqB,cAAc2sB,eACrB72C,KAAK0mC,gBAAgBmN,QAAU7zC,KAAKkqB,cAAc2sB,cAEpD72C,KAAK80C,mBAAA,CAEP,CAcOnD,QAAAA,CAASnrC,GAGd,OAFAxG,KAAKirC,aAAezkC,EACpBxG,KAAK4a,eAAenG,KAAKjO,IAAA,CAE3B,CAMOorC,WAAAA,CAAYprC,GAEjB,OADAxG,KAAKkrC,UAAY1kC,GAAA,CAEnB,CAWOqrC,uBAAAA,CAAwBrrC,GAC7B,MAAMC,EAAqB,GACrBsB,EAAQvB,EAAKitC,MAAM,KACzB,KAAO1rC,EAAMmC,OAAS,GAAG,CACvB,MAAM1D,EAAMuB,EAAMoE,QACZ/D,EAAOL,EAAMoE,QACnB,GAAI,QAAQ4qC,KAAKvwC,GAAM,CACrB,MAAMuB,EAAQG,SAAS1B,GACvB,GAAIsS,EAAkB/Q,GACpB,GAAa,MAATK,EACF3B,EAAMgG,KAAK,CAAEjI,KAAM,EAAyB+X,MAAAxU,QACvC,CACL,MAAMvB,GAAA,EAAQ+R,EAAAy+B,YAAW5uC,GACrB5B,GACFC,EAAMgG,KAAK,CAAEjI,KAAM,EAAsB+X,MAAAxU,EAAOyU,MAAAhW,G,GAS1D,OAHIC,EAAMyD,QACRlK,KAAK8rC,SAASr3B,KAAKhO,IAAA,CAGvB,CAmBOqrC,YAAAA,CAAatrC,GAClB,MAAMC,EAAOD,EAAKitC,MAAM,KACxB,QAAIhtC,EAAKyD,OAAS,KAGdzD,EAAK,GACAzG,KAAKi3C,iBAAiBxwC,EAAK,GAAIA,EAAK,KAEzCA,EAAK,IAGFzG,KAAKk3C,mBACd,CAEQD,gBAAAA,CAAiBzwC,EAAgBC,GAEnCzG,KAAKszC,qBACPtzC,KAAKk3C,mBAEP,MAAMnvC,EAAevB,EAAOitC,MAAM,KAClC,IAAIrrC,EACJ,MAAMR,EAAeG,EAAaovC,WAAU3wC,GAAKA,EAAE4wC,WAAW,SAO9D,OANsB,IAAlBxvC,IACFQ,EAAKL,EAAaH,GAAcy4B,MAAM,SAAM,GAE9CrgC,KAAKsqC,aAAa10B,SAAW5V,KAAKsqC,aAAa10B,SAASwuB,QACxDpkC,KAAKsqC,aAAa10B,SAASC,MAAQ7V,KAAKqV,gBAAgBgiC,aAAa,CAAEvc,GAAA1yB,EAAI2N,IAAAtP,IAC3EzG,KAAKsqC,aAAakM,kBAAA,CAEpB,CAEQU,gBAAAA,GAIN,OAHAl3C,KAAKsqC,aAAa10B,SAAW5V,KAAKsqC,aAAa10B,SAASwuB,QACxDpkC,KAAKsqC,aAAa10B,SAASC,MAAQ,EACnC7V,KAAKsqC,aAAakM,kBAAA,CAEpB,CAUQc,wBAAAA,CAAyB9wC,EAAcC,GAC7C,MAAMsB,EAAQvB,EAAKitC,MAAM,KACzB,IAAK,IAAIjtC,EAAI,EAAGA,EAAIuB,EAAMmC,UACpBzD,GAAUzG,KAAKosC,eAAeliC,UADA1D,IAAKC,EAEvC,GAAiB,MAAbsB,EAAMvB,GACRxG,KAAK8rC,SAASr3B,KAAK,CAAC,CAAEjQ,KAAM,EAAyB+X,MAAOvc,KAAKosC,eAAe3lC,UAC3E,CACL,MAAM2B,GAAA,EAAQmQ,EAAAy+B,YAAWjvC,EAAMvB,IAC3B4B,GACFpI,KAAK8rC,SAASr3B,KAAK,CAAC,CAAEjQ,KAAM,EAAsB+X,MAAOvc,KAAKosC,eAAe3lC,GAAS+V,MAAApU,I,CAI5F,OAAO,CACT,CAwBO2pC,kBAAAA,CAAmBvrC,GACxB,OAAOxG,KAAKs3C,yBAAyB9wC,EAAM,EAC7C,CAOOwrC,kBAAAA,CAAmBxrC,GACxB,OAAOxG,KAAKs3C,yBAAyB9wC,EAAM,EAC7C,CAOOyrC,sBAAAA,CAAuBzrC,GAC5B,OAAOxG,KAAKs3C,yBAAyB9wC,EAAM,EAC7C,CAUO0rC,mBAAAA,CAAoB1rC,GACzB,IAAKA,EAEH,OADAxG,KAAK8rC,SAASr3B,KAAK,CAAC,CAAEjQ,KAAM,QAG9B,MAAMiC,EAAqB,GACrBsB,EAAQvB,EAAKitC,MAAM,KACzB,IAAK,IAAIjtC,EAAI,EAAGA,EAAIuB,EAAMmC,SAAU1D,EAClC,GAAI,QAAQuwC,KAAKhvC,EAAMvB,IAAK,CAC1B,MAAM4B,EAAQF,SAASH,EAAMvB,IACzBsS,EAAkB1Q,IACpB3B,EAAMgG,KAAK,CAAEjI,KAAM,EAA0B+X,MAAAnU,G,CAOnD,OAHI3B,EAAMyD,QACRlK,KAAK8rC,SAASr3B,KAAKhO,IAAA,CAGvB,CAOO0rC,cAAAA,CAAe3rC,GAEpB,OADAxG,KAAK8rC,SAASr3B,KAAK,CAAC,CAAEjQ,KAAM,EAA0B+X,MAAO,SAE/D,CAOO61B,cAAAA,CAAe5rC,GAEpB,OADAxG,KAAK8rC,SAASr3B,KAAK,CAAC,CAAEjQ,KAAM,EAA0B+X,MAAO,SAE/D,CAOO81B,kBAAAA,CAAmB7rC,GAExB,OADAxG,KAAK8rC,SAASr3B,KAAK,CAAC,CAAEjQ,KAAM,EAA0B+X,MAAO,SAE/D,CAWOg1B,QAAAA,GAGL,OAFAvxC,KAAKkqB,cAAc9X,EAAI,EACvBpS,KAAKuc,SAAA,CAEP,CAOOg2B,qBAAAA,GAIL,OAHAvyC,KAAK2f,YAAYC,MAAM,6CACvB5f,KAAK6wB,aAAa3iB,gBAAgB2nC,mBAAA,EAClC71C,KAAK0rC,wBAAwBj3B,QAAA,CAE/B,CAOO+9B,iBAAAA,GAIL,OAHAxyC,KAAK2f,YAAYC,MAAM,oCACvB5f,KAAK6wB,aAAa3iB,gBAAgB2nC,mBAAA,EAClC71C,KAAK0rC,wBAAwBj3B,QAAA,CAE/B,CAQOk+B,oBAAAA,GAGL,OAFA3yC,KAAK0mC,gBAAgBgM,UAAU,GAC/B1yC,KAAK0mC,gBAAgBiP,YAAY,EAAG1tC,EAAA2tC,kBAAA,CAEtC,CAkBO/C,aAAAA,CAAcrsC,GACnB,OAA8B,IAA1BA,EAAe0D,QACjBlK,KAAK2yC,wBAAA,IAGmB,MAAtBnsC,EAAe,IAGnBxG,KAAK0mC,gBAAgBiP,YAAYn9B,EAAOhS,EAAe,IAAKyB,EAAA2qC,SAASpsC,EAAe,KAAOyB,EAAA2tC,kBAAA,EAE7F,CAWOr5B,KAAAA,GAUL,OATAvc,KAAK80C,kBACL90C,KAAKkqB,cAAc7X,IACfrS,KAAKkqB,cAAc7X,IAAMrS,KAAKkqB,cAAckd,aAAe,GAC7DpnC,KAAKkqB,cAAc7X,IACnBrS,KAAKwQ,eAAeo3B,OAAO5nC,KAAKs0C,mBACvBt0C,KAAKkqB,cAAc7X,GAAKrS,KAAKwQ,eAAenL,OACrDrF,KAAKkqB,cAAc7X,EAAIrS,KAAKwQ,eAAenL,KAAO,GAEpDrF,KAAK80C,mBAAA,CAEP,CAYOrD,MAAAA,GAEL,OADAzxC,KAAKkqB,cAAcgrB,KAAKl1C,KAAKkqB,cAAc9X,IAAA,GAAK,CAElD,CAWOkgC,YAAAA,GAEL,GADAtyC,KAAK80C,kBACD90C,KAAKkqB,cAAc7X,IAAMrS,KAAKkqB,cAAcY,UAAW,CAIzD,MAAMtkB,EAAqBxG,KAAKkqB,cAAckd,aAAepnC,KAAKkqB,cAAcY,UAChF9qB,KAAKkqB,cAActd,MAAMs3B,cAAclkC,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,EAAG7L,EAAoB,GAC5GxG,KAAKkqB,cAActd,MAAMoD,IAAIhQ,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,EAAGrS,KAAKkqB,cAAclC,aAAahoB,KAAKs0C,mBACnHt0C,KAAKqsC,iBAAiBlF,eAAennC,KAAKkqB,cAAcY,UAAW9qB,KAAKkqB,cAAckd,a,MAEtFpnC,KAAKkqB,cAAc7X,IACnBrS,KAAK80C,kBAEP,OAAO,CACT,CAOOrC,SAAAA,GAGL,OAFAzyC,KAAK0qC,QAAQ5uB,QACb9b,KAAKwrC,gBAAgB/2B,QAAA,CAEvB,CAEOqH,KAAAA,GACL9b,KAAKsqC,aAAe9hC,EAAAyf,kBAAkBmc,QACtCpkC,KAAKqrC,uBAAyB7iC,EAAAyf,kBAAkBmc,OAClD,CAKQkQ,cAAAA,GAGN,OAFAt0C,KAAKqrC,uBAAuB7V,KAAM,SAClCx1B,KAAKqrC,uBAAuB7V,IAA6B,SAAvBx1B,KAAKsqC,aAAa9U,GAC7Cx1B,KAAKqrC,sBACd,CAYOqH,SAAAA,CAAUlsC,GAEf,OADAxG,KAAK0mC,gBAAgBgM,UAAUlsC,IAAA,CAEjC,CAUOssC,sBAAAA,GAEL,MAAMtsC,EAAO,IAAI0R,EAAA3C,SACjB/O,EAAK+zB,QAAU,GAAK,GAAsB,IAAItT,WAAW,GACzDzgB,EAAKwO,GAAKhV,KAAKsqC,aAAat1B,GAC5BxO,EAAKgvB,GAAKx1B,KAAKsqC,aAAa9U,GAG5Bx1B,KAAKg1C,WAAW,EAAG,GACnB,IAAK,IAAIvuC,EAAU,EAAGA,EAAUzG,KAAKwQ,eAAenL,OAAQoB,EAAS,CACnE,MAAMsB,EAAM/H,KAAKkqB,cAAc7L,MAAQre,KAAKkqB,cAAc7X,EAAI5L,EACxD2B,EAAOpI,KAAKkqB,cAActd,MAAMsD,IAAInI,GACtCK,IACFA,EAAK2wB,KAAKvyB,GACV4B,EAAK2jB,WAAA,E,CAKT,OAFA/rB,KAAKqsC,iBAAiBkL,eACtBv3C,KAAKg1C,WAAW,EAAG,KAErB,CA6BO/B,mBAAAA,CAAoBzsC,EAAcC,GACvC,MAMMsB,EAAI/H,KAAKwQ,eAAe7D,OACxBvE,EAAOpI,KAAKoV,gBAAgBhH,WAGlC,MAVU,CAAC5H,IACTxG,KAAK6wB,aAAaviB,iBAAiB,GAAG/F,EAAAsU,GAAGC,MAAMtW,IAAI+B,EAAAsU,GAAGC,UAAA,GAD9C,CAUG,OAATtW,EAAwB,OAAOxG,KAAKsqC,aAAakN,cAAgB,EAAI,MAC5D,OAAThxC,EAAwB,aACf,MAATA,EAAuB,OAAOuB,EAAE+iB,UAAY,KAAK/iB,EAAEq/B,aAAe,KAEzD,MAAT5gC,EAAuB,SACd,OAATA,EAAwB,OAPc,CAAEixC,MAAS,EAAG3jC,UAAa,EAAG4jC,IAAO,GAOrCtvC,EAAK7C,cAAgB6C,EAAK9C,YAAc,EAAI,OAC7E,OACX,CAEO6hC,cAAAA,CAAe3gC,EAAYC,GAChCzG,KAAKqsC,iBAAiBlF,eAAe3gC,EAAIC,EAC3C,EArsGFA,EAAAqgC,aAAAluB,EAktGA,IAAMC,EAAN,MAIEnX,WAAAA,CACmC8E,GAAA,KAAAgK,eAAAhK,EAEjCxG,KAAK0zC,YACP,CAEOA,UAAAA,GACL1zC,KAAKgL,MAAQhL,KAAKwQ,eAAe7D,OAAO0F,EACxCrS,KAAKiL,IAAMjL,KAAKwQ,eAAe7D,OAAO0F,CACxC,CAEO4hC,SAAAA,CAAUztC,GACXA,EAAIxG,KAAKgL,MACXhL,KAAKgL,MAAQxE,EACJA,EAAIxG,KAAKiL,MAClBjL,KAAKiL,IAAMzE,EAEf,CAEO2gC,cAAAA,CAAe3gC,EAAYC,GAC5BD,EAAKC,IACPkS,EAAQnS,EACRA,EAAKC,EACLA,EAAKkS,GAEHnS,EAAKxG,KAAKgL,QACZhL,KAAKgL,MAAQxE,GAEXC,EAAKzG,KAAKiL,MACZjL,KAAKiL,IAAMxE,EAEf,CAEO8wC,YAAAA,GACLv3C,KAAKmnC,eAAe,EAAGnnC,KAAKwQ,eAAenL,KAAO,EACpD,GAGF,SAASyT,EAAkBtS,GACzB,OAAO,GAAKA,GAASA,EAAQ,GAC/B,CA5CMqS,EAAezQ,EAAA,CAKhBR,EAAA,EAAAwQ,EAAAnD,iBALC4D,E,cCvuGN,SAAgB9Q,EAAavB,GAC3B,IAAK,MAAMC,KAAKD,EACdC,EAAEvD,UAEJsD,EAAY0D,OAAS,CACvB,C,mJAzFAzD,EAAAuC,WAAA,MAAAtH,WAAAA,GACY,KAAAi2C,aAA8B,GAC9B,KAAA1sB,aAAA,CAkCZ,CA7BS/nB,OAAAA,GACLlD,KAAKirB,aAAA,EACL,IAAK,MAAMzkB,KAAKxG,KAAK23C,aACnBnxC,EAAEtD,UAEJlD,KAAK23C,aAAaztC,OAAS,CAC7B,CAOOI,QAAAA,CAAgC9D,GAErC,OADAxG,KAAK23C,aAAalrC,KAAKjG,GAChBA,CACT,CAOOoxC,UAAAA,CAAkCpxC,GACvC,MAAMC,EAAQzG,KAAK23C,aAAanmC,QAAQhL,IACzB,IAAXC,GACFzG,KAAK23C,aAAalmC,OAAOhL,EAAO,EAEpC,GAGFA,EAAA4T,kBAAA,MAAA3Y,WAAAA,GAEU,KAAAupB,aAAA,CAgCV,CA3BE,SAAA1qB,GACE,OAAOP,KAAKirB,iBAAA,EAA0BjrB,KAAK63C,MAC7C,CAKA,SAAAt3C,CAAiBiG,G,MACXxG,KAAKirB,aAAezkB,IAAUxG,KAAK63C,SAG5B,QAAXpxC,EAAAzG,KAAK63C,cAAA,IAAMpxC,GAAAA,EAAEvD,UACblD,KAAK63C,OAASrxC,EAChB,CAKOY,KAAAA,GACLpH,KAAKO,WAAA,CACP,CAEO2C,OAAAA,G,MACLlD,KAAKirB,aAAA,EACM,QAAXzkB,EAAAxG,KAAK63C,cAAA,IAAMrxC,GAAAA,EAAEtD,UACblD,KAAK63C,YAAA,CACP,GAMFpxC,EAAAwF,aAAA,SAA6BzF,GAC3B,MAAO,CAAEtD,QAASsD,EACpB,EAKAC,EAAAkN,aAAA5L,EAUAtB,EAAA2K,0BAAA,SAA0C5K,GACxC,MAAO,CAAEtD,QAASA,IAAM6E,EAAavB,GACvC,CAAC,E,8FCtGD,MAAauB,EAAbrG,WAAAA,GACU,KAAAo2C,MAA8F,CAAC,CAgBzG,CAdS9nC,GAAAA,CAAIxJ,EAAeC,EAAiBsB,GACpC/H,KAAK83C,MAAMtxC,KACdxG,KAAK83C,MAAMtxC,GAAS,CAAC,GAEvBxG,KAAK83C,MAAMtxC,GAA2BC,GAAUsB,CAClD,CAEOmI,GAAAA,CAAI1J,EAAeC,GACxB,OAAOzG,KAAK83C,MAAMtxC,GAA4BxG,KAAK83C,MAAMtxC,GAA2BC,QAAA,CACtF,CAEOW,KAAAA,GACLpH,KAAK83C,MAAQ,CAAC,CAChB,EAhBFrxC,EAAAoJ,UAAA9H,EAmBAtB,EAAAsxC,WAAA,MAAAr2C,WAAAA,GACU,KAAAo2C,MAAwE,IAAI/vC,CAgBtF,CAdSiI,GAAAA,CAAIxJ,EAAeC,EAAiB2B,EAAeR,EAAiBW,GACpEvI,KAAK83C,MAAM5nC,IAAI1J,EAAOC,IACzBzG,KAAK83C,MAAM9nC,IAAIxJ,EAAOC,EAAQ,IAAIsB,GAEpC/H,KAAK83C,MAAM5nC,IAAI1J,EAAOC,GAASuJ,IAAI5H,EAAOR,EAAQW,EACpD,CAEO2H,GAAAA,CAAI1J,EAAeC,EAAiBsB,EAAeK,G,MACxD,OAAoC,QAA7BR,EAAA5H,KAAK83C,MAAM5nC,IAAI1J,EAAOC,UAAA,IAAOmB,OAAA,EAAAA,EAAEsI,IAAInI,EAAOK,EACnD,CAEOhB,KAAAA,GACLpH,KAAK83C,MAAM1wC,OACb,EAAC,E,sMCzBUX,EAAA89B,OAA+B,oBAAdyT,UAC9B,MAAMjwC,EAAatB,EAAM89B,OAAI,OAASyT,UAAUC,UAC1C7vC,EAAY3B,EAAM89B,OAAI,OAASyT,UAAUE,SAElCzxC,EAAAoY,UAAY9W,EAAUmO,SAAS,WAC/BzP,EAAA2yB,aAAerxB,EAAUmO,SAAS,QAClCzP,EAAA0xC,SAAW,iCAAiC3rC,KAAKzE,GAC9DtB,EAAA2xC,iBAAA,WACE,IAAK3xC,EAAA0xC,SACH,OAAO,EAET,MAAM3xC,EAAeuB,EAAU48B,MAAM,kBACrC,OAAqB,OAAjBn+B,GAAyBA,EAAa0D,OAAS,EAC1C,EAEFhC,SAAS1B,EAAa,GAC/B,EAKaC,EAAA6F,MAAQ,CAAC,YAAa,WAAY,SAAU,UAAU4J,SAAS9N,GAC/D3B,EAAA4xC,OAAsB,SAAbjwC,EACT3B,EAAA6xC,SAAwB,WAAblwC,EACX3B,EAAA4gB,UAAY,CAAC,UAAW,QAAS,QAAS,SAASnR,SAAS9N,GAC5D3B,EAAAwY,QAAU7W,EAASoJ,QAAQ,UAAY,EAEvC/K,EAAA2Z,WAAa,WAAW5T,KAAKzE,EAAA,E,kFCpC1C,IAAIA,EAAI,EAORtB,EAAA8xC,WAAA,MAGE72C,WAAAA,CACmB8E,GAAA,KAAAgyC,QAAAhyC,EAHF,KAAAi9B,OAAc,EAK/B,CAEOr8B,KAAAA,GACLpH,KAAKyjC,OAAOv5B,OAAS,CACvB,CAEOuuC,MAAAA,CAAOjyC,GACe,IAAvBxG,KAAKyjC,OAAOv5B,QAIhBnC,EAAI/H,KAAK04C,QAAQ14C,KAAKw4C,QAAQhyC,IAC9BxG,KAAKyjC,OAAOhyB,OAAO1J,EAAG,EAAGvB,IAJvBxG,KAAKyjC,OAAOh3B,KAAKjG,EAKrB,CAEOqnB,OAAOrnB,GACZ,GAA2B,IAAvBxG,KAAKyjC,OAAOv5B,OACd,OAAO,EAET,MAAMzD,EAAMzG,KAAKw4C,QAAQhyC,GACzB,QAAI,IAAAC,EACF,OAAO,EAGT,GADAsB,EAAI/H,KAAK04C,QAAQjyC,IACN,IAAPsB,EACF,OAAO,EAET,GAAI/H,KAAKw4C,QAAQx4C,KAAKyjC,OAAO17B,MAAQtB,EACnC,OAAO,EAET,GACE,GAAIzG,KAAKyjC,OAAO17B,KAAOvB,EAErB,OADAxG,KAAKyjC,OAAOhyB,OAAO1J,EAAG,cAGfA,EAAI/H,KAAKyjC,OAAOv5B,QAAUlK,KAAKw4C,QAAQx4C,KAAKyjC,OAAO17B,MAAQtB,GACtE,OAAO,CACT,CAEO,eAAAkyC,CAAgBnyC,GACrB,GAA2B,IAAvBxG,KAAKyjC,OAAOv5B,SAGhBnC,EAAI/H,KAAK04C,QAAQlyC,KACbuB,EAAI,GAAKA,GAAK/H,KAAKyjC,OAAOv5B,SAG1BlK,KAAKw4C,QAAQx4C,KAAKyjC,OAAO17B,MAAQvB,GAGrC,SACQxG,KAAKyjC,OAAO17B,WACTA,EAAI/H,KAAKyjC,OAAOv5B,QAAUlK,KAAKw4C,QAAQx4C,KAAKyjC,OAAO17B,MAAQvB,EACxE,CAEOoyC,YAAAA,CAAapyC,EAAaC,GAC/B,GAA2B,IAAvBzG,KAAKyjC,OAAOv5B,SAGhBnC,EAAI/H,KAAK04C,QAAQlyC,KACbuB,EAAI,GAAKA,GAAK/H,KAAKyjC,OAAOv5B,SAG1BlK,KAAKw4C,QAAQx4C,KAAKyjC,OAAO17B,MAAQvB,GAGrC,GACEC,EAASzG,KAAKyjC,OAAO17B,YACZA,EAAI/H,KAAKyjC,OAAOv5B,QAAUlK,KAAKw4C,QAAQx4C,KAAKyjC,OAAO17B,MAAQvB,EACxE,CAEOqyC,MAAAA,GAEL,MAAO,IAAI74C,KAAKyjC,QAAQoV,QAC1B,CAEQH,OAAAA,CAAQlyC,GACd,IAAIC,EAAM,EACNsB,EAAM/H,KAAKyjC,OAAOv5B,OAAS,EAC/B,KAAOnC,GAAOtB,GAAK,CACjB,IAAI2B,EAAO3B,EAAMsB,GAAQ,EACzB,MAAMH,EAAS5H,KAAKw4C,QAAQx4C,KAAKyjC,OAAOr7B,IACxC,GAAIR,EAASpB,EACXuB,EAAMK,EAAM,MACP,MAAIR,EAASpB,GAEb,CAEL,KAAO4B,EAAM,GAAKpI,KAAKw4C,QAAQx4C,KAAKyjC,OAAOr7B,EAAM,MAAQ5B,GACvD4B,IAEF,OAAOA,C,CANP3B,EAAM2B,EAAM,C,EAWhB,OAAO3B,CACT,EAAC,E,+HC/GH,MAAA2B,EAAAL,EAAA,MA2BA,MAAeH,EAAflG,WAAAA,GACU,KAAAo3C,OAAmC,GAEnC,KAAAC,GAAK,CAkEf,CA7DSC,OAAAA,CAAQxyC,GACbxG,KAAK84C,OAAOrsC,KAAKjG,GACjBxG,KAAKi5C,QACP,CAEOhc,KAAAA,GACL,KAAOj9B,KAAK+4C,GAAK/4C,KAAK84C,OAAO5uC,QACtBlK,KAAK84C,OAAO94C,KAAK+4C,OACpB/4C,KAAK+4C,KAGT/4C,KAAKoH,OACP,CAEOA,KAAAA,GACDpH,KAAKk5C,gBACPl5C,KAAKm5C,gBAAgBn5C,KAAKk5C,eAC1Bl5C,KAAKk5C,mBAAA,GAEPl5C,KAAK+4C,GAAK,EACV/4C,KAAK84C,OAAO5uC,OAAS,CACvB,CAEQ+uC,MAAAA,GACDj5C,KAAKk5C,gBACRl5C,KAAKk5C,cAAgBl5C,KAAKo5C,iBAAiBp5C,KAAKq5C,SAAS5uC,KAAKzK,OAElE,CAEQq5C,QAAAA,CAAS7yC,GACfxG,KAAKk5C,mBAAA,EACL,IAAIzyC,EAAe,EACfsB,EAAc,EACdK,EAAwB5B,EAAS8yC,gBACjC1xC,EAAoB,EACxB,KAAO5H,KAAK+4C,GAAK/4C,KAAK84C,OAAO5uC,QAAQ,CAanC,GAZAzD,EAAesiB,KAAKC,MACfhpB,KAAK84C,OAAO94C,KAAK+4C,OACpB/4C,KAAK+4C,KAKPtyC,EAAe4B,KAAKC,IAAI,EAAGygB,KAAKC,MAAQviB,GACxCsB,EAAcM,KAAKC,IAAI7B,EAAcsB,GAGrCH,EAAoBpB,EAAS8yC,gBACX,IAAdvxC,EAAoBH,EAOtB,OAJIQ,EAAwB3B,GAAgB,IAC1C/C,QAAQ6S,KAAK,4CAA4ClO,KAAK8c,IAAI9c,KAAKwiB,MAAMziB,EAAwB3B,cAEvGzG,KAAKi5C,SAGP7wC,EAAwBR,C,CAE1B5H,KAAKoH,OACP,EAQF,MAAamB,UAA0BX,EAC3BwxC,gBAAAA,CAAiB5yC,GACzB,OAAO9B,YAAW,IAAM8B,EAASxG,KAAKu5C,gBAAgB,MACxD,CAEUJ,eAAAA,CAAgB3yC,GACxBsiB,aAAatiB,EACf,CAEQ+yC,eAAAA,CAAgB/yC,GACtB,MAAMC,EAAMsiB,KAAKC,MAAQxiB,EACzB,MAAO,CACL8yC,cAAeA,IAAMjxC,KAAKC,IAAI,EAAG7B,EAAMsiB,KAAKC,OAEhD,EAdFviB,EAAA+yC,kBAAAjxC,EAoCa9B,EAAAgzC,eAAkBrxC,EAAAm8B,QAAU,wBAAyBxiC,OAnBlE,cAAoC6F,EACxBwxC,gBAAAA,CAAiB5yC,GACzB,OAAOkzC,oBAAoBlzC,EAC7B,CAEU2yC,eAAAA,CAAgB3yC,GACxBmzC,mBAAmBnzC,EACrB,GAYkG+B,EAMpG9B,EAAAm1B,kBAAA,MAGEl6B,WAAAA,GACE1B,KAAK45C,OAAS,IAAInzC,EAAAgzC,aACpB,CAEOzpC,GAAAA,CAAIxJ,GACTxG,KAAK45C,OAAOxyC,QACZpH,KAAK45C,OAAOZ,QAAQxyC,EACtB,CAEOy2B,KAAAA,GACLj9B,KAAK45C,OAAO3c,OACd,EAAC,E,uGC/JH,MAAA70B,EAAAL,EAAA,KAGAtB,EAAAgiC,8BAAA,SAA8CjiC,GAW5C,MAAMC,EAAOD,EAAcmG,OAAOC,MAAMsD,IAAI1J,EAAcmG,OAAO0R,MAAQ7X,EAAcmG,OAAO0F,EAAI,GAC5FtK,EAAW,MAAAtB,OAAA,EAAAA,EAAMyJ,IAAI1J,EAAcS,KAAO,GAE1CW,EAAWpB,EAAcmG,OAAOC,MAAMsD,IAAI1J,EAAcmG,OAAO0R,MAAQ7X,EAAcmG,OAAO0F,GAC9FzK,GAAYG,IACdH,EAASmkB,UAAahkB,EAASK,EAAAyxC,wBAA0BzxC,EAAAqsC,gBAAkB1sC,EAASK,EAAAyxC,wBAA0BzxC,EAAA0xC,qBAElH,CAAC,E,qGClBD,MAAa/xC,EAAbrG,WAAAA,GAsBS,KAAAsT,GAAK,EACL,KAAAwgB,GAAK,EACL,KAAA5f,SAA2B,IAAIxN,CAgGxC,CAvHS,iBAAAqU,CAAkBjW,GACvB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,EAEJ,CAEO,mBAAA0vC,CAAoB1vC,GACzB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,EACvG,CAEO49B,KAAAA,GACL,MAAM59B,EAAS,IAAIuB,EAInB,OAHAvB,EAAOwO,GAAKhV,KAAKgV,GACjBxO,EAAOgvB,GAAKx1B,KAAKw1B,GACjBhvB,EAAOoP,SAAW5V,KAAK4V,SAASwuB,QACzB59B,CACT,CAQO0wB,SAAAA,GAA4B,OAAiB,SAAVl3B,KAAKgV,EAAsB,CAC9DsgB,MAAAA,GAA4B,OAAiB,UAAVt1B,KAAKgV,EAAmB,CAC3DogB,WAAAA,GACL,OAAIp1B,KAAK2V,oBAAuD,IAAjC3V,KAAK4V,SAASmgB,eACpC,EAEQ,UAAV/1B,KAAKgV,EACd,CACO+kC,OAAAA,GAA4B,OAAiB,UAAV/5C,KAAKgV,EAAoB,CAC5D8gB,WAAAA,GAA4B,OAAiB,WAAV91B,KAAKgV,EAAwB,CAChEugB,QAAAA,GAA4B,OAAiB,SAAVv1B,KAAKw1B,EAAqB,CAC7DK,KAAAA,GAA4B,OAAiB,UAAV71B,KAAKw1B,EAAkB,CAC1De,eAAAA,GAA4B,OAAiB,WAAVv2B,KAAKgV,EAA4B,CACpEwiC,WAAAA,GAA4B,OAAiB,UAAVx3C,KAAKw1B,EAAwB,CAChEH,UAAAA,GAA4B,OAAiB,WAAVr1B,KAAKw1B,EAAuB,CAG/DoB,cAAAA,GAA2B,OAAiB,SAAV52B,KAAKgV,EAAyB,CAChEgiB,cAAAA,GAA2B,OAAiB,SAAVh3B,KAAKw1B,EAAyB,CAChEwkB,OAAAA,GAA2B,OAA0C,WAAxB,SAAVh6C,KAAKgV,GAAgD,CACxFilC,OAAAA,GAA2B,OAA0C,WAAxB,SAAVj6C,KAAKw1B,GAAgD,CACxF0kB,WAAAA,GAA2B,OAA0C,WAAxB,SAAVl6C,KAAKgV,KAAqF,WAAxB,SAAVhV,KAAKgV,GAAiD,CACjJmlC,WAAAA,GAA2B,OAA0C,WAAxB,SAAVn6C,KAAKw1B,KAAqF,WAAxB,SAAVx1B,KAAKw1B,GAAiD,CACjJ4kB,WAAAA,GAA2B,OAA0C,IAAxB,SAAVp6C,KAAKgV,GAAgC,CACxEqlC,WAAAA,GAA2B,OAA0C,IAAxB,SAAVr6C,KAAKw1B,GAAgC,CACxE8kB,kBAAAA,GAAgC,OAAmB,IAAZt6C,KAAKgV,IAAwB,IAAZhV,KAAKw1B,EAAU,CAGvEkB,UAAAA,GACL,OAAkB,SAAV12B,KAAKgV,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVhV,KAAKgV,GACtC,KAAK,SAAqB,OAAiB,SAAVhV,KAAKgV,GACtC,QAA0B,OAAQ,EAEtC,CACO8hB,UAAAA,GACL,OAAkB,SAAV92B,KAAKw1B,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVx1B,KAAKw1B,GACtC,KAAK,SAAqB,OAAiB,SAAVx1B,KAAKw1B,GACtC,QAA0B,OAAQ,EAEtC,CAGO7f,gBAAAA,GACL,OAAiB,UAAV3V,KAAKw1B,EACd,CACOghB,cAAAA,GACDx2C,KAAK4V,SAAS2kC,UAChBv6C,KAAKw1B,KAAM,UAEXx1B,KAAKw1B,IAAM,SAEf,CACOY,iBAAAA,GACL,GAAe,UAAVp2B,KAAKw1B,KAA+Bx1B,KAAK4V,SAAS0gC,eACrD,OAAuC,SAA/Bt2C,KAAK4V,SAAS0gC,gBACpB,KAAK,SACL,KAAK,SAAqB,OAAsC,IAA/Bt2C,KAAK4V,SAAS0gC,eAC/C,KAAK,SAAqB,OAAsC,SAA/Bt2C,KAAK4V,SAAS0gC,eAC/C,QAA0B,OAAOt2C,KAAK02B,aAG1C,OAAO12B,KAAK02B,YACd,CACO8jB,qBAAAA,GACL,OAAkB,UAAVx6C,KAAKw1B,KAA+Bx1B,KAAK4V,SAAS0gC,eACvB,SAA/Bt2C,KAAK4V,SAAS0gC,eACdt2C,KAAK42B,gBACX,CACOX,mBAAAA,GACL,OAAkB,UAAVj2B,KAAKw1B,KAA+Bx1B,KAAK4V,SAAS0gC,eACE,WAAxB,SAA/Bt2C,KAAK4V,SAAS0gC,gBACft2C,KAAKg6C,SACX,CACOS,uBAAAA,GACL,OAAkB,UAAVz6C,KAAKw1B,KAA+Bx1B,KAAK4V,SAAS0gC,eACE,WAAxB,SAA/Bt2C,KAAK4V,SAAS0gC,iBAC8C,WAAxB,SAA/Bt2C,KAAK4V,SAAS0gC,gBACpBt2C,KAAKk6C,aACX,CACOlkB,uBAAAA,GACL,OAAkB,UAAVh2B,KAAKw1B,KAA+Bx1B,KAAK4V,SAAS0gC,eACE,IAAxB,SAA/Bt2C,KAAK4V,SAAS0gC,gBACft2C,KAAKo6C,aACX,CACOM,iBAAAA,GACL,OAAiB,UAAV16C,KAAKgV,GACG,UAAVhV,KAAKw1B,GAA4Bx1B,KAAK4V,SAASmgB,eAAiB,EACjE,CACN,EAvHFtvB,EAAA0vB,cAAApuB,EA+HA,MAAaK,EAEX,OAAAstB,GACE,OAAI11B,KAAK26C,QAEQ,UAAZ36C,KAAK46C,KACL56C,KAAK+1B,gBAAkB,GAGrB/1B,KAAK46C,IACd,CACA,OAAAllB,CAAelvB,GAAiBxG,KAAK46C,KAAOp0C,CAAO,CAEnD,kBAAAuvB,GAEE,OAAI/1B,KAAK26C,OACA,GAEW,UAAZ36C,KAAK46C,OAAoC,EACnD,CACA,kBAAA7kB,CAA0BvvB,GACxBxG,KAAK46C,OAAQ,UACb56C,KAAK46C,MAASp0C,GAAS,GAAM,SAC/B,CAEA,kBAAA8vC,GACE,OAAmB,SAAZt2C,KAAK46C,IACd,CACA,kBAAAtE,CAA0B9vC,GACxBxG,KAAK46C,OAAQ,SACb56C,KAAK46C,MAAgB,SAARp0C,CACf,CAGA,SAAAqP,GACE,OAAO7V,KAAK26C,MACd,CACA,SAAA9kC,CAAiBrP,GACfxG,KAAK26C,OAASn0C,CAChB,CAEA9E,WAAAA,CACE8E,EAAc,EACdC,EAAgB,GA1CV,KAAAm0C,KAAe,EAgCf,KAAAD,OAAiB,EAYvB36C,KAAK46C,KAAOp0C,EACZxG,KAAK26C,OAASl0C,CAChB,CAEO29B,KAAAA,GACL,OAAO,IAAIh8B,EAAcpI,KAAK46C,KAAM56C,KAAK26C,OAC3C,CAMOJ,OAAAA,GACL,OAA+B,IAAxBv6C,KAAK+1B,gBAA0D,IAAhB/1B,KAAK26C,MAC7D,EA3DFl0C,EAAAo0C,cAAAzyC,CAAAA,E,kGClIA,MAAAA,EAAAL,EAAA,MACAH,EAAAG,EAAA,MAEAQ,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,KACAa,EAAAb,EAAA,KACAS,EAAAT,EAAA,MAEAc,EAAAd,EAAA,MAGatB,EAAAq0C,gBAAkB,WAS/Br0C,EAAAs0C,OAAA,MAoBEr5C,WAAAA,CACU8E,EACAC,EACAsB,GAFA,KAAAizC,eAAAx0C,EACA,KAAA4O,gBAAA3O,EACA,KAAA+J,eAAAzI,EArBH,KAAA+E,MAAgB,EAChB,KAAAuR,MAAgB,EAChB,KAAAhM,EAAY,EACZ,KAAAD,EAAY,EAGZ,KAAA8iC,KAAkD,CAAC,EACnD,KAAAyB,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB3uC,EAAAggB,kBAAkBmc,QACrC,KAAAyS,aAAqChuC,EAAA+sC,gBACrC,KAAA9vB,QAAoB,GACnB,KAAAm1B,UAAuBtyC,EAAA4M,SAAS2lC,aAAa,CAAC,EAAGtyC,EAAAuyC,eAAgBvyC,EAAA8rC,gBAAiB9rC,EAAA6rC,iBAClF,KAAA2G,gBAA6BzyC,EAAA4M,SAAS2lC,aAAa,CAAC,EAAGtyC,EAAAusB,qBAAsBvsB,EAAAyyC,sBAAuBzyC,EAAAkxC,uBAGpG,KAAAwB,aAAA,EA6NA,KAAAC,oBAAsB,IAAI3zC,EAAA6xC,cAC1B,KAAA+B,uBAAyB,EAvN/Bx7C,KAAKy7C,MAAQz7C,KAAKwQ,eAAevJ,KACjCjH,KAAK07C,MAAQ17C,KAAKwQ,eAAenL,KACjCrF,KAAK4M,MAAQ,IAAIxE,EAAA+7B,aAA0BnkC,KAAK27C,wBAAwB37C,KAAK07C,QAC7E17C,KAAK8qB,UAAY,EACjB9qB,KAAKonC,aAAepnC,KAAK07C,MAAQ,EACjC17C,KAAK47C,eACP,CAEOpH,WAAAA,CAAYhuC,GAUjB,OATIA,GACFxG,KAAKi7C,UAAUjmC,GAAKxO,EAAKwO,GACzBhV,KAAKi7C,UAAUzlB,GAAKhvB,EAAKgvB,GACzBx1B,KAAKi7C,UAAUrlC,SAAWpP,EAAKoP,WAE/B5V,KAAKi7C,UAAUjmC,GAAK,EACpBhV,KAAKi7C,UAAUzlB,GAAK,EACpBx1B,KAAKi7C,UAAUrlC,SAAW,IAAIrN,EAAAsyC,eAEzB76C,KAAKi7C,SACd,CAEOY,iBAAAA,CAAkBr1C,GAUvB,OATIA,GACFxG,KAAKo7C,gBAAgBpmC,GAAKxO,EAAKwO,GAC/BhV,KAAKo7C,gBAAgB5lB,GAAKhvB,EAAKgvB,GAC/Bx1B,KAAKo7C,gBAAgBxlC,SAAWpP,EAAKoP,WAErC5V,KAAKo7C,gBAAgBpmC,GAAK,EAC1BhV,KAAKo7C,gBAAgB5lB,GAAK,EAC1Bx1B,KAAKo7C,gBAAgBxlC,SAAW,IAAIrN,EAAAsyC,eAE/B76C,KAAKo7C,eACd,CAEOpzB,YAAAA,CAAaxhB,EAAsBC,GACxC,OAAO,IAAIwB,EAAA6zC,WAAW97C,KAAKwQ,eAAevJ,KAAMjH,KAAKw0C,YAAYhuC,GAAOC,EAC1E,CAEA,iBAAAwe,GACE,OAAOjlB,KAAKg7C,gBAAkBh7C,KAAK4M,MAAMi3B,UAAY7jC,KAAK07C,KAC5D,CAEA,sBAAAx9B,GACE,MACM1X,EADYxG,KAAKqe,MAAQre,KAAKqS,EACNrS,KAAK8M,MACnC,OAAQtG,GAAa,GAAKA,EAAYxG,KAAK07C,KAC7C,CAOQC,uBAAAA,CAAwBn1C,GAC9B,IAAKxG,KAAKg7C,eACR,OAAOx0C,EAGT,MAAMuB,EAAsBvB,EAAOxG,KAAKoV,gBAAgBhH,WAAW5I,WAEnE,OAAOuC,EAAsBtB,EAAAq0C,gBAAkBr0C,EAAAq0C,gBAAkB/yC,CACnE,CAKOg0C,gBAAAA,CAAiBv1C,GACtB,GAA0B,IAAtBxG,KAAK4M,MAAM1C,OAAc,UACvB1D,IACFA,EAAWyB,EAAAggB,mBAEb,IAAIxhB,EAAIzG,KAAK07C,MACb,KAAOj1C,KACLzG,KAAK4M,MAAMH,KAAKzM,KAAKgoB,aAAaxhB,G,CAGxC,CAKOY,KAAAA,GACLpH,KAAK8M,MAAQ,EACb9M,KAAKqe,MAAQ,EACbre,KAAKqS,EAAI,EACTrS,KAAKoS,EAAI,EACTpS,KAAK4M,MAAQ,IAAIxE,EAAA+7B,aAA0BnkC,KAAK27C,wBAAwB37C,KAAK07C,QAC7E17C,KAAK8qB,UAAY,EACjB9qB,KAAKonC,aAAepnC,KAAK07C,MAAQ,EACjC17C,KAAK47C,eACP,CAOOv0C,MAAAA,CAAOb,EAAiBC,GAE7B,MAAMsB,EAAW/H,KAAKw0C,YAAYvsC,EAAAggB,mBAGlC,IAAI7f,EAAmB,EAIvB,MAAMR,EAAe5H,KAAK27C,wBAAwBl1C,GAOlD,GANImB,EAAe5H,KAAK4M,MAAMi3B,YAC5B7jC,KAAK4M,MAAMi3B,UAAYj8B,GAKrB5H,KAAK4M,MAAM1C,OAAS,EAAG,CAEzB,GAAIlK,KAAKy7C,MAAQj1C,EACf,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,KAAK4M,MAAM1C,OAAQzD,IAErC2B,IAAqBpI,KAAK4M,MAAMsD,IAAIzJ,GAAIY,OAAOb,EAASuB,GAK5D,IAAIQ,EAAS,EACb,GAAIvI,KAAK07C,MAAQj1C,EACf,IAAK,IAAI2B,EAAIpI,KAAK07C,MAAOtzC,EAAI3B,EAAS2B,IAChCpI,KAAK4M,MAAM1C,OAASzD,EAAUzG,KAAKqe,QACjCre,KAAKoV,gBAAgBhH,WAAWm6B,kBAAA,IAAevoC,KAAKoV,gBAAgBhH,WAAWg6B,WAAWE,cAAA,IAAyBtoC,KAAKoV,gBAAgBhH,WAAWg6B,WAAWC,YAGhKroC,KAAK4M,MAAMH,KAAK,IAAIxE,EAAA6zC,WAAWt1C,EAASuB,IAEpC/H,KAAKqe,MAAQ,GAAKre,KAAK4M,MAAM1C,QAAUlK,KAAKqe,MAAQre,KAAKqS,EAAI9J,EAAS,GAGxEvI,KAAKqe,QACL9V,IACIvI,KAAK8M,MAAQ,GAEf9M,KAAK8M,SAKP9M,KAAK4M,MAAMH,KAAK,IAAIxE,EAAA6zC,WAAWt1C,EAASuB,UAMhD,IAAK,IAAIvB,EAAIxG,KAAK07C,MAAOl1C,EAAIC,EAASD,IAChCxG,KAAK4M,MAAM1C,OAASzD,EAAUzG,KAAKqe,QACjCre,KAAK4M,MAAM1C,OAASlK,KAAKqe,MAAQre,KAAKqS,EAAI,EAE5CrS,KAAK4M,MAAMQ,OAGXpN,KAAKqe,QACLre,KAAK8M,UAQb,GAAIlF,EAAe5H,KAAK4M,MAAMi3B,UAAW,CAEvC,MAAMr9B,EAAexG,KAAK4M,MAAM1C,OAAStC,EACrCpB,EAAe,IACjBxG,KAAK4M,MAAMq3B,UAAUz9B,GACrBxG,KAAKqe,MAAQhW,KAAKC,IAAItI,KAAKqe,MAAQ7X,EAAc,GACjDxG,KAAK8M,MAAQzE,KAAKC,IAAItI,KAAK8M,MAAQtG,EAAc,GACjDxG,KAAK22C,OAAStuC,KAAKC,IAAItI,KAAK22C,OAASnwC,EAAc,IAErDxG,KAAK4M,MAAMi3B,UAAYj8B,C,CAIzB5H,KAAKoS,EAAI/J,KAAKgP,IAAIrX,KAAKoS,EAAG5L,EAAU,GACpCxG,KAAKqS,EAAIhK,KAAKgP,IAAIrX,KAAKqS,EAAG5L,EAAU,GAChC8B,IACFvI,KAAKqS,GAAK9J,GAEZvI,KAAK02C,OAASruC,KAAKgP,IAAIrX,KAAK02C,OAAQlwC,EAAU,GAE9CxG,KAAK8qB,UAAY,C,CAKnB,GAFA9qB,KAAKonC,aAAe3gC,EAAU,EAE1BzG,KAAKg8C,mBACPh8C,KAAKi8C,QAAQz1C,EAASC,GAGlBzG,KAAKy7C,MAAQj1C,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,KAAK4M,MAAM1C,OAAQzD,IAErC2B,IAAqBpI,KAAK4M,MAAMsD,IAAIzJ,GAAIY,OAAOb,EAASuB,GAK9D/H,KAAKy7C,MAAQj1C,EACbxG,KAAK07C,MAAQj1C,EAEbzG,KAAKu7C,oBAAoBn0C,QAErBgB,EAAmB,GAAMpI,KAAK4M,MAAM1C,SACtClK,KAAKw7C,uBAAyB,EAC9Bx7C,KAAKu7C,oBAAoBvC,SAAQ,IAAMh5C,KAAKk8C,0BAEhD,CAKQA,qBAAAA,GACN,IAAI11C,GAAA,EACAxG,KAAKw7C,wBAA0Bx7C,KAAK4M,MAAM1C,SAG5ClK,KAAKw7C,uBAAyB,EAC9Bh1C,GAAA,GAEF,IAAIC,EAAU,EACd,KAAOzG,KAAKw7C,uBAAyBx7C,KAAK4M,MAAM1C,QAG9C,GAFAzD,GAAWzG,KAAK4M,MAAMsD,IAAIlQ,KAAKw7C,0BAA2BW,gBAEtD11C,EAAU,IACZ,OAAO,EAMX,OAAOD,CACT,CAEA,oBAAAw1C,GACE,MAAMx1C,EAAaxG,KAAKoV,gBAAgBhH,WAAWg6B,WACnD,OAAI5hC,GAAcA,EAAW6hC,YACpBroC,KAAKg7C,gBAAyC,WAAvBx0C,EAAW8hC,SAAwB9hC,EAAW6hC,aAAe,MAEtFroC,KAAKg7C,iBAAmBh7C,KAAKoV,gBAAgBhH,WAAWm6B,WACjE,CAEQ0T,OAAAA,CAAQz1C,EAAiBC,GAC3BzG,KAAKy7C,QAAUj1C,IAKfA,EAAUxG,KAAKy7C,MACjBz7C,KAAKo8C,cAAc51C,EAASC,GAE5BzG,KAAKq8C,eAAe71C,EAASC,GAEjC,CAEQ21C,aAAAA,CAAc51C,EAAiBC,GACrC,MAAMsB,GAAA,EAAqBU,EAAA6zC,8BAA6Bt8C,KAAK4M,MAAO5M,KAAKy7C,MAAOj1C,EAASxG,KAAKqe,MAAQre,KAAKqS,EAAGrS,KAAKw0C,YAAYvsC,EAAAggB,oBAC/H,GAAIlgB,EAASmC,OAAS,EAAG,CACvB,MAAM9B,GAAA,EAAkBK,EAAA8zC,6BAA4Bv8C,KAAK4M,MAAO7E,IAAA,EAChEU,EAAA+zC,4BAA2Bx8C,KAAK4M,MAAOxE,EAAgBq0C,QACvDz8C,KAAK08C,4BAA4Bl2C,EAASC,EAAS2B,EAAgBu0C,a,CAEvE,CAEQD,2BAAAA,CAA4Bl2C,EAAiBC,EAAiBsB,GACpE,MAAMK,EAAWpI,KAAKw0C,YAAYvsC,EAAAggB,mBAElC,IAAIrgB,EAAsBG,EAC1B,KAAOH,KAAwB,GACV,IAAf5H,KAAKqe,OACHre,KAAKqS,EAAI,GACXrS,KAAKqS,IAEHrS,KAAK4M,MAAM1C,OAASzD,GAEtBzG,KAAK4M,MAAMH,KAAK,IAAIxE,EAAA6zC,WAAWt1C,EAAS4B,MAGtCpI,KAAK8M,QAAU9M,KAAKqe,OACtBre,KAAK8M,QAEP9M,KAAKqe,SAGTre,KAAK22C,OAAStuC,KAAKC,IAAItI,KAAK22C,OAAS5uC,EAAc,EACrD,CAEQs0C,cAAAA,CAAe71C,EAAiBC,GACtC,MAAMsB,EAAW/H,KAAKw0C,YAAYvsC,EAAAggB,mBAG5B7f,EAAW,GACjB,IAAIR,EAAgB,EAEpB,IAAK,IAAIW,EAAIvI,KAAK4M,MAAM1C,OAAS,EAAG3B,GAAK,EAAGA,IAAK,CAE/C,IAAII,EAAW3I,KAAK4M,MAAMsD,IAAI3H,GAC9B,IAAKI,IAAaA,EAASojB,WAAapjB,EAAS6M,oBAAsBhP,EACrE,SAIF,MAAMoC,EAA6B,CAACD,GACpC,KAAOA,EAASojB,WAAaxjB,EAAI,GAC/BI,EAAW3I,KAAK4M,MAAMsD,MAAM3H,GAC5BK,EAAa2E,QAAQ5E,GAKvB,MAAMH,EAAYxI,KAAKqe,MAAQre,KAAKqS,EACpC,GAAI7J,GAAaD,GAAKC,EAAYD,EAAIK,EAAasB,OACjD,SAGF,MAAMrB,EAAiBD,EAAaA,EAAasB,OAAS,GAAGsL,mBACvD1M,GAAA,EAAkBL,EAAAm0C,gCAA+Bh0C,EAAc5I,KAAKy7C,MAAOj1C,GAC3E0R,EAAapP,EAAgBoB,OAAStB,EAAasB,OACzD,IAAIiO,EAGFA,EAFiB,IAAfnY,KAAKqe,OAAere,KAAKqS,IAAMrS,KAAK4M,MAAM1C,OAAS,EAEtC7B,KAAKC,IAAI,EAAGtI,KAAKqS,EAAIrS,KAAK4M,MAAMi3B,UAAY3rB,GAE5C7P,KAAKC,IAAI,EAAGtI,KAAK4M,MAAM1C,OAASlK,KAAK4M,MAAMi3B,UAAY3rB,GAIxE,MAAME,EAAyB,GAC/B,IAAK,IAAI5R,EAAI,EAAGA,EAAI0R,EAAY1R,IAAK,CACnC,MAAMA,EAAUxG,KAAKgoB,aAAa/f,EAAAggB,mBAAA,GAClC7P,EAAS3L,KAAKjG,E,CAEZ4R,EAASlO,OAAS,IACpB9B,EAASqE,KAAK,CAGZzB,MAAOzC,EAAIK,EAAasB,OAAStC,EACjCi1C,SAAAzkC,IAEFxQ,GAAiBwQ,EAASlO,QAE5BtB,EAAa6D,QAAQ2L,GAGrB,IAAIC,EAAgBvP,EAAgBoB,OAAS,EACzCoO,EAAUxP,EAAgBuP,GACd,IAAZC,IACFD,IACAC,EAAUxP,EAAgBuP,IAE5B,IAAIE,EAAe3P,EAAasB,OAASgO,EAAa,EAClDM,EAAS3P,EACb,KAAO0P,GAAgB,GAAG,CACxB,MAAM/R,EAAc6B,KAAKgP,IAAImB,EAAQF,GACrC,QAAI,IAAA1P,EAAayP,GAGf,MASF,GAPAzP,EAAayP,GAAeykC,cAAcl0C,EAAa2P,GAAeC,EAAShS,EAAa8R,EAAU9R,EAAaA,GAAA,GACnH8R,GAAW9R,EACK,IAAZ8R,IACFD,IACAC,EAAUxP,EAAgBuP,IAE5BG,GAAUhS,EACK,IAAXgS,EAAc,CAChBD,IACA,MAAM/R,EAAoB6B,KAAKC,IAAIiQ,EAAc,GACjDC,GAAA,EAAS/P,EAAAs0C,6BAA4Bn0C,EAAcpC,EAAmBxG,KAAKy7C,M,EAK/E,IAAK,IAAIh1C,EAAI,EAAGA,EAAImC,EAAasB,OAAQzD,IACnCqC,EAAgBrC,GAAKD,GACvBoC,EAAanC,GAAGu2C,QAAQl0C,EAAgBrC,GAAIsB,GAKhD,IAAI0Q,EAAsBP,EAAaC,EACvC,KAAOM,KAAwB,GACV,IAAfzY,KAAKqe,MACHre,KAAKqS,EAAI5L,EAAU,GACrBzG,KAAKqS,IACLrS,KAAK4M,MAAMQ,QAEXpN,KAAKqe,QACLre,KAAK8M,SAIH9M,KAAKqe,MAAQhW,KAAKgP,IAAIrX,KAAK4M,MAAMi3B,UAAW7jC,KAAK4M,MAAM1C,OAAStC,GAAiBnB,IAC/EzG,KAAKqe,QAAUre,KAAK8M,OACtB9M,KAAK8M,QAEP9M,KAAKqe,SAIXre,KAAK22C,OAAStuC,KAAKgP,IAAIrX,KAAK22C,OAASz+B,EAAYlY,KAAKqe,MAAQ5X,EAAU,E,CAM1E,GAAI2B,EAAS8B,OAAS,EAAG,CAGvB,MAAM1D,EAA+B,GAG/BC,EAA8B,GACpC,IAAK,IAAID,EAAI,EAAGA,EAAIxG,KAAK4M,MAAM1C,OAAQ1D,IACrCC,EAAcgG,KAAKzM,KAAK4M,MAAMsD,IAAI1J,IAEpC,MAAMuB,EAAsB/H,KAAK4M,MAAM1C,OAEvC,IAAI3B,EAAoBR,EAAsB,EAC1CE,EAAoB,EACpBQ,EAAeL,EAASH,GAC5BjI,KAAK4M,MAAM1C,OAAS7B,KAAKgP,IAAIrX,KAAK4M,MAAMi3B,UAAW7jC,KAAK4M,MAAM1C,OAAStC,GACvE,IAAIe,EAAqB,EACzB,IAAK,IAAIC,EAAIP,KAAKgP,IAAIrX,KAAK4M,MAAMi3B,UAAY,EAAG97B,EAAsBH,EAAgB,GAAIgB,GAAK,EAAGA,IAChG,GAAIH,GAAgBA,EAAauC,MAAQzC,EAAoBI,EAAoB,CAE/E,IAAK,IAAInC,EAAQiC,EAAao0C,SAAS3yC,OAAS,EAAG1D,GAAS,EAAGA,IAC7DxG,KAAK4M,MAAMoD,IAAIpH,IAAKH,EAAao0C,SAASr2C,IAE5CoC,IAGApC,EAAaiG,KAAK,CAChB8P,MAAOhU,EAAoB,EAC3BoZ,OAAQlZ,EAAao0C,SAAS3yC,SAGhCvB,GAAsBF,EAAao0C,SAAS3yC,OAC5CzB,EAAeL,IAAWH,E,MAE1BjI,KAAK4M,MAAMoD,IAAIpH,EAAGnC,EAAc8B,MAKpC,IAAIK,EAAqB,EACzB,IAAK,IAAInC,EAAID,EAAa0D,OAAS,EAAGzD,GAAK,EAAGA,IAC5CD,EAAaC,GAAG8V,OAAS3T,EACzB5I,KAAK4M,MAAM02B,gBAAgB7uB,KAAKjO,EAAaC,IAC7CmC,GAAsBpC,EAAaC,GAAGkb,OAExC,MAAMnZ,EAAeH,KAAKC,IAAI,EAAGP,EAAsBH,EAAgB5H,KAAK4M,MAAMi3B,WAC9Er7B,EAAe,GACjBxI,KAAK4M,MAAM42B,cAAc/uB,KAAKjM,E,CAGpC,CAYOqE,2BAAAA,CAA4BrG,EAAmBC,EAAoBsB,EAAmB,EAAGK,GAC9F,MAAMR,EAAO5H,KAAK4M,MAAMsD,IAAI1J,GAC5B,OAAKoB,EAGEA,EAAKokB,kBAAkBvlB,EAAWsB,EAAUK,GAF1C,EAGX,CAEOq4B,sBAAAA,CAAuBj6B,GAC5B,IAAIC,EAAQD,EACRuB,EAAOvB,EAEX,KAAOC,EAAQ,GAAKzG,KAAK4M,MAAMsD,IAAIzJ,GAAQslB,WACzCtlB,IAGF,KAAOsB,EAAO,EAAI/H,KAAK4M,MAAM1C,QAAUlK,KAAK4M,MAAMsD,IAAInI,EAAO,GAAIgkB,WAC/DhkB,IAEF,MAAO,CAAE24B,MAAAj6B,EAAOk6B,KAAA54B,EAClB,CAMO6zC,aAAAA,CAAcp1C,GAUnB,IATI,MAAAA,EACGxG,KAAKk1C,KAAK1uC,KACbA,EAAIxG,KAAKm1C,SAAS3uC,KAGpBxG,KAAKk1C,KAAO,CAAC,EACb1uC,EAAI,GAGCA,EAAIxG,KAAKy7C,MAAOj1C,GAAKxG,KAAKoV,gBAAgBhH,WAAW3I,aAC1DzF,KAAKk1C,KAAK1uC,IAAA,CAEd,CAMO2uC,QAAAA,CAAS3uC,GAId,IAHI,MAAAA,IACFA,EAAIxG,KAAKoS,IAEHpS,KAAKk1C,OAAO1uC,IAAMA,EAAI,IAC9B,OAAOA,GAAKxG,KAAKy7C,MAAQz7C,KAAKy7C,MAAQ,EAAIj1C,EAAI,EAAI,EAAIA,CACxD,CAMOuuC,QAAAA,CAASvuC,GAId,IAHI,MAAAA,IACFA,EAAIxG,KAAKoS,IAEHpS,KAAKk1C,OAAO1uC,IAAMA,EAAIxG,KAAKy7C,QACnC,OAAOj1C,GAAKxG,KAAKy7C,MAAQz7C,KAAKy7C,MAAQ,EAAIj1C,EAAI,EAAI,EAAIA,CACxD,CAMO+uC,YAAAA,CAAa/uC,GAClBxG,KAAKs7C,aAAA,EACL,IAAK,IAAI70C,EAAI,EAAGA,EAAIzG,KAAK8lB,QAAQ5b,OAAQzD,IACnCzG,KAAK8lB,QAAQrf,GAAGgnB,OAASjnB,IAC3BxG,KAAK8lB,QAAQrf,GAAGvD,UAChBlD,KAAK8lB,QAAQrU,OAAOhL,IAAK,IAG7BzG,KAAKs7C,aAAA,CACP,CAKOvzB,eAAAA,GACL/nB,KAAKs7C,aAAA,EACL,IAAK,IAAI90C,EAAI,EAAGA,EAAIxG,KAAK8lB,QAAQ5b,OAAQ1D,IACvCxG,KAAK8lB,QAAQtf,GAAGtD,UAChBlD,KAAK8lB,QAAQrU,OAAOjL,IAAK,GAE3BxG,KAAKs7C,aAAA,CACP,CAEOt1B,SAAAA,CAAUxf,GACf,MAAMC,EAAS,IAAI+B,EAAAy0C,OAAOz2C,GA0B1B,OAzBAxG,KAAK8lB,QAAQrZ,KAAKhG,GAClBA,EAAO6D,SAAStK,KAAK4M,MAAMqxB,QAAOz3B,IAChCC,EAAOgnB,MAAQjnB,EAEXC,EAAOgnB,KAAO,GAChBhnB,EAAOvD,SAAA,KAGXuD,EAAO6D,SAAStK,KAAK4M,MAAM22B,UAAS/8B,IAC9BC,EAAOgnB,MAAQjnB,EAAM+V,QACvB9V,EAAOgnB,MAAQjnB,EAAMmb,OAAA,KAGzBlb,EAAO6D,SAAStK,KAAK4M,MAAMy2B,UAAS78B,IAE9BC,EAAOgnB,MAAQjnB,EAAM+V,OAAS9V,EAAOgnB,KAAOjnB,EAAM+V,MAAQ/V,EAAMmb,QAClElb,EAAOvD,UAILuD,EAAOgnB,KAAOjnB,EAAM+V,QACtB9V,EAAOgnB,MAAQjnB,EAAMmb,OAAA,KAGzBlb,EAAO6D,SAAS7D,EAAOmnB,WAAU,IAAM5tB,KAAKk9C,cAAcz2C,MACnDA,CACT,CAEQy2C,aAAAA,CAAc12C,GACfxG,KAAKs7C,aACRt7C,KAAK8lB,QAAQrU,OAAOzR,KAAK8lB,QAAQtU,QAAQhL,GAAS,EAEtD,EAAC,E,wGCtoBH,MAAA4B,EAAAL,EAAA,MACAH,EAAAG,EAAA,KACAQ,EAAAR,EAAA,KACAE,EAAAF,EAAA,KA4BatB,EAAAwhB,kBAAoB/T,OAAO4sB,OAAO,IAAI14B,EAAA+tB,eAGnD,IAAI1tB,EAAc,EAoBlB,MAAaE,EAMXjH,WAAAA,CAAY8E,EAAcC,EAAiCsB,GAAA,QAAAgkB,UAAAhkB,EAJjD,KAAAo1C,UAAuC,CAAC,EACxC,KAAAC,eAAgE,CAAC,EAIzEp9C,KAAK83C,MAAQ,IAAIlN,YA9CH,EA8CepkC,GAC7B,MAAM4B,EAAO3B,GAAgBmB,EAAA2N,SAAS2lC,aAAa,CAAC,EAAG3yC,EAAA4yC,eAAgB5yC,EAAAmsC,gBAAiBnsC,EAAAksC,iBACxF,IAAK,IAAIhuC,EAAI,EAAGA,EAAID,IAAQC,EAC1BzG,KAAKg9C,QAAQv2C,EAAG2B,GAElBpI,KAAKkK,OAAS1D,CAChB,CAMO0J,GAAAA,CAAI1J,GACT,MAAMC,EAAUzG,KAAK83C,MA3DP,EA2DatxC,EAAoB,GACzCuB,EAAe,QAAVtB,EACX,MAAO,CACLzG,KAAK83C,MA9DO,EA8DDtxC,EAAoB,GACpB,QAAVC,EACGzG,KAAKm9C,UAAU32C,GACfuB,GAAA,EAAOE,EAAAmsC,qBAAoBrsC,GAAM,GACrCtB,GAAW,GACA,QAAVA,EACGzG,KAAKm9C,UAAU32C,GAAOygB,WAAWjnB,KAAKm9C,UAAU32C,GAAO0D,OAAS,GAChEnC,EAER,CAMOiI,GAAAA,CAAIxJ,EAAeC,GACxBzG,KAAK83C,MA9ES,EA8EHtxC,EAAoB,GAAWC,EAAM8B,EAAA80C,sBAC5C52C,EAAM8B,EAAA+0C,sBAAsBpzC,OAAS,GACvClK,KAAKm9C,UAAU32C,GAASC,EAAM,GAC9BzG,KAAK83C,MAjFO,EAiFDtxC,EAAoB,GAAwB,QAARA,EAAoCC,EAAM8B,EAAAg1C,wBAA0B,IAEnHv9C,KAAK83C,MAnFO,EAmFDtxC,EAAoB,GAAgBC,EAAM8B,EAAA+0C,sBAAsBr2B,WAAW,GAAMxgB,EAAM8B,EAAAg1C,wBAA0B,EAEhI,CAMOj/B,QAAAA,CAAS9X,GACd,OAAOxG,KAAK83C,MA5FE,EA4FItxC,EAAoB,IAAiB,EACzD,CAGOm5B,QAAAA,CAASn5B,GACd,OAAsD,SAA/CxG,KAAK83C,MAjGE,EAiGItxC,EAAoB,EACxC,CAGOw0B,KAAAA,CAAMx0B,GACX,OAAOxG,KAAK83C,MAtGE,EAsGItxC,EAAoB,EACxC,CAGOy0B,KAAAA,CAAMz0B,GACX,OAAOxG,KAAK83C,MA3GE,EA2GItxC,EAAoB,EACxC,CAOOiP,UAAAA,CAAWjP,GAChB,OAAsD,QAA/CxG,KAAK83C,MApHE,EAoHItxC,EAAoB,EACxC,CAOO+5B,YAAAA,CAAa/5B,GAClB,MAAMC,EAAUzG,KAAK83C,MA7HP,EA6HatxC,EAAoB,GAC/C,OAAc,QAAVC,EACKzG,KAAKm9C,UAAU32C,GAAOygB,WAAWjnB,KAAKm9C,UAAU32C,GAAO0D,OAAS,GAExD,QAAVzD,CACT,CAGOg0B,UAAAA,CAAWj0B,GAChB,OAAsD,QAA/CxG,KAAK83C,MAtIE,EAsIItxC,EAAoB,EACxC,CAGO60B,SAAAA,CAAU70B,GACf,MAAMC,EAAUzG,KAAK83C,MA3IP,EA2IatxC,EAAoB,GAC/C,OAAc,QAAVC,EACKzG,KAAKm9C,UAAU32C,GAEV,QAAVC,GAAA,EACKwB,EAAAmsC,qBAA8B,QAAV3tC,GAGtB,EACT,CAGO+wC,WAAAA,CAAYhxC,GACjB,OAAiD,UAA1CxG,KAAK83C,MAxJE,EAwJItxC,EAAoB,EACxC,CAMOkP,QAAAA,CAASlP,EAAeC,GAW7B,OAVAgC,EAhKc,EAgKAjC,EACdC,EAAK8zB,QAAUv6B,KAAK83C,MAAMrvC,EAAc,GACxChC,EAAKuO,GAAKhV,KAAK83C,MAAMrvC,EAAc,GACnChC,EAAK+uB,GAAKx1B,KAAK83C,MAAMrvC,EAAc,GAChB,QAAfhC,EAAK8zB,UACP9zB,EAAK+zB,aAAex6B,KAAKm9C,UAAU32C,IAEvB,UAAVC,EAAK+uB,KACP/uB,EAAKmP,SAAW5V,KAAKo9C,eAAe52C,IAE/BC,CACT,CAKOu2C,OAAAA,CAAQx2C,EAAeC,GACT,QAAfA,EAAK8zB,UACPv6B,KAAKm9C,UAAU32C,GAASC,EAAK+zB,cAEjB,UAAV/zB,EAAK+uB,KACPx1B,KAAKo9C,eAAe52C,GAASC,EAAKmP,UAEpC5V,KAAK83C,MAvLS,EAuLHtxC,EAAoB,GAAgBC,EAAK8zB,QACpDv6B,KAAK83C,MAxLS,EAwLHtxC,EAAoB,GAAWC,EAAKuO,GAC/ChV,KAAK83C,MAzLS,EAyLHtxC,EAAoB,GAAWC,EAAK+uB,EACjD,CAOO0e,oBAAAA,CAAqB1tC,EAAeC,EAAmBsB,EAAeK,EAAYR,EAAYW,GAC1F,UAALX,IACF5H,KAAKo9C,eAAe52C,GAAS+B,GAE/BvI,KAAK83C,MArMS,EAqMHtxC,EAAoB,GAAgBC,EAAasB,GAAS,GACrE/H,KAAK83C,MAtMS,EAsMHtxC,EAAoB,GAAW4B,EAC1CpI,KAAK83C,MAvMS,EAuMHtxC,EAAoB,GAAWoB,CAC5C,CAQO+sC,kBAAAA,CAAmBnuC,EAAeC,GACvC,IAAIsB,EAAU/H,KAAK83C,MAjNL,EAiNWtxC,EAAoB,GAC/B,QAAVuB,EAEF/H,KAAKm9C,UAAU32C,KAAA,EAAUyB,EAAAmsC,qBAAoB3tC,IAE/B,QAAVsB,GAIF/H,KAAKm9C,UAAU32C,IAAA,EAASyB,EAAAmsC,qBAA8B,QAAVrsC,IAAA,EAAoCE,EAAAmsC,qBAAoB3tC,GACpGsB,IAAW,QACXA,GAAW,SAIXA,EAAUtB,EAAa,GAAK,GAE9BzG,KAAK83C,MAlOO,EAkODtxC,EAAoB,GAAgBuB,EAEnD,CAEOwsC,WAAAA,CAAY/tC,EAAaC,EAAWsB,EAAyBQ,GAQlE,IAPA/B,GAAOxG,KAAKkK,SAG0B,IAA3BlK,KAAKse,SAAS9X,EAAM,IAC7BxG,KAAKk0C,qBAAqB1tC,EAAM,EAAG,EAAG,GAAG,MAAA+B,OAAA,EAAAA,EAAWyM,KAAM,GAAG,MAAAzM,OAAA,EAAAA,EAAWitB,KAAM,GAAG,MAAAjtB,OAAA,EAAAA,EAAWqN,WAAY,IAAIxN,EAAAyyC,eAG1Gp0C,EAAIzG,KAAKkK,OAAS1D,EAAK,CACzB,MAAM4B,EAAO,IAAIR,EAAA2N,SACjB,IAAK,IAAIxN,EAAI/H,KAAKkK,OAAS1D,EAAMC,EAAI,EAAGsB,GAAK,IAAKA,EAChD/H,KAAKg9C,QAAQx2C,EAAMC,EAAIsB,EAAG/H,KAAK0V,SAASlP,EAAMuB,EAAGK,IAEnD,IAAK,IAAIA,EAAI,EAAGA,EAAI3B,IAAK2B,EACvBpI,KAAKg9C,QAAQx2C,EAAM4B,EAAGL,E,MAGxB,IAAK,IAAItB,EAAID,EAAKC,EAAIzG,KAAKkK,SAAUzD,EACnCzG,KAAKg9C,QAAQv2C,EAAGsB,GAKmB,IAAnC/H,KAAKse,SAASte,KAAKkK,OAAS,IAC9BlK,KAAKk0C,qBAAqBl0C,KAAKkK,OAAS,EAAG,EAAG,GAAG,MAAA3B,OAAA,EAAAA,EAAWyM,KAAM,GAAG,MAAAzM,OAAA,EAAAA,EAAWitB,KAAM,GAAG,MAAAjtB,OAAA,EAAAA,EAAWqN,WAAY,IAAIxN,EAAAyyC,cAExH,CAEOrF,WAAAA,CAAYhvC,EAAaC,EAAWsB,EAAyBQ,GAElE,GADA/B,GAAOxG,KAAKkK,OACRzD,EAAIzG,KAAKkK,OAAS1D,EAAK,CACzB,MAAM4B,EAAO,IAAIR,EAAA2N,SACjB,IAAK,IAAIxN,EAAI,EAAGA,EAAI/H,KAAKkK,OAAS1D,EAAMC,IAAKsB,EAC3C/H,KAAKg9C,QAAQx2C,EAAMuB,EAAG/H,KAAK0V,SAASlP,EAAMC,EAAIsB,EAAGK,IAEnD,IAAK,IAAI5B,EAAIxG,KAAKkK,OAASzD,EAAGD,EAAIxG,KAAKkK,SAAU1D,EAC/CxG,KAAKg9C,QAAQx2C,EAAGuB,E,MAGlB,IAAK,IAAItB,EAAID,EAAKC,EAAIzG,KAAKkK,SAAUzD,EACnCzG,KAAKg9C,QAAQv2C,EAAGsB,GAOhBvB,GAAkC,IAA3BxG,KAAKse,SAAS9X,EAAM,IAC7BxG,KAAKk0C,qBAAqB1tC,EAAM,EAAG,EAAG,GAAG,MAAA+B,OAAA,EAAAA,EAAWyM,KAAM,GAAG,MAAAzM,OAAA,EAAAA,EAAWitB,KAAM,GAAG,MAAAjtB,OAAA,EAAAA,EAAWqN,WAAY,IAAIxN,EAAAyyC,eAEnF,IAAvB76C,KAAKse,SAAS9X,IAAexG,KAAKyV,WAAWjP,IAC/CxG,KAAKk0C,qBAAqB1tC,EAAK,EAAG,GAAG,MAAA+B,OAAA,EAAAA,EAAWyM,KAAM,GAAG,MAAAzM,OAAA,EAAAA,EAAWitB,KAAM,GAAG,MAAAjtB,OAAA,EAAAA,EAAWqN,WAAY,IAAIxN,EAAAyyC,cAE5G,CAEOxF,YAAAA,CAAa7uC,EAAeC,EAAasB,EAAyBH,EAA4BW,GAAA,GAEnG,GAAIA,EAOF,IANI/B,GAAsC,IAA7BxG,KAAKse,SAAS9X,EAAQ,KAAaxG,KAAKw3C,YAAYhxC,EAAQ,IACvExG,KAAKk0C,qBAAqB1tC,EAAQ,EAAG,EAAG,GAAG,MAAAoB,OAAA,EAAAA,EAAWoN,KAAM,GAAG,MAAApN,OAAA,EAAAA,EAAW4tB,KAAM,GAAG,MAAA5tB,OAAA,EAAAA,EAAWgO,WAAY,IAAIxN,EAAAyyC,eAE5Gp0C,EAAMzG,KAAKkK,QAAqC,IAA3BlK,KAAKse,SAAS7X,EAAM,KAAazG,KAAKw3C,YAAY/wC,IACzEzG,KAAKk0C,qBAAqBztC,EAAK,EAAG,GAAG,MAAAmB,OAAA,EAAAA,EAAWoN,KAAM,GAAG,MAAApN,OAAA,EAAAA,EAAW4tB,KAAM,GAAG,MAAA5tB,OAAA,EAAAA,EAAWgO,WAAY,IAAIxN,EAAAyyC,eAEnGr0C,EAAQC,GAAQD,EAAQxG,KAAKkK,QAC7BlK,KAAKw3C,YAAYhxC,IACpBxG,KAAKg9C,QAAQx2C,EAAOuB,GAEtBvB,SAcJ,IARIA,GAAsC,IAA7BxG,KAAKse,SAAS9X,EAAQ,IACjCxG,KAAKk0C,qBAAqB1tC,EAAQ,EAAG,EAAG,GAAG,MAAAoB,OAAA,EAAAA,EAAWoN,KAAM,GAAG,MAAApN,OAAA,EAAAA,EAAW4tB,KAAM,GAAG,MAAA5tB,OAAA,EAAAA,EAAWgO,WAAY,IAAIxN,EAAAyyC,eAG5Gp0C,EAAMzG,KAAKkK,QAAqC,IAA3BlK,KAAKse,SAAS7X,EAAM,IAC3CzG,KAAKk0C,qBAAqBztC,EAAK,EAAG,GAAG,MAAAmB,OAAA,EAAAA,EAAWoN,KAAM,GAAG,MAAApN,OAAA,EAAAA,EAAW4tB,KAAM,GAAG,MAAA5tB,OAAA,EAAAA,EAAWgO,WAAY,IAAIxN,EAAAyyC,eAGnGr0C,EAAQC,GAAQD,EAAQxG,KAAKkK,QAClClK,KAAKg9C,QAAQx2C,IAASuB,EAE1B,CASOV,MAAAA,CAAOb,EAAcC,GAC1B,GAAID,IAASxG,KAAKkK,OAChB,OAA2B,EAApBlK,KAAK83C,MAAM5tC,OAhTE,EAgT+BlK,KAAK83C,MAAMnrC,OAAO6wC,WAEvE,MAAMz1C,EAxUQ,EAwUMvB,EACpB,GAAIA,EAAOxG,KAAKkK,OAAQ,CACtB,GAAIlK,KAAK83C,MAAMnrC,OAAO6wC,YAA4B,EAAdz1C,EAElC/H,KAAK83C,MAAQ,IAAIlN,YAAY5qC,KAAK83C,MAAMnrC,OAAQ,EAAG5E,OAC9C,CAEL,MAAMvB,EAAO,IAAIokC,YAAY7iC,GAC7BvB,EAAKwJ,IAAIhQ,KAAK83C,OACd93C,KAAK83C,MAAQtxC,C,CAEf,IAAK,IAAIuB,EAAI/H,KAAKkK,OAAQnC,EAAIvB,IAAQuB,EACpC/H,KAAKg9C,QAAQj1C,EAAGtB,E,KAEb,CAELzG,KAAK83C,MAAQ93C,KAAK83C,MAAMlE,SAAS,EAAG7rC,GAEpC,MAAMtB,EAAOyN,OAAOupC,KAAKz9C,KAAKm9C,WAC9B,IAAK,IAAIp1C,EAAI,EAAGA,EAAItB,EAAKyD,OAAQnC,IAAK,CACpC,MAAMK,EAAMF,SAASzB,EAAKsB,GAAI,IAC1BK,GAAO5B,UACFxG,KAAKm9C,UAAU/0C,E,CAI1B,MAAMA,EAAU8L,OAAOupC,KAAKz9C,KAAKo9C,gBACjC,IAAK,IAAI32C,EAAI,EAAGA,EAAI2B,EAAQ8B,OAAQzD,IAAK,CACvC,MAAMsB,EAAMG,SAASE,EAAQ3B,GAAI,IAC7BsB,GAAOvB,UACFxG,KAAKo9C,eAAer1C,E,EAKjC,OADA/H,KAAKkK,OAAS1D,EACO,EAAduB,EArVe,EAqVuB/H,KAAK83C,MAAMnrC,OAAO6wC,UACjE,CAQOrB,aAAAA,GACL,GAAwB,EAApBn8C,KAAK83C,MAAM5tC,OA/VO,EA+V0BlK,KAAK83C,MAAMnrC,OAAO6wC,WAAY,CAC5E,MAAMh3C,EAAO,IAAIokC,YAAY5qC,KAAK83C,MAAM5tC,QAGxC,OAFA1D,EAAKwJ,IAAIhQ,KAAK83C,OACd93C,KAAK83C,MAAQtxC,EACN,C,CAET,OAAO,CACT,CAGOuyB,IAAAA,CAAKvyB,EAAyBC,GAAA,GAEnC,GAAIA,EACF,IAAK,IAAIA,EAAI,EAAGA,EAAIzG,KAAKkK,SAAUzD,EAC5BzG,KAAKw3C,YAAY/wC,IACpBzG,KAAKg9C,QAAQv2C,EAAGD,OAHtB,CAQAxG,KAAKm9C,UAAY,CAAC,EAClBn9C,KAAKo9C,eAAiB,CAAC,EACvB,IAAK,IAAI32C,EAAI,EAAGA,EAAIzG,KAAKkK,SAAUzD,EACjCzG,KAAKg9C,QAAQv2C,EAAGD,E,CAEpB,CAGOk3C,QAAAA,CAASl3C,GACVxG,KAAKkK,SAAW1D,EAAK0D,OACvBlK,KAAK83C,MAAQ,IAAIlN,YAAYpkC,EAAKsxC,OAGlC93C,KAAK83C,MAAM9nC,IAAIxJ,EAAKsxC,OAEtB93C,KAAKkK,OAAS1D,EAAK0D,OACnBlK,KAAKm9C,UAAY,CAAC,EAClB,IAAK,MAAM12C,KAAMD,EAAK22C,UACpBn9C,KAAKm9C,UAAU12C,GAAMD,EAAK22C,UAAU12C,GAEtCzG,KAAKo9C,eAAiB,CAAC,EACvB,IAAK,MAAM32C,KAAMD,EAAK42C,eACpBp9C,KAAKo9C,eAAe32C,GAAMD,EAAK42C,eAAe32C,GAEhDzG,KAAK+rB,UAAYvlB,EAAKulB,SACxB,CAGOqY,KAAAA,GACL,MAAM59B,EAAU,IAAImC,EAAW,GAC/BnC,EAAQsxC,MAAQ,IAAIlN,YAAY5qC,KAAK83C,OACrCtxC,EAAQ0D,OAASlK,KAAKkK,OACtB,IAAK,MAAMzD,KAAMzG,KAAKm9C,UACpB32C,EAAQ22C,UAAU12C,GAAMzG,KAAKm9C,UAAU12C,GAEzC,IAAK,MAAMA,KAAMzG,KAAKo9C,eACpB52C,EAAQ42C,eAAe32C,GAAMzG,KAAKo9C,eAAe32C,GAGnD,OADAD,EAAQulB,UAAY/rB,KAAK+rB,UAClBvlB,CACT,CAEOgP,gBAAAA,GACL,IAAK,IAAIhP,EAAIxG,KAAKkK,OAAS,EAAG1D,GAAK,IAAKA,EACtC,GAAgD,QAA3CxG,KAAK83C,MArbE,EAqbItxC,EAAgB,GAC9B,OAAOA,GAAKxG,KAAK83C,MAtbP,EAsbatxC,EAAgB,IAAiB,IAG5D,OAAO,CACT,CAEOguB,oBAAAA,GACL,IAAK,IAAIhuB,EAAIxG,KAAKkK,OAAS,EAAG1D,GAAK,IAAKA,EACtC,GAAgD,QAA3CxG,KAAK83C,MA9bE,EA8bItxC,EAAgB,IAAoF,SAAtCxG,KAAK83C,MA9bvE,EA8b6EtxC,EAAgB,GACvG,OAAOA,GAAKxG,KAAK83C,MA/bP,EA+batxC,EAAgB,IAAiB,IAG5D,OAAO,CACT,CAEOs2C,aAAAA,CAAct2C,EAAiBC,EAAgBsB,EAAiBK,EAAgBR,GACrF,MAAMW,EAAU/B,EAAIsxC,MACpB,GAAIlwC,EACF,IAAK,IAAIA,EAAOQ,EAAS,EAAGR,GAAQ,EAAGA,IAAQ,CAC7C,IAAK,IAAIpB,EAAI,EAAGA,EAzcN,EAycqBA,IAC7BxG,KAAK83C,MA1cG,GA0cI/vC,EAAUH,GAAoBpB,GAAK+B,EA1cvC,GA0cgD9B,EAASmB,GAAoBpB,GAElC,UAAjD+B,EA5cM,GA4cG9B,EAASmB,GAAoB,KACxC5H,KAAKo9C,eAAer1C,EAAUH,GAAQpB,EAAI42C,eAAe32C,EAASmB,G,MAItE,IAAK,IAAIA,EAAO,EAAGA,EAAOQ,EAAQR,IAAQ,CACxC,IAAK,IAAIpB,EAAI,EAAGA,EAldN,EAkdqBA,IAC7BxG,KAAK83C,MAndG,GAmdI/vC,EAAUH,GAAoBpB,GAAK+B,EAndvC,GAmdgD9B,EAASmB,GAAoBpB,GAElC,UAAjD+B,EArdM,GAqdG9B,EAASmB,GAAoB,KACxC5H,KAAKo9C,eAAer1C,EAAUH,GAAQpB,EAAI42C,eAAe32C,EAASmB,G,CAMxE,MAAMK,EAAkBiM,OAAOupC,KAAKj3C,EAAI22C,WACxC,IAAK,IAAI/0C,EAAI,EAAGA,EAAIH,EAAgBiC,OAAQ9B,IAAK,CAC/C,MAAMR,EAAMM,SAASD,EAAgBG,GAAI,IACrCR,GAAOnB,IACTzG,KAAKm9C,UAAUv1C,EAAMnB,EAASsB,GAAWvB,EAAI22C,UAAUv1C,G,CAG7D,CAEOokB,iBAAAA,CAAkBxlB,GAAA,EAA4BC,EAAmB,EAAGsB,EAAiB/H,KAAKkK,QAC3F1D,IACFuB,EAASM,KAAKgP,IAAItP,EAAQ/H,KAAKwV,qBAEjC,IAAIpN,EAAS,GACb,KAAO3B,EAAWsB,GAAQ,CACxB,MAAMvB,EAAUxG,KAAK83C,MA3eT,EA2eerxC,EAAuB,GAC5CsB,EAAe,QAAVvB,EACX4B,GAAqB,QAAV5B,EAAsCxG,KAAKm9C,UAAU12C,GAAYsB,GAAA,EAAOE,EAAAmsC,qBAAoBrsC,GAAMQ,EAAA4sB,qBAC7G1uB,GAAaD,GAAW,IAAwB,C,CAElD,OAAO4B,CACT,EA1cF3B,EAAAq1C,WAAAnzC,CAAAA,E,sFCrDAlC,EAAAm4B,eAAA,SAA+Bp4B,EAAqBC,GAClD,GAAID,EAAMwE,MAAMqH,EAAI7L,EAAMyE,IAAIoH,EAC5B,MAAM,IAAI3H,MAAM,qBAAqBlE,EAAMyE,IAAImH,MAAM5L,EAAMyE,IAAIoH,8BAA8B7L,EAAMwE,MAAMoH,MAAM5L,EAAMwE,MAAMqH,MAE7H,OAAO5L,GAAcD,EAAMyE,IAAIoH,EAAI7L,EAAMwE,MAAMqH,IAAM7L,EAAMyE,IAAImH,EAAI5L,EAAMwE,MAAMoH,EAAI,EACrF,CAAC,E,aCoMD,SAAgBrK,EAA4BvB,EAAqBC,EAAWsB,GAE1E,GAAItB,IAAMD,EAAM0D,OAAS,EACvB,OAAO1D,EAAMC,GAAG+O,mBAKlB,MAAMpN,GAAe5B,EAAMC,GAAGgP,WAAW1N,EAAO,IAAuC,IAAhCvB,EAAMC,GAAG6X,SAASvW,EAAO,GAC1EH,EAA2D,IAA7BpB,EAAMC,EAAI,GAAG6X,SAAS,GAC1D,OAAIlW,GAAcR,EACTG,EAAO,EAETA,CACT,C,iNAvMAtB,EAAA61C,6BAAA,SAA6C91C,EAAkCC,EAAiB2B,EAAiBR,EAAyBW,GAGxI,MAAMN,EAAqB,GAE3B,IAAK,IAAIQ,EAAI,EAAGA,EAAIjC,EAAM0D,OAAS,EAAGzB,IAAK,CAEzC,IAAIE,EAAIF,EACJG,EAAWpC,EAAM0J,MAAMvH,GAC3B,IAAKC,EAASmjB,UACZ,SAIF,MAAMvjB,EAA6B,CAAChC,EAAM0J,IAAIzH,IAC9C,KAAOE,EAAInC,EAAM0D,QAAUtB,EAASmjB,WAClCvjB,EAAaiE,KAAK7D,GAClBA,EAAWpC,EAAM0J,MAAMvH,GAKzB,GAAIf,GAAmBa,GAAKb,EAAkBe,EAAG,CAC/CF,GAAKD,EAAa0B,OAAS,EAC3B,Q,CAIF,IAAIrB,EAAgB,EAChBC,EAAUf,EAA4BS,EAAcK,EAAepC,GACnEyR,EAAe,EACfC,EAAS,EACb,KAAOD,EAAe1P,EAAa0B,QAAQ,CACzC,MAAM1D,EAAuBuB,EAA4BS,EAAc0P,EAAczR,GAC/EmB,EAAoBpB,EAAuB2R,EAC3ClQ,EAAqBG,EAAUU,EAC/BL,EAAcJ,KAAKgP,IAAIzP,EAAmBK,GAEhDO,EAAaK,GAAei0C,cAAct0C,EAAa0P,GAAeC,EAAQrP,EAASL,GAAA,GAEvFK,GAAWL,EACPK,IAAYV,IACdS,IACAC,EAAU,GAEZqP,GAAU1P,EACN0P,IAAW3R,IACb0R,IACAC,EAAS,GAIK,IAAZrP,GAAmC,IAAlBD,GAC2C,IAA1DL,EAAaK,EAAgB,GAAGyV,SAASlW,EAAU,KACrDI,EAAaK,GAAei0C,cAAct0C,EAAaK,EAAgB,GAAIT,EAAU,EAAGU,IAAW,GAAG,GAEtGN,EAAaK,EAAgB,GAAGm0C,QAAQ50C,EAAU,EAAGG,G,CAM3DC,EAAaK,GAAewsC,aAAavsC,EAASV,EAASG,GAG3D,IAAI6P,EAAgB,EACpB,IAAK,IAAI5R,EAAIgC,EAAa0B,OAAS,EAAG1D,EAAI,IACpCA,EAAIqC,GAAwD,IAAvCL,EAAahC,GAAGgP,oBADEhP,IAEzC4R,IAMAA,EAAgB,IAClBnQ,EAASwE,KAAKhE,EAAID,EAAa0B,OAASkO,GACxCnQ,EAASwE,KAAK2L,IAGhB3P,GAAKD,EAAa0B,OAAS,C,CAE7B,OAAOjC,CACT,EAOAxB,EAAA81C,4BAAA,SAA4C/1C,EAAkCC,GAC5E,MAAMsB,EAAmB,GAEzB,IAAIK,EAAoB,EACpBR,EAAoBnB,EAAS2B,GAC7BG,EAAoB,EACxB,IAAK,IAAIN,EAAI,EAAGA,EAAIzB,EAAM0D,OAAQjC,IAChC,GAAIL,IAAsBK,EAAG,CAC3B,MAAMF,EAAgBtB,IAAW2B,GAGjC5B,EAAM48B,gBAAgB3uB,KAAK,CACzB8H,MAAOtU,EAAIM,EACXoZ,OAAQ5Z,IAGVE,GAAKF,EAAgB,EACrBQ,GAAqBR,EACrBH,EAAoBnB,IAAW2B,E,MAE/BL,EAAO0E,KAAKxE,GAGhB,MAAO,CACLw0C,OAAA10C,EACA40C,aAAcp0C,EAElB,EAQA9B,EAAA+1C,2BAAA,SAA2Ch2C,EAAkCC,GAE3E,MAAMsB,EAA+B,GACrC,IAAK,IAAIK,EAAI,EAAGA,EAAI3B,EAAUyD,OAAQ9B,IACpCL,EAAe0E,KAAKjG,EAAM0J,IAAIzJ,EAAU2B,KAI1C,IAAK,IAAI3B,EAAI,EAAGA,EAAIsB,EAAemC,OAAQzD,IACzCD,EAAMwJ,IAAIvJ,EAAGsB,EAAetB,IAE9BD,EAAM0D,OAASzD,EAAUyD,MAC3B,EAgBAzD,EAAAm2C,+BAAA,SAA+Cp2C,EAA4BC,EAAiB2B,GAC1F,MAAMR,EAA2B,GAC3BW,EAAc/B,EAAawM,KAAI,CAAC5K,EAAGR,IAAMG,EAA4BvB,EAAcoB,EAAGnB,KAAUk3C,QAAO,CAACn3C,EAAGC,IAAMD,EAAIC,IAI3H,IAAIwB,EAAS,EACTQ,EAAU,EACVE,EAAiB,EACrB,KAAOA,EAAiBJ,GAAa,CACnC,GAAIA,EAAcI,EAAiBP,EAAS,CAE1CR,EAAe6E,KAAKlE,EAAcI,GAClC,K,CAEFV,GAAUG,EACV,MAAMQ,EAAmBb,EAA4BvB,EAAciC,EAAShC,GACxEwB,EAASW,IACXX,GAAUW,EACVH,KAEF,MAAMD,EAA8D,IAA/ChC,EAAaiC,GAAS6V,SAASrW,EAAS,GACzDO,GACFP,IAEF,MAAMY,EAAaL,EAAeJ,EAAU,EAAIA,EAChDR,EAAe6E,KAAK5D,GACpBF,GAAkBE,C,CAGpB,OAAOjB,CACT,EAEAnB,EAAAs2C,4BAAAh1C,CAAAA,E,mFC3MA,MAAAK,EAAAL,EAAA,MACAH,EAAAG,EAAA,KAEAQ,EAAAR,EAAA,MAQA,MAAaE,UAAkBL,EAAAoB,WAW7BtH,WAAAA,CACmB8E,EACAC,GAEjBwC,QAHiB,KAAAmM,gBAAA5O,EACA,KAAAgK,eAAA/J,EARF,KAAAm3C,kBAAoB59C,KAAKsK,SAAS,IAAIlC,EAAA2I,cACvC,KAAAoZ,iBAAmBnqB,KAAK49C,kBAAkB3sC,MAUxDjR,KAAK8b,QACL9b,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,cAAc,IAAMjjB,KAAKqH,OAAOrH,KAAKwQ,eAAevJ,KAAMjH,KAAKwQ,eAAenL,SACxIrF,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,gBAAgB,IAAMjjB,KAAK47C,kBACvF,CAEO9/B,KAAAA,GACL9b,KAAK69C,QAAU,IAAIt1C,EAAAwyC,QAAA,EAAa/6C,KAAKoV,gBAAiBpV,KAAKwQ,gBAC3DxQ,KAAK69C,QAAQ9B,mBAIb/7C,KAAK89C,KAAO,IAAIv1C,EAAAwyC,QAAA,EAAc/6C,KAAKoV,gBAAiBpV,KAAKwQ,gBACzDxQ,KAAKkqB,cAAgBlqB,KAAK69C,QAC1B79C,KAAK49C,kBAAkBnpC,KAAK,CAC1B2V,aAAcpqB,KAAK69C,QACnBE,eAAgB/9C,KAAK89C,OAGvB99C,KAAK47C,eACP,CAKA,OAAAz3B,GACE,OAAOnkB,KAAK89C,IACd,CAKA,UAAAvgC,GACE,OAAOvd,KAAKkqB,aACd,CAKA,UAAA4F,GACE,OAAO9vB,KAAK69C,OACd,CAKO7H,oBAAAA,GACDh2C,KAAKkqB,gBAAkBlqB,KAAK69C,UAGhC79C,KAAK69C,QAAQzrC,EAAIpS,KAAK89C,KAAK1rC,EAC3BpS,KAAK69C,QAAQxrC,EAAIrS,KAAK89C,KAAKzrC,EAI3BrS,KAAK89C,KAAK/1B,kBACV/nB,KAAK89C,KAAK12C,QACVpH,KAAKkqB,cAAgBlqB,KAAK69C,QAC1B79C,KAAK49C,kBAAkBnpC,KAAK,CAC1B2V,aAAcpqB,KAAK69C,QACnBE,eAAgB/9C,KAAK89C,OAEzB,CAKO/H,iBAAAA,CAAkBvvC,GACnBxG,KAAKkqB,gBAAkBlqB,KAAK89C,OAKhC99C,KAAK89C,KAAK/B,iBAAiBv1C,GAC3BxG,KAAK89C,KAAK1rC,EAAIpS,KAAK69C,QAAQzrC,EAC3BpS,KAAK89C,KAAKzrC,EAAIrS,KAAK69C,QAAQxrC,EAC3BrS,KAAKkqB,cAAgBlqB,KAAK89C,KAC1B99C,KAAK49C,kBAAkBnpC,KAAK,CAC1B2V,aAAcpqB,KAAK89C,KACnBC,eAAgB/9C,KAAK69C,UAEzB,CAOOx2C,MAAAA,CAAOb,EAAiBC,GAC7BzG,KAAK69C,QAAQx2C,OAAOb,EAASC,GAC7BzG,KAAK89C,KAAKz2C,OAAOb,EAASC,GAC1BzG,KAAK47C,cAAcp1C,EACrB,CAMOo1C,aAAAA,CAAcp1C,GACnBxG,KAAK69C,QAAQjC,cAAcp1C,GAC3BxG,KAAK89C,KAAKlC,cAAcp1C,EAC1B,EApHFC,EAAAu3C,UAAA/1C,CAAAA,E,iFCVA,MAAAG,EAAAL,EAAA,KACAH,EAAAG,EAAA,KACAQ,EAAAR,EAAA,MAKA,MAAaE,UAAiBM,EAAA4tB,cAA9Bz0B,WAAAA,G,oBAQS,KAAA64B,QAAU,EACV,KAAAvlB,GAAK,EACL,KAAAwgB,GAAK,EACL,KAAA5f,SAA2B,IAAIrN,EAAAsyC,cAC/B,KAAArgB,aAAe,EAoExB,CA9ES,mBAAA0gB,CAAoB10C,GACzB,MAAMC,EAAM,IAAIwB,EAEhB,OADAxB,EAAIi0B,gBAAgBl0B,GACbC,CACT,CAQOg0B,UAAAA,GACL,OAAsB,QAAfz6B,KAAKu6B,OACd,CAEOjc,QAAAA,GACL,OAAOte,KAAKu6B,SAAW,EACzB,CAEOrF,QAAAA,GACL,OAAmB,QAAfl1B,KAAKu6B,QACAv6B,KAAKw6B,aAEK,QAAfx6B,KAAKu6B,SAAA,EACAnyB,EAAAgsC,qBAAmC,QAAfp0C,KAAKu6B,SAE3B,EACT,CAOOzC,OAAAA,GACL,OAAQ93B,KAAKy6B,aACTz6B,KAAKw6B,aAAavT,WAAWjnB,KAAKw6B,aAAatwB,OAAS,GACzC,QAAflK,KAAKu6B,OACX,CAEOG,eAAAA,CAAgBl0B,GACrBxG,KAAKgV,GAAKxO,EAAMoB,EAAAy1C,sBAChBr9C,KAAKw1B,GAAK,EACV,IAAI/uB,GAAA,EAEJ,GAAID,EAAMoB,EAAA01C,sBAAsBpzC,OAAS,EACvCzD,GAAA,OAEG,GAA2C,IAAvCD,EAAMoB,EAAA01C,sBAAsBpzC,OAAc,CACjD,MAAMnC,EAAOvB,EAAMoB,EAAA01C,sBAAsBr2B,WAAW,GAGpD,GAAI,OAAUlf,GAAQA,GAAQ,MAAQ,CACpC,MAAMK,EAAS5B,EAAMoB,EAAA01C,sBAAsBr2B,WAAW,GAClD,OAAU7e,GAAUA,GAAU,MAChCpI,KAAKu6B,QAA6B,MAAjBxyB,EAAO,OAAkBK,EAAS,MAAS,MAAY5B,EAAMoB,EAAA21C,wBAA0B,GAGxG92C,GAAA,C,MAIFA,GAAA,C,MAIFzG,KAAKu6B,QAAU/zB,EAAMoB,EAAA01C,sBAAsBr2B,WAAW,GAAMzgB,EAAMoB,EAAA21C,wBAA0B,GAE1F92C,IACFzG,KAAKw6B,aAAeh0B,EAAMoB,EAAA01C,sBAC1Bt9C,KAAKu6B,QAAU,QAA4B/zB,EAAMoB,EAAA21C,wBAA0B,GAE/E,CAEO5iB,aAAAA,GACL,MAAO,CAAC36B,KAAKgV,GAAIhV,KAAKk1B,WAAYl1B,KAAKse,WAAYte,KAAK83B,UAC1D,EA/EFrxB,EAAA8O,SAAAtN,CAAAA,E,wUCRaxB,EAAAw3C,cAAgB,EAChBx3C,EAAAy3C,aAAe,IAAaz3C,EAAAw3C,eAAiB,EAC7Cx3C,EAAA03C,YAAc,EAEd13C,EAAA42C,qBAAuB,EACvB52C,EAAA62C,qBAAuB,EACvB72C,EAAA82C,sBAAwB,EACxB92C,EAAAozC,qBAAuB,EAOvBpzC,EAAA00C,eAAiB,GACjB10C,EAAAiuC,gBAAkB,EAClBjuC,EAAAguC,eAAiB,EAOjBhuC,EAAA0uB,qBAAuB,IACvB1uB,EAAA40C,sBAAwB,EACxB50C,EAAAqzC,qBAAuB,EAAE,E,gFCzBtC,MAAA1xC,EAAAL,EAAA,MACAH,EAAAG,EAAA,KAGA,MAAaQ,EAOX,MAAAuyB,GAA0B,OAAO96B,KAAKo+C,GAAK,CAK3C18C,WAAAA,CACS8E,GAAA,KAAAinB,KAAAjnB,EAVF,KAAA63C,YAAA,EACU,KAAA1G,aAA8B,GAE9B,KAAAyG,IAAc71C,EAAO+1C,UAGrB,KAAAC,WAAav+C,KAAKsK,SAAS,IAAIlC,EAAA2I,cAChC,KAAA6c,UAAY5tB,KAAKu+C,WAAWttC,KAK5C,CAEO/N,OAAAA,GACDlD,KAAKq+C,aAGTr+C,KAAKq+C,YAAA,EACLr+C,KAAKytB,MAAQ,EAEbztB,KAAKu+C,WAAW9pC,QAAA,EAChB7M,EAAA+L,cAAa3T,KAAK23C,cAClB33C,KAAK23C,aAAaztC,OAAS,EAC7B,CAEOI,QAAAA,CAAgC9D,GAErC,OADAxG,KAAK23C,aAAalrC,KAAKjG,GAChBA,CACT,EAhCFC,EAAAw2C,OAAA10C,EACiBA,EAAA+1C,QAAU,CAAC,E,kGCEf73C,EAAAmsC,SAAoD,CAAC,EAKrDnsC,EAAAmvC,gBAAwCnvC,EAAAmsC,SAAY15B,EAYjEzS,EAAAmsC,SAAA,GAAgB,CACd,IAAK,IACLnqC,EAAK,IACLiQ,EAAK,IACL9P,EAAK,IACLC,EAAK,IACLrC,EAAK,IACL2R,EAAK,IACLG,EAAK,IACL3P,EAAK,IACLZ,EAAK,IACL4uB,EAAK,IACL9d,EAAK,IACLrQ,EAAK,IACL+P,EAAK,IACLhQ,EAAK,IACLN,EAAK,IACLoQ,EAAK,IACL4e,EAAK,IACLrvB,EAAK,IACLQ,EAAK,IACL3B,EAAK,IACLyR,EAAK,IACLE,EAAK,IACLO,EAAK,IACLvG,EAAK,IACLC,EAAK,IACLwkB,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPpwB,EAAAmsC,SAAA35B,EAAgB,CACd,IAAK,KAOPxS,EAAAmsC,SAAA15B,OAAA,EAOAzS,EAAAmsC,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPnsC,EAAAmsC,SAAAn6B,EACAhS,EAAAmsC,SAAA,GAAgB,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPnsC,EAAAmsC,SAAA55B,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPvS,EAAAmsC,SAAA4L,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP/3C,EAAAmsC,SAAA7b,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPtwB,EAAAmsC,SAAA6L,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPh4C,EAAAmsC,SAAAh6B,EACAnS,EAAAmsC,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPnsC,EAAAmsC,SAAA8L,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPj4C,EAAAmsC,SAAAje,EACAluB,EAAAmsC,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPnsC,EAAAmsC,SAAA,KAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL9pC,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,M,aCrPP,IAAiBf,EA2EAK,EAkEAR,E,+EA7IjB,SAAiBpB,GAEFA,EAAAm4C,IAAM,KAENn4C,EAAAo4C,IAAM,IAENp4C,EAAAq4C,IAAM,IAENr4C,EAAA0gB,IAAM,IAEN1gB,EAAAs4C,IAAM,IAENt4C,EAAAu4C,IAAM,IAENv4C,EAAAw4C,IAAM,IAENx4C,EAAA6pC,IAAM,IAEN7pC,EAAAoqC,GAAM,KAENpqC,EAAAsqC,GAAM,KAENtqC,EAAA+pC,GAAM,KAEN/pC,EAAAiqC,GAAM,KAENjqC,EAAAkqC,GAAM,KAENlqC,EAAA2gB,GAAM,KAEN3gB,EAAAwqC,GAAM,IAENxqC,EAAA0qC,GAAM,IAEN1qC,EAAAy4C,IAAM,IAENz4C,EAAA04C,IAAM,IAEN14C,EAAA24C,IAAM,IAEN34C,EAAA44C,IAAM,IAEN54C,EAAA64C,IAAM,IAEN74C,EAAA84C,IAAM,IAEN94C,EAAA+4C,IAAM,IAEN/4C,EAAAg5C,IAAM,IAENh5C,EAAAi5C,IAAM,IAENj5C,EAAAk5C,GAAM,IAENl5C,EAAAm5C,IAAM,IAENn5C,EAAAsW,IAAM,IAENtW,EAAAo5C,GAAM,IAENp5C,EAAAq5C,GAAM,IAENr5C,EAAAs5C,GAAM,IAENt5C,EAAAu5C,GAAM,IAENv5C,EAAAw5C,GAAM,IAENx5C,EAAA4qB,IAAM,GACpB,CArED,CAAiBrpB,IAAEtB,EAAAoW,GAAF9U,EAAE,KA2EnB,SAAiBvB,GAEFA,EAAAy5C,IAAM,IAENz5C,EAAA05C,IAAM,IAEN15C,EAAA25C,IAAM,IAEN35C,EAAA45C,IAAM,IAEN55C,EAAA6qC,IAAM,IAEN7qC,EAAA8qC,IAAM,IAEN9qC,EAAA65C,IAAM,IAEN75C,EAAA85C,IAAM,IAEN95C,EAAAgrC,IAAM,IAENhrC,EAAA+5C,IAAM,IAEN/5C,EAAAg6C,IAAM,IAENh6C,EAAAi6C,IAAM,IAENj6C,EAAAk6C,IAAM,IAENl6C,EAAAm6C,GAAK,IAELn6C,EAAAo6C,IAAM,IAENp6C,EAAAq6C,IAAM,IAENr6C,EAAAs6C,IAAM,IAENt6C,EAAAu6C,IAAM,IAENv6C,EAAAw6C,IAAM,IAENx6C,EAAAy6C,IAAM,IAENz6C,EAAA06C,IAAM,IAEN16C,EAAA26C,GAAK,IAEL36C,EAAA46C,IAAM,IAEN56C,EAAA66C,IAAM,IAEN76C,EAAA86C,IAAM,IAEN96C,EAAA+6C,KAAO,IAEP/6C,EAAAg7C,IAAM,IAENh7C,EAAAi7C,IAAM,IAENj7C,EAAAyW,GAAK,IAELzW,EAAAk7C,IAAM,IAENl7C,EAAAm7C,GAAK,IAELn7C,EAAAo7C,IAAM,GACpB,CAjED,CAAiBx5C,IAAE3B,EAAA2qC,GAAFhpC,EAAE,KAkEnB,SAAiB5B,GACFA,EAAAyW,GAAK,GAAGlV,EAAG+U,OACzB,CAFD,CAAiBlV,IAAUnB,EAAAuW,WAAVpV,EAAU,M,+FC/I3B,MAAAQ,EAAAL,EAAA,MAGMH,EAA2D,CAE/D,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KAGV,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,KAAM,KACZ,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAM,MAGdnB,EAAAqgB,sBAAA,SACEtgB,EACAC,EACAsB,EACAQ,GAEA,MAAMN,EAA0B,CAC9BzD,KAAM,EAGNkgB,QAAA,EAEA3jB,SAAA,GAEI0H,GAAajC,EAAG6d,SAAW,EAAI,IAAM7d,EAAG4d,OAAS,EAAI,IAAM5d,EAAG0d,QAAU,EAAI,IAAM1d,EAAGwgB,QAAU,EAAI,GACzG,OAAQxgB,EAAG+gB,SACT,KAAK,EACY,sBAAX/gB,EAAGzF,IAEHkH,EAAOlH,IADL0F,EACW2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAGN,wBAAXtW,EAAGzF,IAERkH,EAAOlH,IADL0F,EACW2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAGN,yBAAXtW,EAAGzF,IAERkH,EAAOlH,IADL0F,EACW2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAGN,wBAAXtW,EAAGzF,MAERkH,EAAOlH,IADL0F,EACW2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,MAG1B,MACF,KAAK,EAEH,GAAItW,EAAG4d,OAAQ,CACbnc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM1U,EAAAyU,GAAGuU,IACzB,K,CAEFnpB,EAAOlH,IAAMqH,EAAAyU,GAAGuU,IAChB,MACF,KAAK,EAEH,GAAI5qB,EAAG6d,SAAU,CACfpc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,KACtB,K,CAEF7U,EAAOlH,IAAMqH,EAAAyU,GAAGi0B,GAChB7oC,EAAOyc,QAAA,EACP,MACF,KAAK,GAEHzc,EAAOlH,IAAMyF,EAAG4d,OAAShc,EAAAyU,GAAGC,IAAM1U,EAAAyU,GAAGsK,GAAK/e,EAAAyU,GAAGsK,GAC7Clf,EAAOyc,QAAA,EACP,MACF,KAAK,GAEHzc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IACZtW,EAAG4d,SACLnc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM1U,EAAAyU,GAAGC,KAE3B7U,EAAOyc,QAAA,EACP,MACF,KAAK,GAEH,GAAIle,EAAGwgB,QACL,MAEEve,GACFR,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAI5CR,EAAOlH,MAAQqH,EAAAyU,GAAGC,IAAM,UAC1B7U,EAAOlH,IAAMqH,EAAAyU,GAAGC,KAAO/U,EAAQ,IAAM,WAGvCE,EAAOlH,IADE0F,EACI2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAItW,EAAGwgB,QACL,MAEEve,GACFR,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAI5CR,EAAOlH,MAAQqH,EAAAyU,GAAGC,IAAM,UAC1B7U,EAAOlH,IAAMqH,EAAAyU,GAAGC,KAAO/U,EAAQ,IAAM,WAGvCE,EAAOlH,IADE0F,EACI2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAItW,EAAGwgB,QACL,MAEEve,GACFR,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAI3CV,GAASE,EAAOlH,MAAQqH,EAAAyU,GAAGC,IAAM,UACpC7U,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,UAGxB7U,EAAOlH,IADE0F,EACI2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAItW,EAAGwgB,QACL,MAEEve,GACFR,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAI3CV,GAASE,EAAOlH,MAAQqH,EAAAyU,GAAGC,IAAM,UACpC7U,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,UAGxB7U,EAAOlH,IADE0F,EACI2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,GAEEtW,EAAG6d,UAAa7d,EAAG0d,UAGtBjc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,GAGD7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEnCL,EAAAyU,GAAGC,IAAM,MAExB,MACF,KAAK,GAGD7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IACvChC,EACI2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,GAGD7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IACvChC,EACI2B,EAAAyU,GAAGC,IAAM,KAET1U,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,GAECtW,EAAG6d,SACLpc,EAAOzD,KAAO,EACLgC,EAAG0d,QACZjc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEhDR,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,MAExB,MACF,KAAK,GAECtW,EAAG6d,SACLpc,EAAOzD,KAAO,EACLgC,EAAG0d,QACZjc,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEhDR,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM,MAExB,MACF,KAAK,IAGD7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEnCL,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEnCL,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEnCL,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,OAASrU,EAAY,GAAK,IAEnCL,EAAAyU,GAAGC,IAAM,KAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,KAAK,IAED7U,EAAOlH,IADL0H,EACWL,EAAAyU,GAAGC,IAAM,QAAUrU,EAAY,GAAK,IAEpCL,EAAAyU,GAAGC,IAAM,OAExB,MACF,QAEE,IAAItW,EAAG0d,SAAY1d,EAAG6d,UAAa7d,EAAG4d,QAAW5d,EAAGwgB,QAiB7C,GAAMjf,IAASQ,IAAoB/B,EAAG4d,QAAW5d,EAAGwgB,SA4BhDjf,GAAUvB,EAAG4d,QAAW5d,EAAG0d,SAAY1d,EAAG6d,WAAY7d,EAAGwgB,QAIzDxgB,EAAGzF,MAAQyF,EAAG0d,UAAY1d,EAAG4d,SAAW5d,EAAGwgB,SAAWxgB,EAAG+gB,SAAW,IAAwB,IAAlB/gB,EAAGzF,IAAImJ,OAG1FjC,EAAOlH,IAAMyF,EAAGzF,IACPyF,EAAGzF,KAAOyF,EAAG0d,UACP,MAAX1d,EAAGzF,MACLkH,EAAOlH,IAAMqH,EAAAyU,GAAGkjC,IAEH,MAAXv5C,EAAGzF,MACLkH,EAAOlH,IAAMqH,EAAAyU,GAAG8hC,MAZC,KAAfn4C,EAAG+gB,UACLtf,EAAOzD,KAAO,OA9BkD,CAElE,MAAMiC,EAAamB,EAAqBpB,EAAG+gB,SACrCxf,EAAM,MAAAtB,OAAA,EAAAA,EAAcD,EAAG6d,SAAe,EAAJ,GACxC,GAAItc,EACFE,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM/U,OACjB,GAAIvB,EAAG+gB,SAAW,IAAM/gB,EAAG+gB,SAAW,GAAI,CAC/C,MAAM9gB,EAAUD,EAAG0d,QAAU1d,EAAG+gB,QAAU,GAAK/gB,EAAG+gB,QAAU,GAC5D,IAAIxf,EAAY2f,OAAOC,aAAalhB,GAChCD,EAAG6d,WACLtc,EAAYA,EAAU85C,eAExB55C,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAM/U,C,MACjB,GAAmB,KAAfvB,EAAG+gB,QACZtf,EAAOlH,IAAMqH,EAAAyU,GAAGC,KAAOtW,EAAG0d,QAAU9b,EAAAyU,GAAG8hC,IAAM,UACxC,GAAe,SAAXn4C,EAAGzF,KAAkByF,EAAGqmC,KAAKuK,WAAW,OAAQ,CAMzD,IAAI3wC,EAAYD,EAAGqmC,KAAKxM,MAAM,EAAG,GAC5B75B,EAAG6d,WACN5d,EAAYA,EAAUq7C,eAExB75C,EAAOlH,IAAMqH,EAAAyU,GAAGC,IAAMrW,EACtBwB,EAAOyc,QAAA,C,OA1CLle,EAAG+gB,SAAW,IAAM/gB,EAAG+gB,SAAW,GACpCtf,EAAOlH,IAAM2mB,OAAOC,aAAanhB,EAAG+gB,QAAU,IACtB,KAAf/gB,EAAG+gB,QACZtf,EAAOlH,IAAMqH,EAAAyU,GAAG8hC,IACPn4C,EAAG+gB,SAAW,IAAM/gB,EAAG+gB,SAAW,GAE3Ctf,EAAOlH,IAAM2mB,OAAOC,aAAanhB,EAAG+gB,QAAU,GAAK,IAC3B,KAAf/gB,EAAG+gB,QACZtf,EAAOlH,IAAMqH,EAAAyU,GAAGuU,IACQ,MAAf5qB,EAAG+gB,QACZtf,EAAOlH,IAAMqH,EAAAyU,GAAGC,IACQ,MAAftW,EAAG+gB,QACZtf,EAAOlH,IAAMqH,EAAAyU,GAAG+iC,GACQ,MAAfp5C,EAAG+gB,UACZtf,EAAOlH,IAAMqH,EAAAyU,GAAGgjC,IAiDxB,OAAO53C,CACT,CAAC,E,wICjYDxB,EAAA2tC,oBAAA,SAAoC5tC,GAClC,OAAIA,EAAY,OACdA,GAAa,MACNkhB,OAAOC,aAAiC,OAAnBnhB,GAAa,KAAgBkhB,OAAOC,aAAcnhB,EAAY,KAAS,QAE9FkhB,OAAOC,aAAanhB,EAC7B,EAOAC,EAAAs7C,cAAA,SAA8Bv7C,EAAmBC,EAAgB,EAAGsB,EAAcvB,EAAK0D,QACrF,IAAI9B,EAAS,GACb,IAAK,IAAIR,EAAInB,EAAOmB,EAAIG,IAAOH,EAAG,CAChC,IAAInB,EAAYD,EAAKoB,GACjBnB,EAAY,OAMdA,GAAa,MACb2B,GAAUsf,OAAOC,aAAiC,OAAnBlhB,GAAa,KAAgBihB,OAAOC,aAAclhB,EAAY,KAAS,QAEtG2B,GAAUsf,OAAOC,aAAalhB,E,CAGlC,OAAO2B,CACT,EAMA3B,EAAAqkC,cAAA,MAAAppC,WAAAA,GACU,KAAAsgD,SAAmB,CAkE7B,CA7DS56C,KAAAA,GACLpH,KAAKgiD,SAAW,CAClB,CAUOrO,MAAAA,CAAOntC,EAAeC,GAC3B,MAAMsB,EAASvB,EAAM0D,OAErB,IAAKnC,EACH,OAAO,EAGT,IAAIK,EAAO,EACPR,EAAW,EAGf,GAAI5H,KAAKgiD,SAAU,CACjB,MAAMj6C,EAASvB,EAAMygB,WAAWrf,KAC5B,OAAUG,GAAUA,GAAU,MAChCtB,EAAO2B,KAAqC,MAA1BpI,KAAKgiD,SAAW,OAAkBj6C,EAAS,MAAS,OAGtEtB,EAAO2B,KAAUpI,KAAKgiD,SACtBv7C,EAAO2B,KAAUL,GAEnB/H,KAAKgiD,SAAW,C,CAGlB,IAAK,IAAIz5C,EAAIX,EAAUW,EAAIR,IAAUQ,EAAG,CACtC,MAAMX,EAAOpB,EAAMygB,WAAW1e,GAE9B,GAAI,OAAUX,GAAQA,GAAQ,MAA9B,CACE,KAAMW,GAAKR,EAET,OADA/H,KAAKgiD,SAAWp6C,EACTQ,EAET,MAAMH,EAASzB,EAAMygB,WAAW1e,GAC5B,OAAUN,GAAUA,GAAU,MAChCxB,EAAO2B,KAA4B,MAAjBR,EAAO,OAAkBK,EAAS,MAAS,OAG7DxB,EAAO2B,KAAUR,EACjBnB,EAAO2B,KAAUH,E,MAIR,QAATL,IAIJnB,EAAO2B,KAAUR,E,CAEnB,OAAOQ,CACT,GAMF3B,EAAAukC,YAAA,MAAAtpC,WAAAA,GACS,KAAAugD,QAAsB,IAAIC,WAAW,EAgO9C,CA3NS96C,KAAAA,GACLpH,KAAKiiD,QAAQlpB,KAAK,EACpB,CAUO4a,MAAAA,CAAOntC,EAAmBC,GAC/B,MAAMsB,EAASvB,EAAM0D,OAErB,IAAKnC,EACH,OAAO,EAGT,IACIK,EACAR,EACAW,EACAN,EAJAQ,EAAO,EAKPE,EAAY,EACZC,EAAW,EAGf,GAAI5I,KAAKiiD,QAAQ,GAAI,CACnB,IAAI75C,GAAA,EACAR,EAAK5H,KAAKiiD,QAAQ,GACtBr6C,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAC3E,IACIW,EADAN,EAAM,EAEV,MAAQM,EAA4B,GAAtBvI,KAAKiiD,UAAUh6C,KAAgBA,EAAM,GACjDL,IAAO,EACPA,GAAMW,EAGR,MAAMI,EAAsC,MAAV,IAAlB3I,KAAKiiD,QAAQ,IAAwB,EAAmC,MAAV,IAAlBjiD,KAAKiiD,QAAQ,IAAwB,EAAI,EAC/Fz5C,EAAUG,EAAOV,EACvB,KAAOW,EAAWJ,GAAS,CACzB,GAAII,GAAYb,EACd,OAAO,EAGT,GADAQ,EAAM/B,EAAMoC,KACS,MAAV,IAANL,GAAsB,CAEzBK,IACAR,GAAA,EACA,K,CAGApI,KAAKiiD,QAAQh6C,KAASM,EACtBX,IAAO,EACPA,GAAY,GAANW,C,CAGLH,IAEU,IAATO,EACEf,EAAK,IAEPgB,IAEAnC,EAAOgC,KAAUb,EAED,IAATe,EACLf,EAAK,MAAWA,GAAM,OAAUA,GAAM,OAAkB,QAAPA,IAGnDnB,EAAOgC,KAAUb,GAGfA,EAAK,OAAYA,EAAK,UAGxBnB,EAAOgC,KAAUb,IAIvB5H,KAAKiiD,QAAQlpB,KAAK,E,CAIpB,MAAMvwB,EAAWT,EAAS,EAC1B,IAAIc,EAAID,EACR,KAAOC,EAAId,GAAQ,CAejB,SAAOc,EAAIL,IACiB,KAApBJ,EAAQ5B,EAAMqC,KACU,KAAxBjB,EAAQpB,EAAMqC,EAAI,KACM,KAAxBN,EAAQ/B,EAAMqC,EAAI,KACM,KAAxBZ,EAAQzB,EAAMqC,EAAI,MAExBpC,EAAOgC,KAAUL,EACjB3B,EAAOgC,KAAUb,EACjBnB,EAAOgC,KAAUF,EACjB9B,EAAOgC,KAAUR,EACjBY,GAAK,EAOP,GAHAT,EAAQ5B,EAAMqC,KAGVT,EAAQ,IACV3B,EAAOgC,KAAUL,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAIS,GAAKd,EAEP,OADA/H,KAAKiiD,QAAQ,GAAK75C,EACXK,EAGT,GADAb,EAAQpB,EAAMqC,KACS,MAAV,IAARjB,GAAwB,CAE3BiB,IACA,Q,CAGF,GADAF,GAAqB,GAARP,IAAiB,EAAa,GAARR,EAC/Be,EAAY,IAAM,CAEpBE,IACA,Q,CAEFpC,EAAOgC,KAAUE,C,MAGZ,GAAuB,MAAV,IAARP,GAAwB,CAClC,GAAIS,GAAKd,EAEP,OADA/H,KAAKiiD,QAAQ,GAAK75C,EACXK,EAGT,GADAb,EAAQpB,EAAMqC,KACS,MAAV,IAARjB,GAAwB,CAE3BiB,IACA,Q,CAEF,GAAIA,GAAKd,EAGP,OAFA/H,KAAKiiD,QAAQ,GAAK75C,EAClBpI,KAAKiiD,QAAQ,GAAKr6C,EACXa,EAGT,GADAF,EAAQ/B,EAAMqC,KACS,MAAV,IAARN,GAAwB,CAE3BM,IACA,Q,CAGF,GADAF,GAAqB,GAARP,IAAiB,IAAc,GAARR,IAAiB,EAAa,GAARW,EACtDI,EAAY,MAAWA,GAAa,OAAUA,GAAa,OAAyB,QAAdA,EAExE,SAEFlC,EAAOgC,KAAUE,C,MAGZ,GAAuB,MAAV,IAARP,GAAwB,CAClC,GAAIS,GAAKd,EAEP,OADA/H,KAAKiiD,QAAQ,GAAK75C,EACXK,EAGT,GADAb,EAAQpB,EAAMqC,KACS,MAAV,IAARjB,GAAwB,CAE3BiB,IACA,Q,CAEF,GAAIA,GAAKd,EAGP,OAFA/H,KAAKiiD,QAAQ,GAAK75C,EAClBpI,KAAKiiD,QAAQ,GAAKr6C,EACXa,EAGT,GADAF,EAAQ/B,EAAMqC,KACS,MAAV,IAARN,GAAwB,CAE3BM,IACA,Q,CAEF,GAAIA,GAAKd,EAIP,OAHA/H,KAAKiiD,QAAQ,GAAK75C,EAClBpI,KAAKiiD,QAAQ,GAAKr6C,EAClB5H,KAAKiiD,QAAQ,GAAK15C,EACXE,EAGT,GADAR,EAAQzB,EAAMqC,KACS,MAAV,IAARZ,GAAwB,CAE3BY,IACA,Q,CAGF,GADAF,GAAqB,EAARP,IAAiB,IAAc,GAARR,IAAiB,IAAc,GAARW,IAAiB,EAAa,GAARN,EAC7EU,EAAY,OAAYA,EAAY,QAEtC,SAEFlC,EAAOgC,KAAUE,C,EAKrB,OAAOF,CACT,EAAC,E,gFChVH,MAAMV,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,QAEzCK,EAAiB,CACrB,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,SAIZ,IAAIR,EAsBJnB,EAAA07C,UAAA,MAGEzgD,WAAAA,GAEE,GAJc,KAAA0gD,QAAU,KAInBx6C,EAAO,CACVA,EAAQ,IAAIs6C,WAAW,OACvBt6C,EAAMmxB,KAAK,GACXnxB,EAAM,GAAK,EAEXA,EAAMmxB,KAAK,EAAG,EAAG,IACjBnxB,EAAMmxB,KAAK,EAAG,IAAM,KAIpBnxB,EAAMmxB,KAAK,EAAG,KAAQ,MACtBnxB,EAAM,MAAU,EAChBA,EAAM,MAAU,EAChBA,EAAMmxB,KAAK,EAAG,MAAQ,OACtBnxB,EAAM,OAAU,EAEhBA,EAAMmxB,KAAK,EAAG,MAAQ,OACtBnxB,EAAMmxB,KAAK,EAAG,MAAQ,OACtBnxB,EAAMmxB,KAAK,EAAG,MAAQ,OACtBnxB,EAAMmxB,KAAK,EAAG,MAAQ,OACtBnxB,EAAMmxB,KAAK,EAAG,MAAQ,OACtBnxB,EAAMmxB,KAAK,EAAG,MAAQ,OAOtB,IAAK,IAAIvyB,EAAI,EAAGA,EAAIuB,EAAcmC,SAAU1D,EAC1CoB,EAAMmxB,KAAK,EAAGhxB,EAAcvB,GAAG,GAAIuB,EAAcvB,GAAG,GAAK,E,CAG/D,CAEO2tC,OAAAA,CAAQ3tC,GACb,OAAIA,EAAM,GAAW,EACjBA,EAAM,IAAY,EAClBA,EAAM,MAAcoB,EAAMpB,GA9DlC,SAAkBA,EAAaC,GAC7B,IAEIsB,EAFAK,EAAM,EACNR,EAAMnB,EAAKyD,OAAS,EAExB,GAAI1D,EAAMC,EAAK,GAAG,IAAMD,EAAMC,EAAKmB,GAAK,GACtC,OAAO,EAET,KAAOA,GAAOQ,GAEZ,GADAL,EAAOK,EAAMR,GAAQ,EACjBpB,EAAMC,EAAKsB,GAAK,GAClBK,EAAML,EAAM,MACP,MAAIvB,EAAMC,EAAKsB,GAAK,IAGzB,OAAO,EAFPH,EAAMG,EAAM,C,CAKhB,OAAO,CACT,CAlBA,CA+DiBvB,EAAK4B,GAAwB,EACrC5B,GAAO,QAAWA,GAAO,QAAaA,GAAO,QAAWA,GAAO,OAAiB,EAC9E,CACT,EAAC,E,qFC5HH,MAAA4B,EAAAL,EAAA,MACAH,EAAAG,EAAA,KA6BA,MAAaQ,UAAoBX,EAAAoB,WAY/BtH,WAAAA,CAAoB8E,GAClByC,QADkB,KAAAo5C,QAAA77C,EAXZ,KAAAwgC,aAAwC,GACxC,KAAAsb,WAA2C,GAC3C,KAAAC,aAAe,EACf,KAAAC,cAAgB,EAChB,KAAAC,gBAAA,EACA,KAAAC,WAAa,EACb,KAAAC,eAAA,EAES,KAAA9c,eAAiB7lC,KAAKsK,SAAS,IAAIlC,EAAA2I,cACpC,KAAA+0B,cAAgB9lC,KAAK6lC,eAAe50B,KAIpD,CAEOg2B,eAAAA,GACLjnC,KAAK2iD,eAAA,CACP,CAKOpb,SAAAA,CAAU/gC,EAA2BC,GAI1C,QAAI,IAAAA,GAAoCzG,KAAK0iD,WAAaj8C,EAIxD,YADAzG,KAAK0iD,WAAa,GAWpB,GAPA1iD,KAAKuiD,cAAgB/7C,EAAK0D,OAC1BlK,KAAKgnC,aAAav6B,KAAKjG,GACvBxG,KAAKsiD,WAAW71C,UAAA,GAGhBzM,KAAK0iD,aAED1iD,KAAKyiD,eACP,OAQF,IAAI16C,EACJ,IAPA/H,KAAKyiD,gBAAA,EAOE16C,EAAQ/H,KAAKgnC,aAAa76B,SAAS,CACxCnM,KAAKqiD,QAAQt6C,GACb,MAAMvB,EAAKxG,KAAKsiD,WAAWn2C,QACvB3F,GAAIA,G,CAIVxG,KAAKuiD,aAAe,EACpBviD,KAAKwiD,cAAgB,WAGrBxiD,KAAKyiD,gBAAA,EACLziD,KAAK0iD,WAAa,CACpB,CAEOp8C,KAAAA,CAAME,EAA2BC,GACtC,GAAIzG,KAAKuiD,aApFa,IAqFpB,MAAM,IAAI73C,MAAM,+DAIlB,IAAK1K,KAAKgnC,aAAa98B,OAAQ,CAM7B,GALAlK,KAAKwiD,cAAgB,EAKjBxiD,KAAK2iD,cAMP,OALA3iD,KAAK2iD,eAAA,EACL3iD,KAAKuiD,cAAgB/7C,EAAK0D,OAC1BlK,KAAKgnC,aAAav6B,KAAKjG,GACvBxG,KAAKsiD,WAAW71C,KAAKhG,QACrBzG,KAAK4iD,cAIPl+C,YAAW,IAAM1E,KAAK4iD,e,CAGxB5iD,KAAKuiD,cAAgB/7C,EAAK0D,OAC1BlK,KAAKgnC,aAAav6B,KAAKjG,GACvBxG,KAAKsiD,WAAW71C,KAAKhG,EACvB,CA8BUm8C,WAAAA,CAAYp8C,EAAmB,EAAGC,GAAA,GAC1C,MAAMsB,EAAYvB,GAAYuiB,KAAKC,MACnC,KAAOhpB,KAAKgnC,aAAa98B,OAASlK,KAAKwiD,eAAe,CACpD,MAAMh8C,EAAOxG,KAAKgnC,aAAahnC,KAAKwiD,eAC9Bp6C,EAASpI,KAAKqiD,QAAQ77C,EAAMC,GAClC,GAAI2B,EAAQ,CAwBV,MAAM5B,EAAsCA,GAAeuiB,KAAKC,MAAQjhB,GAjKvD,GAkKbrD,YAAW,IAAM1E,KAAK4iD,YAAY,EAAGp8C,KACrCxG,KAAK4iD,YAAY76C,EAAWvB,GA0BhC,YAJA4B,EAAOxD,OAAM4B,IACXi1B,gBAAe,KAAO,MAAMj1B,CAAG,IACxB4sC,QAAQyP,SAAA,MACdp+C,KAAK+B,E,CAIV,MAAMoB,EAAK5H,KAAKsiD,WAAWtiD,KAAKwiD,eAKhC,GAJI56C,GAAIA,IACR5H,KAAKwiD,gBACLxiD,KAAKuiD,cAAgB/7C,EAAK0D,OAEtB6e,KAAKC,MAAQjhB,GArME,GAsMjB,K,CAGA/H,KAAKgnC,aAAa98B,OAASlK,KAAKwiD,eAG9BxiD,KAAKwiD,cArMuB,KAsM9BxiD,KAAKgnC,aAAehnC,KAAKgnC,aAAa3G,MAAMrgC,KAAKwiD,eACjDxiD,KAAKsiD,WAAatiD,KAAKsiD,WAAWjiB,MAAMrgC,KAAKwiD,eAC7CxiD,KAAKwiD,cAAgB,GAEvB99C,YAAW,IAAM1E,KAAK4iD,kBAEtB5iD,KAAKgnC,aAAa98B,OAAS,EAC3BlK,KAAKsiD,WAAWp4C,OAAS,EACzBlK,KAAKuiD,aAAe,EACpBviD,KAAKwiD,cAAgB,GAEvBxiD,KAAK6lC,eAAepxB,MACtB,EAhNFhO,EAAA4gC,YAAA9+B,CAAAA,E,gGC7BA,MAAMR,EAAU,qKAEVK,EAAW,aAiDjB,SAASR,EAAIpB,EAAWC,GACtB,MAAMsB,EAAIvB,EAAE3D,SAAS,IACfuF,EAAKL,EAAEmC,OAAS,EAAI,IAAMnC,EAAIA,EACpC,OAAQtB,GACN,KAAK,EACH,OAAOsB,EAAE,GACX,KAAK,EACH,OAAOK,EACT,KAAK,GACH,OAAQA,EAAKA,GAAIi4B,MAAM,EAAG,GAC5B,QACE,OAAOj4B,EAAKA,EAElB,CAjDA3B,EAAAuwC,WAAA,SAA2BxwC,GACzB,IAAKA,EAAM,OAEX,IAAIC,EAAMD,EAAKs7C,cACf,GAA4B,IAAxBr7C,EAAI+K,QAAQ,QAAe,CAE7B/K,EAAMA,EAAI45B,MAAM,GAChB,MAAM75B,EAAIuB,EAAQgvC,KAAKtwC,GACvB,GAAID,EAAG,CACL,MAAMC,EAAOD,EAAE,GAAK,GAAKA,EAAE,GAAK,IAAMA,EAAE,GAAK,KAAO,MACpD,MAAO,CACL6B,KAAKwiB,MAAM3iB,SAAS1B,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,IAAMC,EAAO,KAChE4B,KAAKwiB,MAAM3iB,SAAS1B,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,IAAMC,EAAO,KAChE4B,KAAKwiB,MAAM3iB,SAAS1B,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,IAAMC,EAAO,K,OAG/D,GAAyB,IAArBA,EAAI+K,QAAQ,OAErB/K,EAAMA,EAAI45B,MAAM,GACZj4B,EAAS2uC,KAAKtwC,IAAQ,CAAC,EAAG,EAAG,EAAG,IAAIyP,SAASzP,EAAIyD,SAAS,CAC5D,MAAM1D,EAAMC,EAAIyD,OAAS,EACnBnC,EAAmC,CAAC,EAAG,EAAG,GAChD,IAAK,IAAIK,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,MAAMR,EAAIM,SAASzB,EAAI45B,MAAM75B,EAAM4B,EAAG5B,EAAM4B,EAAI5B,GAAM,IACtDuB,EAAOK,GAAa,IAAR5B,EAAYoB,GAAK,EAAY,IAARpB,EAAYoB,EAAY,IAARpB,EAAYoB,GAAK,EAAIA,GAAK,C,CAE7E,OAAOG,C,CAOb,EAqBAtB,EAAAsW,YAAA,SAA4BvW,EAAiCC,EAAe,IAC1E,MAAOsB,EAAGK,EAAGG,GAAK/B,EAClB,MAAO,OAAOoB,EAAIG,EAAGtB,MAASmB,EAAIQ,EAAG3B,MAASmB,EAAIW,EAAG9B,IACvD,CAAC,E,qFCtBYA,EAAAq8C,cAAgB,K,gGClD7B,MAAA16C,EAAAL,EAAA,KACAH,EAAAG,EAAA,MACAQ,EAAAR,EAAA,MAEME,EAAgC,GAEtCxB,EAAAs8C,UAAA,MAAArhD,WAAAA,GACU,KAAAshD,UAA6C9uC,OAAO+uC,OAAO,MAC3D,KAAAC,QAAyBj7C,EACzB,KAAAk7C,OAAiB,EACjB,KAAAC,WAAqC,OACrC,KAAAC,OAA+B,CACrCrX,QAAA,EACAsX,aAAc,EACdC,aAAA,EA8GJ,CA3GSrgD,OAAAA,GACLlD,KAAKgjD,UAAY9uC,OAAO+uC,OAAO,MAC/BjjD,KAAKojD,WAAa,OAClBpjD,KAAKkjD,QAAUj7C,CACjB,CAEOu7C,eAAAA,CAAgBh9C,EAAeC,QAAA,IAChCzG,KAAKgjD,UAAUx8C,KACjBxG,KAAKgjD,UAAUx8C,GAAS,IAE1B,MAAMuB,EAAc/H,KAAKgjD,UAAUx8C,GAEnC,OADAuB,EAAY0E,KAAKhG,GACV,CACLvD,QAASA,KACP,MAAMsD,EAAeuB,EAAYyJ,QAAQ/K,IACnB,IAAlBD,GACFuB,EAAY0J,OAAOjL,EAAc,EAAE,EAI3C,CAEOi9C,YAAAA,CAAaj9C,GACdxG,KAAKgjD,UAAUx8C,WAAexG,KAAKgjD,UAAUx8C,EACnD,CAEOk9C,kBAAAA,CAAmBl9C,GACxBxG,KAAKojD,WAAa58C,CACpB,CAEOsV,KAAAA,GAEL,GAAI9b,KAAKkjD,QAAQh5C,OACf,IAAK,IAAI1D,EAAIxG,KAAKqjD,OAAOrX,OAAShsC,KAAKqjD,OAAOC,aAAe,EAAItjD,KAAKkjD,QAAQh5C,OAAS,EAAG1D,GAAK,IAAKA,EAClGxG,KAAKkjD,QAAQ18C,GAAGm9C,QAAA,GAGpB3jD,KAAKqjD,OAAOrX,QAAA,EACZhsC,KAAKkjD,QAAUj7C,EACfjI,KAAKmjD,OAAS,CAChB,CAEOS,IAAAA,CAAKp9C,EAAeC,GAKzB,GAHAzG,KAAK8b,QACL9b,KAAKmjD,OAAS38C,EACdxG,KAAKkjD,QAAUljD,KAAKgjD,UAAUx8C,IAAUyB,EACnCjI,KAAKkjD,QAAQh5C,OAGhB,IAAK,IAAI1D,EAAIxG,KAAKkjD,QAAQh5C,OAAS,EAAG1D,GAAK,EAAGA,IAC5CxG,KAAKkjD,QAAQ18C,GAAGo9C,KAAKn9C,QAHvBzG,KAAKojD,WAAWpjD,KAAKmjD,OAAQ,OAAQ18C,EAMzC,CAEOo9C,GAAAA,CAAIr9C,EAAmBC,EAAesB,GAC3C,GAAK/H,KAAKkjD,QAAQh5C,OAGhB,IAAK,IAAI9B,EAAIpI,KAAKkjD,QAAQh5C,OAAS,EAAG9B,GAAK,EAAGA,IAC5CpI,KAAKkjD,QAAQ96C,GAAGy7C,IAAIr9C,EAAMC,EAAOsB,QAHnC/H,KAAKojD,WAAWpjD,KAAKmjD,OAAQ,SAAO/6C,EAAA25C,eAAcv7C,EAAMC,EAAOsB,GAMnE,CAEO47C,MAAAA,CAAOn9C,EAAkBC,GAAA,GAC9B,GAAKzG,KAAKkjD,QAAQh5C,OAEX,CACL,IAAInC,GAAA,EACAK,EAAIpI,KAAKkjD,QAAQh5C,OAAS,EAC1BtC,GAAA,EAOJ,GANI5H,KAAKqjD,OAAOrX,SACd5jC,EAAIpI,KAAKqjD,OAAOC,aAAe,EAC/Bv7C,EAAgBtB,EAChBmB,EAAc5H,KAAKqjD,OAAOE,YAC1BvjD,KAAKqjD,OAAOrX,QAAA,IAETpkC,IAAA,IAAeG,EAAyB,CAC3C,KAAOK,GAAK,IACVL,EAAgB/H,KAAKkjD,QAAQ96C,GAAGu7C,OAAOn9C,IAAA,IACnCuB,GAFSK,IAIN,GAAIL,aAAyBqrC,QAIlC,OAHApzC,KAAKqjD,OAAOrX,QAAA,EACZhsC,KAAKqjD,OAAOC,aAAel7C,EAC3BpI,KAAKqjD,OAAOE,aAAA,EACLx7C,EAGXK,G,CAGF,KAAOA,GAAK,EAAGA,IAEb,GADAL,EAAgB/H,KAAKkjD,QAAQ96C,GAAGu7C,QAAA,GAC5B57C,aAAyBqrC,QAI3B,OAHApzC,KAAKqjD,OAAOrX,QAAA,EACZhsC,KAAKqjD,OAAOC,aAAel7C,EAC3BpI,KAAKqjD,OAAOE,aAAA,EACLx7C,C,MAhCX/H,KAAKojD,WAAWpjD,KAAKmjD,OAAQ,SAAU38C,GAoCzCxG,KAAKkjD,QAAUj7C,EACfjI,KAAKmjD,OAAS,CAChB,GAIF,MAAM16C,EAAe,IAAIb,EAAAk8C,OACzBr7C,EAAas7C,SAAS,GAMtBt9C,EAAAusC,WAAA,MAKEtxC,WAAAA,CAAoB8E,GAAA,KAAAw9C,SAAAx9C,EAJZ,KAAAsxC,MAAQ,GACR,KAAAmM,QAAmBx7C,EACnB,KAAAy7C,WAAA,CAEuF,CAExFN,IAAAA,CAAKp9C,GAKVxG,KAAKikD,QAAWz9C,EAAO0D,OAAS,GAAK1D,EAAOimC,OAAO,GAAMjmC,EAAO49B,QAAU37B,EAC1EzI,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,CACP,CAEOL,GAAAA,CAAIr9C,EAAmBC,EAAesB,GACvC/H,KAAKkkD,YAGTlkD,KAAK83C,QAAA,EAAS1vC,EAAA25C,eAAcv7C,EAAMC,EAAOsB,GACrC/H,KAAK83C,MAAM5tC,OAAS3B,EAAAu6C,gBACtB9iD,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,GAET,CAEOP,MAAAA,CAAOn9C,GACZ,IAAIC,GAAA,EACJ,GAAIzG,KAAKkkD,UACPz9C,GAAA,OACK,GAAID,IACTC,EAAMzG,KAAKgkD,SAAShkD,KAAK83C,MAAO93C,KAAKikD,SACjCx9C,aAAe2sC,SAGjB,OAAO3sC,EAAIhC,MAAK+B,IACdxG,KAAKikD,QAAUx7C,EACfzI,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,EACE19C,KAOb,OAHAxG,KAAKikD,QAAUx7C,EACfzI,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,EACEz9C,CACT,EAAC,E,yICvLH,MAAA2B,EAAAL,EAAA,KAEAH,EAAAG,EAAA,MACAQ,EAAAR,EAAA,MACAE,EAAAF,EAAA,MAgBA,MAAaU,EAGX/G,WAAAA,CAAY8E,GACVxG,KAAKmkD,MAAQ,IAAIjC,WAAW17C,EAC9B,CAOO49C,UAAAA,CAAW59C,EAAsBC,GACtCzG,KAAKmkD,MAAMprB,KAAKvyB,GAAU,EAAsCC,EAClE,CASO+C,GAAAA,CAAIhD,EAAcC,EAAoBsB,EAAsBK,GACjEpI,KAAKmkD,MAAM19C,GAAS,EAAgCD,GAAQuB,GAAU,EAAsCK,CAC9G,CASOi8C,OAAAA,CAAQ79C,EAAiBC,EAAoBsB,EAAsBK,GACxE,IAAK,IAAIR,EAAI,EAAGA,EAAIpB,EAAM0D,OAAQtC,IAChC5H,KAAKmkD,MAAM19C,GAAS,EAAgCD,EAAMoB,IAAMG,GAAU,EAAsCK,CAEpH,EAtCF3B,EAAA69C,gBAAA77C,EA2CA,MAAME,EAAsB,IAOflC,EAAA89C,uBAAyB,WACpC,MAAM/9C,EAAyB,IAAIiC,EAAgB,MAI7ChC,EAAYi9B,MAAM8gB,MAAM,KAAM9gB,MADhB,MACoC1wB,KAAI,CAACxM,EAAaC,IAAcA,IAClFsB,EAAIH,CAACpB,EAAeuB,IAA0BtB,EAAU45B,MAAM75B,EAAOuB,GAGrEK,EAAaL,EAAE,GAAM,KACrBH,EAAcG,EAAE,EAAM,IAC5BH,EAAY6E,KAAK,IACjB7E,EAAY6E,KAAK+3C,MAAM58C,EAAaG,EAAE,GAAM,KAE5C,MAAMQ,EAAmBR,EAAE,EAAoB,IAC/C,IAAIE,EAOJ,IAAKA,KAJLzB,EAAM49C,WAAW,EAAD,GAEhB59C,EAAM69C,QAAQj8C,EAAY,EAAF,KAEVG,EACZ/B,EAAM69C,QAAQ,CAAC,GAAM,GAAM,IAAM,KAAOp8C,EAAO,EAAF,GAC7CzB,EAAM69C,QAAQt8C,EAAE,IAAM,KAAOE,EAAO,EAAF,GAClCzB,EAAM69C,QAAQt8C,EAAE,IAAM,KAAOE,EAAO,EAAF,GAClCzB,EAAMgD,IAAI,IAAMvB,EAAO,EAAF,GACrBzB,EAAMgD,IAAI,GAAMvB,EAAO,GAAF,GACrBzB,EAAMgD,IAAI,IAAMvB,EAAO,EAAF,GACrBzB,EAAM69C,QAAQ,CAAC,IAAM,IAAM,KAAOp8C,EAAO,EAAF,GACvCzB,EAAMgD,IAAI,IAAMvB,EAAO,GAAF,GACrBzB,EAAMgD,IAAI,IAAMvB,EAAO,GAAF,GAuFvB,OApFAzB,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KAEdhD,EAAMgD,IAAI,GAAM,EAAF,KACdhD,EAAM69C,QAAQj8C,EAAY,EAAF,KACxB5B,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQ,CAAC,IAAM,GAAM,GAAM,GAAM,GAAO,EAAF,KAC5C79C,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAE3BvB,EAAM69C,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,KAChC79C,EAAM69C,QAAQj8C,EAAY,EAAF,KACxB5B,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAMgD,IAAI,IAAM,EAAF,KAEdhD,EAAMgD,IAAI,GAAM,EAAF,MACdhD,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtC79C,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,KAC3BvB,EAAM69C,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtC79C,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAE3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,MAC3BvB,EAAM69C,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,MAChC79C,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,MAE3BvB,EAAMgD,IAAI,GAAM,EAAF,MACdhD,EAAM69C,QAAQz8C,EAAa,EAAF,KACzBpB,EAAMgD,IAAI,IAAM,EAAF,KACdhD,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,KAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,EAAF,MAC3BvB,EAAM69C,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,MACtC79C,EAAM69C,QAAQz8C,EAAa,GAAF,MACzBpB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,GAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQz8C,EAAa,GAAF,MACzBpB,EAAMgD,IAAI,IAAM,GAAF,MACdhD,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,GAAF,MACtC79C,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQz8C,EAAa,GAAF,MACzBpB,EAAMgD,IAAI,IAAM,GAAF,MACdhD,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,IAAO,GAAF,MAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,GAAF,OAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,GAAF,OAC3BvB,EAAM69C,QAAQt8C,EAAE,GAAM,KAAO,EAAF,OAC3BvB,EAAM69C,QAAQz8C,EAAa,GAAF,OACzBpB,EAAM69C,QAAQj8C,EAAY,GAAF,OACxB5B,EAAMgD,IAAI,IAAM,GAAF,MACdhD,EAAM69C,QAAQ,CAAC,GAAM,IAAM,GAAM,IAAO,GAAF,MAEtC79C,EAAMgD,IAAIb,EAAqB,EAAF,KAC7BnC,EAAMgD,IAAIb,EAAqB,EAAF,KAC7BnC,EAAMgD,IAAIb,EAAqB,EAAF,KAC7BnC,EAAMgD,IAAIb,EAAqB,GAAF,MAC7BnC,EAAMgD,IAAIb,EAAqB,GAAF,OACtBnC,CACR,CAvHqC,GAwJtC,MAAaoC,UAA6BR,EAAAY,WAkCxCtH,WAAAA,CACqB8E,EAAgCC,EAAA89C,wBAEnDt7C,QAFmB,KAAAw7C,aAAAj+C,EATX,KAAAulC,YAAiC,CACzCn4B,MAAO,EACP8wC,SAAU,GACVC,WAAY,EACZC,WAAY,EACZC,SAAU,GAQV7kD,KAAK8kD,aAAe,EACpB9kD,KAAK+kD,aAAe/kD,KAAK8kD,aACzB9kD,KAAKikD,QAAU,IAAIr8C,EAAAk8C,OACnB9jD,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAChBhlD,KAAK40C,mBAAqB,EAG1B50C,KAAKilD,gBAAkB,CAACz+C,EAAMC,EAAOsB,KAAd,EACvB/H,KAAKklD,kBAAqB1+C,MAC1BxG,KAAKmlD,cAAgB,CAAC3+C,EAAeC,KAAhB,EACrBzG,KAAKolD,cAAiB5+C,MACtBxG,KAAKqlD,gBAAmB7+C,GAAwCA,EAChExG,KAAKslD,cAAgBtlD,KAAKilD,gBAC1BjlD,KAAKulD,iBAAmBrxC,OAAO+uC,OAAO,MACtCjjD,KAAKwlD,aAAetxC,OAAO+uC,OAAO,MAClCjjD,KAAKylD,aAAevxC,OAAO+uC,OAAO,MAClCjjD,KAAKsK,UAAA,EAASlC,EAAA6D,eAAa,KACzBjM,KAAKwlD,aAAetxC,OAAO+uC,OAAO,MAClCjjD,KAAKulD,iBAAmBrxC,OAAO+uC,OAAO,MACtCjjD,KAAKylD,aAAevxC,OAAO+uC,OAAO,KAAK,KAEzCjjD,KAAK0lD,WAAa1lD,KAAKsK,SAAS,IAAI/B,EAAAo9C,WACpC3lD,KAAK4lD,WAAa5lD,KAAKsK,SAAS,IAAIrC,EAAA86C,WACpC/iD,KAAK6lD,cAAgB7lD,KAAKqlD,gBAG1BrlD,KAAKgoC,mBAAmB,CAAEU,MAAO,OAAQ,KAAM,GACjD,CAEUod,WAAAA,CAAYt/C,EAAyBC,EAAuB,CAAC,GAAM,MAC3E,IAAIsB,EAAM,EACV,GAAIvB,EAAGynC,OAAQ,CACb,GAAIznC,EAAGynC,OAAO/jC,OAAS,EACrB,MAAM,IAAIQ,MAAM,qCAGlB,GADA3C,EAAMvB,EAAGynC,OAAOhnB,WAAW,GACvBlf,GAAO,GAAOA,GAAOA,EAAM,GAC7B,MAAM,IAAI2C,MAAM,uC,CAGpB,GAAIlE,EAAG4mC,cAAe,CACpB,GAAI5mC,EAAG4mC,cAAcljC,OAAS,EAC5B,MAAM,IAAIQ,MAAM,iDAElB,IAAK,IAAIjE,EAAI,EAAGA,EAAID,EAAG4mC,cAAcljC,SAAUzD,EAAG,CAChD,MAAM2B,EAAe5B,EAAG4mC,cAAcnmB,WAAWxgB,GACjD,GAAI,GAAO2B,GAAgBA,EAAe,GACxC,MAAM,IAAIsC,MAAM,8CAElB3C,IAAQ,EACRA,GAAOK,C,EAGX,GAAwB,IAApB5B,EAAGkiC,MAAMx+B,OACX,MAAM,IAAIQ,MAAM,+BAElB,MAAMtC,EAAY5B,EAAGkiC,MAAMzhB,WAAW,GACtC,GAAIxgB,EAAW,GAAK2B,GAAaA,EAAY3B,EAAW,GACtD,MAAM,IAAIiE,MAAM,0BAA0BjE,EAAW,SAASA,EAAW,MAK3E,OAHAsB,IAAQ,EACRA,GAAOK,EAEAL,CACT,CAEOykC,aAAAA,CAAchmC,GACnB,MAAMC,EAAgB,GACtB,KAAOD,GACLC,EAAIgG,KAAKib,OAAOC,aAAqB,IAARnhB,IAC7BA,IAAU,EAEZ,OAAOC,EAAIs/C,UAAU1vB,KAAK,GAC5B,CAEO4W,eAAAA,CAAgBzmC,GACrBxG,KAAKslD,cAAgB9+C,CACvB,CACOw/C,iBAAAA,GACLhmD,KAAKslD,cAAgBtlD,KAAKilD,eAC5B,CAEOjd,kBAAAA,CAAmBxhC,EAAyBC,GACjD,MAAMsB,EAAQ/H,KAAK8lD,YAAYt/C,EAAI,CAAC,GAAM,eACtCxG,KAAKylD,aAAa19C,KACpB/H,KAAKylD,aAAa19C,GAAS,IAE7B,MAAMK,EAAcpI,KAAKylD,aAAa19C,GAEtC,OADAK,EAAYqE,KAAKhG,GACV,CACLvD,QAASA,KACP,MAAMsD,EAAe4B,EAAYoJ,QAAQ/K,IACnB,IAAlBD,GACF4B,EAAYqJ,OAAOjL,EAAc,EAAE,EAI3C,CACOy/C,eAAAA,CAAgBz/C,GACjBxG,KAAKylD,aAAazlD,KAAK8lD,YAAYt/C,EAAI,CAAC,GAAM,eAAgBxG,KAAKylD,aAAazlD,KAAK8lD,YAAYt/C,EAAI,CAAC,GAAM,MAClH,CACOmmC,qBAAAA,CAAsBnmC,GAC3BxG,KAAKolD,cAAgB5+C,CACvB,CAEO4pC,iBAAAA,CAAkB5pC,EAAcC,GACrCzG,KAAKulD,iBAAiB/+C,EAAKygB,WAAW,IAAMxgB,CAC9C,CACOy/C,mBAAAA,CAAoB1/C,GACrBxG,KAAKulD,iBAAiB/+C,EAAKygB,WAAW,YAAYjnB,KAAKulD,iBAAiB/+C,EAAKygB,WAAW,GAC9F,CACO2lB,yBAAAA,CAA0BpmC,GAC/BxG,KAAKklD,kBAAoB1+C,CAC3B,CAEO0hC,kBAAAA,CAAmB1hC,EAAyBC,GACjD,MAAMsB,EAAQ/H,KAAK8lD,YAAYt/C,QAAA,IAC3BxG,KAAKwlD,aAAaz9C,KACpB/H,KAAKwlD,aAAaz9C,GAAS,IAE7B,MAAMK,EAAcpI,KAAKwlD,aAAaz9C,GAEtC,OADAK,EAAYqE,KAAKhG,GACV,CACLvD,QAASA,KACP,MAAMsD,EAAe4B,EAAYoJ,QAAQ/K,IACnB,IAAlBD,GACF4B,EAAYqJ,OAAOjL,EAAc,EAAE,EAI3C,CACO2/C,eAAAA,CAAgB3/C,GACjBxG,KAAKwlD,aAAaxlD,KAAK8lD,YAAYt/C,YAAaxG,KAAKwlD,aAAaxlD,KAAK8lD,YAAYt/C,GACzF,CACO8lC,qBAAAA,CAAsB9lC,GAC3BxG,KAAKmlD,cAAgB3+C,CACvB,CAEOyhC,kBAAAA,CAAmBzhC,EAAyBC,GACjD,OAAOzG,KAAK4lD,WAAWpC,gBAAgBxjD,KAAK8lD,YAAYt/C,GAAKC,EAC/D,CACO2/C,eAAAA,CAAgB5/C,GACrBxG,KAAK4lD,WAAWnC,aAAazjD,KAAK8lD,YAAYt/C,GAChD,CACOumC,qBAAAA,CAAsBvmC,GAC3BxG,KAAK4lD,WAAWlC,mBAAmBl9C,EACrC,CAEO2hC,kBAAAA,CAAmB3hC,EAAeC,GACvC,OAAOzG,KAAK0lD,WAAWlC,gBAAgBh9C,EAAOC,EAChD,CACO4/C,eAAAA,CAAgB7/C,GACrBxG,KAAK0lD,WAAWjC,aAAaj9C,EAC/B,CACOsmC,qBAAAA,CAAsBtmC,GAC3BxG,KAAK0lD,WAAWhC,mBAAmBl9C,EACrC,CAEOusC,eAAAA,CAAgBvsC,GACrBxG,KAAK6lD,cAAgBr/C,CACvB,CACO8/C,iBAAAA,GACLtmD,KAAK6lD,cAAgB7lD,KAAKqlD,eAC5B,CAWOvpC,KAAAA,GACL9b,KAAK+kD,aAAe/kD,KAAK8kD,aACzB9kD,KAAK0lD,WAAW5pC,QAChB9b,KAAK4lD,WAAW9pC,QAChB9b,KAAKikD,QAAQnoC,QACb9b,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAChBhlD,KAAK40C,mBAAqB,EAIK,IAA3B50C,KAAK+rC,YAAYn4B,QACnB5T,KAAK+rC,YAAYn4B,MAAQ,EACzB5T,KAAK+rC,YAAY2Y,SAAW,GAEhC,CAKUxR,cAAAA,CACR1sC,EACAC,EACAsB,EACAK,EACAR,GAEA5H,KAAK+rC,YAAYn4B,MAAQpN,EACzBxG,KAAK+rC,YAAY2Y,SAAWj+C,EAC5BzG,KAAK+rC,YAAY4Y,WAAa58C,EAC9B/H,KAAK+rC,YAAY6Y,WAAax8C,EAC9BpI,KAAK+rC,YAAY8Y,SAAWj9C,CAC9B,CA2CO0/B,KAAAA,CAAM9gC,EAAmBC,EAAgBsB,GAC9C,IAGIK,EAHAR,EAAO,EACPW,EAAa,EACbN,EAAQ,EAIZ,GAAIjI,KAAK+rC,YAAYn4B,MAGnB,GAA+B,IAA3B5T,KAAK+rC,YAAYn4B,MACnB5T,KAAK+rC,YAAYn4B,MAAQ,EACzB3L,EAAQjI,KAAK+rC,YAAY8Y,SAAW,MAC/B,CACL,QAAI,IAAA98C,GAA0D,IAA3B/H,KAAK+rC,YAAYn4B,MAiBlD,MADA5T,KAAK+rC,YAAYn4B,MAAQ,EACnB,IAAIlJ,MAAM,0EAMlB,MAAMjE,EAAWzG,KAAK+rC,YAAY2Y,SAClC,IAAIn8C,EAAavI,KAAK+rC,YAAY4Y,WAAa,EAC/C,OAAQ3kD,KAAK+rC,YAAYn4B,OACvB,KAAK,EACH,IAAI,IAAA7L,GAA2BQ,GAAc,EAC3C,KAAOA,GAAc,IACnBH,EAAiB3B,EAA8B8B,GAAYvI,KAAKikD,UAAA,IAC5D77C,GAFkBG,IAIf,GAAIH,aAAyBgrC,QAElC,OADApzC,KAAK+rC,YAAY4Y,WAAap8C,EACvBH,EAIbpI,KAAK+rC,YAAY2Y,SAAW,GAC5B,MACF,KAAK,EACH,IAAI,IAAA38C,GAA2BQ,GAAc,EAC3C,KAAOA,GAAc,IACnBH,EAAiB3B,EAA8B8B,MAAA,IAC3CH,GAFkBG,IAIf,GAAIH,aAAyBgrC,QAElC,OADApzC,KAAK+rC,YAAY4Y,WAAap8C,EACvBH,EAIbpI,KAAK+rC,YAAY2Y,SAAW,GAC5B,MACF,KAAK,EAGH,GAFA98C,EAAOpB,EAAKxG,KAAK+rC,YAAY8Y,UAC7Bz8C,EAAgBpI,KAAK4lD,WAAWjC,OAAgB,KAAT/7C,GAA0B,KAATA,EAAeG,GACnEK,EACF,OAAOA,EAEI,KAATR,IAAe5H,KAAK+rC,YAAY6Y,YAAc,GAClD5kD,KAAKikD,QAAQnoC,QACb9b,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAChB,MACF,KAAK,EAGH,GAFAp9C,EAAOpB,EAAKxG,KAAK+rC,YAAY8Y,UAC7Bz8C,EAAgBpI,KAAK0lD,WAAWz6C,IAAa,KAATrD,GAA0B,KAATA,EAAeG,GAChEK,EACF,OAAOA,EAEI,KAATR,IAAe5H,KAAK+rC,YAAY6Y,YAAc,GAClD5kD,KAAKikD,QAAQnoC,QACb9b,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAIpBhlD,KAAK+rC,YAAYn4B,MAAQ,EACzB3L,EAAQjI,KAAK+rC,YAAY8Y,SAAW,EACpC7kD,KAAK40C,mBAAqB,EAC1B50C,KAAK+kD,aAA6C,GAA9B/kD,KAAK+rC,YAAY6Y,U,CAOzC,IAAK,IAAI78C,EAAIE,EAAOF,EAAItB,IAAUsB,EAAG,CAKnC,OAJAH,EAAOpB,EAAKuB,GAGZQ,EAAavI,KAAKykD,aAAaN,MAAMnkD,KAAK+kD,cAAgB,GAAiCn9C,EAAO,IAAOA,EAAOe,IACxGJ,GAAc,GACpB,KAAK,EAGH,IAAK,IAAIH,EAAIL,EAAI,KAAOK,EAAG,CACzB,GAAIA,GAAK3B,IAAWmB,EAAOpB,EAAK4B,IAAM,IAASR,EAAO,KAAQA,EAAOe,EAAsB,CACzF3I,KAAKslD,cAAc9+C,EAAMuB,EAAGK,GAC5BL,EAAIK,EAAI,EACR,K,CAEF,KAAMA,GAAK3B,IAAWmB,EAAOpB,EAAK4B,IAAM,IAASR,EAAO,KAAQA,EAAOe,EAAsB,CAC3F3I,KAAKslD,cAAc9+C,EAAMuB,EAAGK,GAC5BL,EAAIK,EAAI,EACR,K,CAEF,KAAMA,GAAK3B,IAAWmB,EAAOpB,EAAK4B,IAAM,IAASR,EAAO,KAAQA,EAAOe,EAAsB,CAC3F3I,KAAKslD,cAAc9+C,EAAMuB,EAAGK,GAC5BL,EAAIK,EAAI,EACR,K,CAEF,KAAMA,GAAK3B,IAAWmB,EAAOpB,EAAK4B,IAAM,IAASR,EAAO,KAAQA,EAAOe,EAAsB,CAC3F3I,KAAKslD,cAAc9+C,EAAMuB,EAAGK,GAC5BL,EAAIK,EAAI,EACR,K,EAGJ,MACF,KAAK,EACCpI,KAAKulD,iBAAiB39C,GAAO5H,KAAKulD,iBAAiB39C,KAClD5H,KAAKklD,kBAAkBt9C,GAC5B5H,KAAK40C,mBAAqB,EAC1B,MACF,KAAK,EACH,MACF,KAAK,EAUH,GAT8B50C,KAAK6lD,cACjC,CACE39B,SAAUngB,EACV8kC,KAAAjlC,EACAm9C,aAAc/kD,KAAK+kD,aACnBwB,QAASvmD,KAAKglD,SACdvY,OAAQzsC,KAAKikD,QACbuC,OAAA,IAEOA,MAAO,OAElB,MACF,KAAK,EAEH,MAAMv+C,EAAWjI,KAAKwlD,aAAaxlD,KAAKglD,UAAY,EAAIp9C,GACxD,IAAIa,EAAIR,EAAWA,EAASiC,OAAS,GAAK,EAC1C,KAAOzB,GAAK,IAGVL,EAAgBH,EAASQ,GAAGzI,KAAKikD,UAAA,IAC7B77C,GAJSK,IAMN,GAAIL,aAAyBgrC,QAElC,OADApzC,KAAKkzC,eAAe,EAAqBjrC,EAAUQ,EAAGF,EAAYR,GAC3DK,EAGPK,EAAI,GACNzI,KAAKmlD,cAAcnlD,KAAKglD,UAAY,EAAIp9C,EAAM5H,KAAKikD,SAErDjkD,KAAK40C,mBAAqB,EAC1B,MACF,KAAK,EAEH,GACE,OAAQhtC,GACN,KAAK,GACH5H,KAAKikD,QAAQF,SAAS,GACtB,MACF,KAAK,GACH/jD,KAAKikD,QAAQwC,aAAa,GAC1B,MACF,QACEzmD,KAAKikD,QAAQyC,SAAS9+C,EAAO,aAExBG,EAAItB,IAAWmB,EAAOpB,EAAKuB,IAAM,IAAQH,EAAO,IAC3DG,IACA,MACF,KAAK,EACH/H,KAAKglD,WAAa,EAClBhlD,KAAKglD,UAAYp9C,EACjB,MACF,KAAK,GACH,MAAMgB,EAAc5I,KAAKylD,aAAazlD,KAAKglD,UAAY,EAAIp9C,GAC3D,IAAIY,EAAKI,EAAcA,EAAYsB,OAAS,GAAK,EACjD,KAAO1B,GAAM,IAGXJ,EAAgBQ,EAAYJ,MAAA,IACxBJ,GAJUI,IAMP,GAAIJ,aAAyBgrC,QAElC,OADApzC,KAAKkzC,eAAe,EAAqBtqC,EAAaJ,EAAID,EAAYR,GAC/DK,EAGPI,EAAK,GACPxI,KAAKolD,cAAcplD,KAAKglD,UAAY,EAAIp9C,GAE1C5H,KAAK40C,mBAAqB,EAC1B,MACF,KAAK,GACH50C,KAAKikD,QAAQnoC,QACb9b,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAChB,MACF,KAAK,GACHhlD,KAAK4lD,WAAWhC,KAAK5jD,KAAKglD,UAAY,EAAIp9C,EAAM5H,KAAKikD,SACrD,MACF,KAAK,GAGH,IAAK,IAAI77C,EAAIL,EAAI,KAAOK,EACtB,GAAIA,GAAK3B,GAA+B,MAApBmB,EAAOpB,EAAK4B,KAAyB,KAATR,GAA0B,KAATA,GAAkBA,EAAO,KAAQA,EAAOe,EAAsB,CAC7H3I,KAAK4lD,WAAW/B,IAAIr9C,EAAMuB,EAAGK,GAC7BL,EAAIK,EAAI,EACR,K,CAGJ,MACF,KAAK,GAEH,GADAA,EAAgBpI,KAAK4lD,WAAWjC,OAAgB,KAAT/7C,GAA0B,KAATA,GACpDQ,EAEF,OADApI,KAAKkzC,eAAe,EAAqB,GAAI,EAAG3qC,EAAYR,GACrDK,EAEI,KAATR,IAAeW,GAAc,GACjCvI,KAAKikD,QAAQnoC,QACb9b,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAChBhlD,KAAK40C,mBAAqB,EAC1B,MACF,KAAK,EACH50C,KAAK0lD,WAAW16C,QAChB,MACF,KAAK,EAEH,IAAK,IAAI5C,EAAIL,EAAI,GAAKK,IACpB,GAAIA,GAAK3B,IAAWmB,EAAOpB,EAAK4B,IAAM,IAASR,EAAO,KAAQA,EAAOe,EAAsB,CACzF3I,KAAK0lD,WAAW7B,IAAIr9C,EAAMuB,EAAGK,GAC7BL,EAAIK,EAAI,EACR,K,CAGJ,MACF,KAAK,EAEH,GADAA,EAAgBpI,KAAK0lD,WAAWz6C,IAAa,KAATrD,GAA0B,KAATA,GACjDQ,EAEF,OADApI,KAAKkzC,eAAe,EAAqB,GAAI,EAAG3qC,EAAYR,GACrDK,EAEI,KAATR,IAAeW,GAAc,GACjCvI,KAAKikD,QAAQnoC,QACb9b,KAAKikD,QAAQF,SAAS,GACtB/jD,KAAKglD,SAAW,EAChBhlD,KAAK40C,mBAAqB,EAG9B50C,KAAK+kD,aAA4B,GAAbx8C,C,CAExB,EAjjBF9B,EAAA8jC,qBAAA3hC,CAAAA,E,gGC/NA,MAAAR,EAAAL,EAAA,MACAH,EAAAG,EAAA,KAGMQ,EAAgC,GAEtC9B,EAAAk/C,UAAA,MAAAjkD,WAAAA,GACU,KAAAilD,OAAS,EACT,KAAAzD,QAAU36C,EACV,KAAA61C,KAAO,EACP,KAAA4E,UAA6C9uC,OAAO+uC,OAAO,MAC3D,KAAAG,WAAqC,OACrC,KAAAC,OAA+B,CACrCrX,QAAA,EACAsX,aAAc,EACdC,aAAA,EAwKJ,CArKSC,eAAAA,CAAgBh9C,EAAeC,QAAA,IAChCzG,KAAKgjD,UAAUx8C,KACjBxG,KAAKgjD,UAAUx8C,GAAS,IAE1B,MAAMuB,EAAc/H,KAAKgjD,UAAUx8C,GAEnC,OADAuB,EAAY0E,KAAKhG,GACV,CACLvD,QAASA,KACP,MAAMsD,EAAeuB,EAAYyJ,QAAQ/K,IACnB,IAAlBD,GACFuB,EAAY0J,OAAOjL,EAAc,EAAE,EAI3C,CACOi9C,YAAAA,CAAaj9C,GACdxG,KAAKgjD,UAAUx8C,WAAexG,KAAKgjD,UAAUx8C,EACnD,CACOk9C,kBAAAA,CAAmBl9C,GACxBxG,KAAKojD,WAAa58C,CACpB,CAEOtD,OAAAA,GACLlD,KAAKgjD,UAAY9uC,OAAO+uC,OAAO,MAC/BjjD,KAAKojD,WAAa,OAClBpjD,KAAKkjD,QAAU36C,CACjB,CAEOuT,KAAAA,GAEL,GAAoB,IAAhB9b,KAAK2mD,OACP,IAAK,IAAIngD,EAAIxG,KAAKqjD,OAAOrX,OAAShsC,KAAKqjD,OAAOC,aAAe,EAAItjD,KAAKkjD,QAAQh5C,OAAS,EAAG1D,GAAK,IAAKA,EAClGxG,KAAKkjD,QAAQ18C,GAAGyE,KAAA,GAGpBjL,KAAKqjD,OAAOrX,QAAA,EACZhsC,KAAKkjD,QAAU36C,EACfvI,KAAKo+C,KAAO,EACZp+C,KAAK2mD,OAAS,CAChB,CAEQ1N,MAAAA,GAEN,GADAj5C,KAAKkjD,QAAUljD,KAAKgjD,UAAUhjD,KAAKo+C,MAAQ71C,EACtCvI,KAAKkjD,QAAQh5C,OAGhB,IAAK,IAAI1D,EAAIxG,KAAKkjD,QAAQh5C,OAAS,EAAG1D,GAAK,EAAGA,IAC5CxG,KAAKkjD,QAAQ18C,GAAGwE,aAHlBhL,KAAKojD,WAAWpjD,KAAKo+C,IAAK,QAM9B,CAEQwI,IAAAA,CAAKpgD,EAAmBC,EAAesB,GAC7C,GAAK/H,KAAKkjD,QAAQh5C,OAGhB,IAAK,IAAI9B,EAAIpI,KAAKkjD,QAAQh5C,OAAS,EAAG9B,GAAK,EAAGA,IAC5CpI,KAAKkjD,QAAQ96C,GAAGy7C,IAAIr9C,EAAMC,EAAOsB,QAHnC/H,KAAKojD,WAAWpjD,KAAKo+C,IAAK,SAAOx2C,EAAAm6C,eAAcv7C,EAAMC,EAAOsB,GAMhE,CAEOiD,KAAAA,GAELhL,KAAK8b,QACL9b,KAAK2mD,OAAS,CAChB,CASO9C,GAAAA,CAAIr9C,EAAmBC,EAAesB,GAC3C,GAAoB,IAAhB/H,KAAK2mD,OAAT,CAGA,GAAoB,IAAhB3mD,KAAK2mD,OACP,KAAOlgD,EAAQsB,GAAK,CAClB,MAAMA,EAAOvB,EAAKC,KAClB,GAAa,KAATsB,EAAe,CACjB/H,KAAK2mD,OAAS,EACd3mD,KAAKi5C,SACL,K,CAEF,GAAIlxC,EAAO,IAAQ,GAAOA,EAExB,YADA/H,KAAK2mD,OAAS,IAGE,IAAd3mD,KAAKo+C,MACPp+C,KAAKo+C,IAAM,GAEbp+C,KAAKo+C,IAAiB,GAAXp+C,KAAKo+C,IAAWr2C,EAAO,E,CAGlB,IAAhB/H,KAAK2mD,QAA+B5+C,EAAMtB,EAAQ,GACpDzG,KAAK4mD,KAAKpgD,EAAMC,EAAOsB,E,CAE3B,CAOOkD,GAAAA,CAAIzE,EAAkBC,GAAA,GAC3B,GAAoB,IAAhBzG,KAAK2mD,OAAT,CAIA,GAAoB,IAAhB3mD,KAAK2mD,OAQP,GAJoB,IAAhB3mD,KAAK2mD,QACP3mD,KAAKi5C,SAGFj5C,KAAKkjD,QAAQh5C,OAEX,CACL,IAAInC,GAAA,EACAK,EAAIpI,KAAKkjD,QAAQh5C,OAAS,EAC1BtC,GAAA,EAOJ,GANI5H,KAAKqjD,OAAOrX,SACd5jC,EAAIpI,KAAKqjD,OAAOC,aAAe,EAC/Bv7C,EAAgBtB,EAChBmB,EAAc5H,KAAKqjD,OAAOE,YAC1BvjD,KAAKqjD,OAAOrX,QAAA,IAETpkC,IAAA,IAAeG,EAAyB,CAC3C,KAAOK,GAAK,IACVL,EAAgB/H,KAAKkjD,QAAQ96C,GAAG6C,IAAIzE,IAAA,IAChCuB,GAFSK,IAIN,GAAIL,aAAyBqrC,QAIlC,OAHApzC,KAAKqjD,OAAOrX,QAAA,EACZhsC,KAAKqjD,OAAOC,aAAel7C,EAC3BpI,KAAKqjD,OAAOE,aAAA,EACLx7C,EAGXK,G,CAKF,KAAOA,GAAK,EAAGA,IAEb,GADAL,EAAgB/H,KAAKkjD,QAAQ96C,GAAG6C,KAAA,GAC5BlD,aAAyBqrC,QAI3B,OAHApzC,KAAKqjD,OAAOrX,QAAA,EACZhsC,KAAKqjD,OAAOC,aAAel7C,EAC3BpI,KAAKqjD,OAAOE,aAAA,EACLx7C,C,MAlCX/H,KAAKojD,WAAWpjD,KAAKo+C,IAAK,MAAO53C,GAwCrCxG,KAAKkjD,QAAU36C,EACfvI,KAAKo+C,KAAO,EACZp+C,KAAK2mD,OAAS,C,CAChB,GAOFlgD,EAAAirC,WAAA,MAIEhwC,WAAAA,CAAoB8E,GAAA,KAAAw9C,SAAAx9C,EAHZ,KAAAsxC,MAAQ,GACR,KAAAoM,WAAA,CAEsE,CAEvEl5C,KAAAA,GACLhL,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,CACP,CAEOL,GAAAA,CAAIr9C,EAAmBC,EAAesB,GACvC/H,KAAKkkD,YAGTlkD,KAAK83C,QAAA,EAASlwC,EAAAm6C,eAAcv7C,EAAMC,EAAOsB,GACrC/H,KAAK83C,MAAM5tC,OAAS9B,EAAA06C,gBACtB9iD,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,GAET,CAEOj5C,GAAAA,CAAIzE,GACT,IAAIC,GAAA,EACJ,GAAIzG,KAAKkkD,UACPz9C,GAAA,OACK,GAAID,IACTC,EAAMzG,KAAKgkD,SAAShkD,KAAK83C,OACrBrxC,aAAe2sC,SAGjB,OAAO3sC,EAAIhC,MAAK+B,IACdxG,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,EACE19C,KAMb,OAFAxG,KAAK83C,MAAQ,GACb93C,KAAKkkD,WAAA,EACEz9C,CACT,EAAC,E,8ECrOH,MAAMsB,EAAY,WAuBlB,MAAaK,EAkBJ,gBAAAy+C,CAAiBrgD,GACtB,MAAMC,EAAS,IAAI2B,EACnB,IAAK5B,EAAO0D,OACV,OAAOzD,EAGT,IAAK,IAAIsB,EAAK27B,MAAMW,QAAQ79B,EAAO,IAAO,EAAI,EAAGuB,EAAIvB,EAAO0D,SAAUnC,EAAG,CACvE,MAAMK,EAAQ5B,EAAOuB,GACrB,GAAI27B,MAAMW,QAAQj8B,GAChB,IAAK,IAAI5B,EAAI,EAAGA,EAAI4B,EAAM8B,SAAU1D,EAClCC,EAAOggD,YAAYr+C,EAAM5B,SAG3BC,EAAOs9C,SAAS37C,E,CAGpB,OAAO3B,CACT,CAMA/E,WAAAA,CAAmB8E,EAAoB,GAAWC,EAA6B,IAC7E,GADiB,KAAAo9B,UAAAr9B,EAA+B,KAAAsgD,mBAAArgD,EAC5CA,EA/Dc,IAgEhB,MAAM,IAAIiE,MAAM,mDAElB1K,KAAKysC,OAAS,IAAIsa,WAAWvgD,GAC7BxG,KAAKkK,OAAS,EACdlK,KAAKgnD,WAAa,IAAID,WAAWtgD,GACjCzG,KAAKinD,iBAAmB,EACxBjnD,KAAKknD,cAAgB,IAAIC,YAAY3gD,GACrCxG,KAAKonD,eAAA,EACLpnD,KAAKqnD,kBAAA,EACLrnD,KAAKsnD,aAAA,CACP,CAKOljB,KAAAA,GACL,MAAM59B,EAAY,IAAI4B,EAAOpI,KAAK6jC,UAAW7jC,KAAK8mD,oBASlD,OARAtgD,EAAUimC,OAAOz8B,IAAIhQ,KAAKysC,QAC1BjmC,EAAU0D,OAASlK,KAAKkK,OACxB1D,EAAUwgD,WAAWh3C,IAAIhQ,KAAKgnD,YAC9BxgD,EAAUygD,iBAAmBjnD,KAAKinD,iBAClCzgD,EAAU0gD,cAAcl3C,IAAIhQ,KAAKknD,eACjC1gD,EAAU4gD,cAAgBpnD,KAAKonD,cAC/B5gD,EAAU6gD,iBAAmBrnD,KAAKqnD,iBAClC7gD,EAAU8gD,YAActnD,KAAKsnD,YACtB9gD,CACT,CAQOkmC,OAAAA,GACL,MAAMlmC,EAAmB,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,KAAKkK,SAAUzD,EAAG,CACpCD,EAAIiG,KAAKzM,KAAKysC,OAAOhmC,IACrB,MAAMsB,EAAQ/H,KAAKknD,cAAczgD,IAAM,EACjC2B,EAA8B,IAAxBpI,KAAKknD,cAAczgD,GAC3B2B,EAAML,EAAQ,GAChBvB,EAAIiG,KAAKi3B,MAAM8P,UAAUnT,MAAMlqB,KAAKnW,KAAKgnD,WAAYj/C,EAAOK,G,CAGhE,OAAO5B,CACT,CAKOsV,KAAAA,GACL9b,KAAKkK,OAAS,EACdlK,KAAKinD,iBAAmB,EACxBjnD,KAAKonD,eAAA,EACLpnD,KAAKqnD,kBAAA,EACLrnD,KAAKsnD,aAAA,CACP,CASOvD,QAAAA,CAASv9C,GAEd,GADAxG,KAAKsnD,aAAA,EACDtnD,KAAKkK,QAAUlK,KAAK6jC,UACtB7jC,KAAKonD,eAAA,MADP,CAIA,GAAI5gD,GAAS,EACX,MAAM,IAAIkE,MAAM,yCAElB1K,KAAKknD,cAAclnD,KAAKkK,QAAUlK,KAAKinD,kBAAoB,EAAIjnD,KAAKinD,iBACpEjnD,KAAKysC,OAAOzsC,KAAKkK,UAAY1D,EAAQuB,EAAYA,EAAYvB,C,CAC/D,CASOigD,WAAAA,CAAYjgD,GAEjB,GADAxG,KAAKsnD,aAAA,EACAtnD,KAAKkK,OAGV,GAAIlK,KAAKonD,eAAiBpnD,KAAKinD,kBAAoBjnD,KAAK8mD,mBACtD9mD,KAAKqnD,kBAAA,MADP,CAIA,GAAI7gD,GAAS,EACX,MAAM,IAAIkE,MAAM,yCAElB1K,KAAKgnD,WAAWhnD,KAAKinD,oBAAsBzgD,EAAQuB,EAAYA,EAAYvB,EAC3ExG,KAAKknD,cAAclnD,KAAKkK,OAAS,I,CACnC,CAKOksC,YAAAA,CAAa5vC,GAClB,OAAmC,IAA1BxG,KAAKknD,cAAc1gD,KAAgBxG,KAAKknD,cAAc1gD,IAAQ,GAAK,CAC9E,CAOO6vC,YAAAA,CAAa7vC,GAClB,MAAMC,EAAQzG,KAAKknD,cAAc1gD,IAAQ,EACnCuB,EAAgC,IAA1B/H,KAAKknD,cAAc1gD,GAC/B,OAAIuB,EAAMtB,EAAQ,EACTzG,KAAKgnD,WAAWpT,SAASntC,EAAOsB,GAElC,IACT,CAMOw/C,eAAAA,GACL,MAAM/gD,EAAsC,CAAC,EAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,KAAKkK,SAAUzD,EAAG,CACpC,MAAMsB,EAAQ/H,KAAKknD,cAAczgD,IAAM,EACjC2B,EAA8B,IAAxBpI,KAAKknD,cAAczgD,GAC3B2B,EAAML,EAAQ,IAChBvB,EAAOC,GAAKzG,KAAKgnD,WAAW3mB,MAAMt4B,EAAOK,G,CAG7C,OAAO5B,CACT,CAMOkgD,QAAAA,CAASlgD,GACd,IAAIC,EACJ,GAAIzG,KAAKonD,iBACF3gD,EAASzG,KAAKsnD,YAActnD,KAAKinD,iBAAmBjnD,KAAKkK,SAC1DlK,KAAKsnD,aAAetnD,KAAKqnD,iBAE7B,OAGF,MAAMj/C,EAAQpI,KAAKsnD,YAActnD,KAAKgnD,WAAahnD,KAAKysC,OAClD7kC,EAAMQ,EAAM3B,EAAS,GAC3B2B,EAAM3B,EAAS,IAAMmB,EAAMS,KAAKgP,IAAU,GAANzP,EAAWpB,EAAOuB,GAAavB,CACrE,EArMFC,EAAAq9C,OAAA17C,CAAAA,E,oFCjBA3B,EAAA+gD,aAAA,MAAA9lD,WAAAA,GACY,KAAA+lD,QAA0B,EAsCtC,CApCSvkD,OAAAA,GACL,IAAK,IAAIsD,EAAIxG,KAAKynD,QAAQv9C,OAAS,EAAG1D,GAAK,EAAGA,IAC5CxG,KAAKynD,QAAQjhD,GAAGkhD,SAASxkD,SAE7B,CAEO+C,SAAAA,CAAUO,EAAoBC,GACnC,MAAMsB,EAA4B,CAChC2/C,SAAAjhD,EACAvD,QAASuD,EAASvD,QAClBm7C,YAAA,GAEFr+C,KAAKynD,QAAQh7C,KAAK1E,GAClBtB,EAASvD,QAAU,IAAMlD,KAAK2nD,qBAAqB5/C,GACnDtB,EAASI,SAASL,EACpB,CAEQmhD,oBAAAA,CAAqBnhD,GAC3B,GAAIA,EAAY63C,WAEd,OAEF,IAAI53C,GAAS,EACb,IAAK,IAAIsB,EAAI,EAAGA,EAAI/H,KAAKynD,QAAQv9C,OAAQnC,IACvC,GAAI/H,KAAKynD,QAAQ1/C,KAAOvB,EAAa,CACnCC,EAAQsB,EACR,K,CAGJ,IAAe,IAAXtB,EACF,MAAM,IAAIiE,MAAM,uDAElBlE,EAAY63C,YAAA,EACZ73C,EAAYtD,QAAQshD,MAAMh+C,EAAYkhD,UACtC1nD,KAAKynD,QAAQh2C,OAAOhL,EAAO,EAC7B,EAAC,E,uFC5CH,MAAA2B,EAAAL,EAAA,MACAH,EAAAG,EAAA,KAEAtB,EAAAmhD,cAAA,MACElmD,WAAAA,CACU8E,EACQC,GADR,KAAAohD,QAAArhD,EACQ,KAAAhC,KAAAiC,CACd,CAEGqhD,IAAAA,CAAKthD,GAEV,OADAxG,KAAK6nD,QAAUrhD,EACRxG,IACT,CAEA,WAAA+nD,GAA+B,OAAO/nD,KAAK6nD,QAAQx1C,CAAG,CACtD,WAAA21C,GAA+B,OAAOhoD,KAAK6nD,QAAQz1C,CAAG,CACtD,aAAA61C,GAAiC,OAAOjoD,KAAK6nD,QAAQ/6C,KAAO,CAC5D,SAAAo7C,GAA6B,OAAOloD,KAAK6nD,QAAQxpC,KAAO,CACxD,UAAAnU,GAA8B,OAAOlK,KAAK6nD,QAAQj7C,MAAM1C,MAAQ,CACzDi+C,OAAAA,CAAQ3hD,GACb,MAAMC,EAAOzG,KAAK6nD,QAAQj7C,MAAMsD,IAAI1J,GACpC,GAAKC,EAGL,OAAO,IAAI2B,EAAAggD,kBAAkB3hD,EAC/B,CACO+tC,WAAAA,GAAgC,OAAO,IAAI5sC,EAAA2N,QAAY,EAAC,E,2FC5BjE,MAAAnN,EAAAL,EAAA,KAIAtB,EAAA2hD,kBAAA,MACE1mD,WAAAA,CAAoB8E,GAAA,KAAA6hD,MAAA7hD,CAAsB,CAE1C,aAAAulB,GAAkC,OAAO/rB,KAAKqoD,MAAMt8B,SAAW,CAC/D,UAAA7hB,GAA8B,OAAOlK,KAAKqoD,MAAMn+C,MAAQ,CACjDo+C,OAAAA,CAAQ9hD,EAAWC,GACxB,KAAID,EAAI,GAAKA,GAAKxG,KAAKqoD,MAAMn+C,QAI7B,OAAIzD,GACFzG,KAAKqoD,MAAM3yC,SAASlP,EAAGC,GAChBA,GAEFzG,KAAKqoD,MAAM3yC,SAASlP,EAAG,IAAI4B,EAAAmN,SACpC,CACOyW,iBAAAA,CAAkBxlB,EAAqBC,EAAsBsB,GAClE,OAAO/H,KAAKqoD,MAAMr8B,kBAAkBxlB,EAAWC,EAAasB,EAC9D,EAAC,E,4FCrBH,MAAAK,EAAAL,EAAA,MACAH,EAAAG,EAAA,MAEAQ,EAAAR,EAAA,KAEA,MAAaE,UAA2BM,EAAAS,WAOtCtH,WAAAA,CAAoB8E,GAClByC,QADkB,KAAA/B,MAAAV,EAHH,KAAA+hD,gBAAkBvoD,KAAKsK,SAAS,IAAI1C,EAAAmJ,cACrC,KAAAy3C,eAAiBxoD,KAAKuoD,gBAAgBt3C,MAIpDjR,KAAK69C,QAAU,IAAIz1C,EAAAw/C,cAAc5nD,KAAKkH,MAAMoW,QAAQwS,OAAQ,UAC5D9vB,KAAKyoD,WAAa,IAAIrgD,EAAAw/C,cAAc5nD,KAAKkH,MAAMoW,QAAQ6G,IAAK,aAC5DnkB,KAAKkH,MAAMoW,QAAQ6M,kBAAiB,IAAMnqB,KAAKuoD,gBAAgB9zC,KAAKzU,KAAKud,SAC3E,CACA,UAAAA,GACE,GAAIvd,KAAKkH,MAAMoW,QAAQC,SAAWvd,KAAKkH,MAAMoW,QAAQwS,OAAU,OAAO9vB,KAAK8vB,OAC3E,GAAI9vB,KAAKkH,MAAMoW,QAAQC,SAAWvd,KAAKkH,MAAMoW,QAAQ6G,IAAO,OAAOnkB,KAAK0oD,UACxE,MAAM,IAAIh+C,MAAM,gDAClB,CACA,UAAAolB,GACE,OAAO9vB,KAAK69C,QAAQiK,KAAK9nD,KAAKkH,MAAMoW,QAAQwS,OAC9C,CACA,aAAA44B,GACE,OAAO1oD,KAAKyoD,WAAWX,KAAK9nD,KAAKkH,MAAMoW,QAAQ6G,IACjD,EAvBF1d,EAAAkiD,mBAAA1gD,CAAAA,E,iFCFAxB,EAAAmiD,UAAA,MACElnD,WAAAA,CAAoB8E,GAAA,KAAAU,MAAAV,CAAwB,CAErC0hC,kBAAAA,CAAmB1hC,EAAyBC,GACjD,OAAOzG,KAAKkH,MAAMghC,mBAAmB1hC,GAAKA,GAAoBC,EAASD,EAAOkmC,YAChF,CACOmc,aAAAA,CAAcriD,EAAyBC,GAC5C,OAAOzG,KAAKkoC,mBAAmB1hC,EAAIC,EACrC,CACOwhC,kBAAAA,CAAmBzhC,EAAyBC,GACjD,OAAOzG,KAAKkH,MAAM+gC,mBAAmBzhC,GAAI,CAACA,EAAcuB,IAAoBtB,EAASD,EAAMuB,EAAO2kC,YACpG,CACOoc,aAAAA,CAActiD,EAAyBC,GAC5C,OAAOzG,KAAKioC,mBAAmBzhC,EAAIC,EACrC,CACOuhC,kBAAAA,CAAmBxhC,EAAyBC,GACjD,OAAOzG,KAAKkH,MAAM8gC,mBAAmBxhC,EAAIC,EAC3C,CACOsiD,aAAAA,CAAcviD,EAAyBC,GAC5C,OAAOzG,KAAKgoC,mBAAmBxhC,EAAIC,EACrC,CACO0hC,kBAAAA,CAAmB3hC,EAAeC,GACvC,OAAOzG,KAAKkH,MAAMihC,mBAAmB3hC,EAAOC,EAC9C,CACOuiD,aAAAA,CAAcxiD,EAAeC,GAClC,OAAOzG,KAAKmoC,mBAAmB3hC,EAAOC,EACxC,EAAC,E,kFC3BHA,EAAAwiD,WAAA,MACEvnD,WAAAA,CAAoB8E,GAAA,KAAAU,MAAAV,CAAwB,CAErC8D,QAAAA,CAAS9D,GACdxG,KAAKkH,MAAMq/B,eAAej8B,SAAS9D,EACrC,CAEA,YAAA0iD,GACE,OAAOlpD,KAAKkH,MAAMq/B,eAAe2iB,QACnC,CAEA,iBAAAC,GACE,OAAOnpD,KAAKkH,MAAMq/B,eAAe4iB,aACnC,CAEA,iBAAAA,CAAyB3iD,GACvBxG,KAAKkH,MAAMq/B,eAAe4iB,cAAgB3iD,CAC5C,EAAC,E,+hBCpBH,MAAA+B,EAAAR,EAAA,MACAE,EAAAF,EAAA,KAEAU,EAAAV,EAAA,MAEAY,EAAAZ,EAAA,MAEatB,EAAAihC,aAAe,EACfjhC,EAAAkhC,aAAe,EAErB,IAAM/+B,EAAanC,EAAAw/B,cAAnB,cAA4Bh+B,EAAAe,WAcjC,UAAA2D,GAA+B,OAAO3M,KAAKsd,QAAQC,MAAQ,CAK3D7b,WAAAA,CAA6B8E,GAC3ByC,QAbK,KAAAmgD,iBAAA,EAEU,KAAAxjB,UAAY5lC,KAAKsK,SAAS,IAAI/B,EAAAwI,cAC/B,KAAAnG,SAAW5K,KAAK4lC,UAAU30B,MACzB,KAAAwR,UAAYziB,KAAKsK,SAAS,IAAI/B,EAAAwI,cAC/B,KAAA7F,SAAWlL,KAAKyiB,UAAUxR,MASxCjR,KAAKiH,KAAOoB,KAAKC,IAAI9B,EAAe4H,WAAWnH,MAAQ,EAAGR,EAAAihC,cAC1D1nC,KAAKqF,KAAOgD,KAAKC,IAAI9B,EAAe4H,WAAW/I,MAAQ,EAAGoB,EAAAkhC,cAC1D3nC,KAAKsd,QAAUtd,KAAKsK,SAAS,IAAI7B,EAAAu1C,UAAUx3C,EAAgBxG,MAC7D,CAEOqH,MAAAA,CAAOb,EAAcC,GAC1BzG,KAAKiH,KAAOT,EACZxG,KAAKqF,KAAOoB,EACZzG,KAAKsd,QAAQjW,OAAOb,EAAMC,GAG1BzG,KAAK4lC,UAAUnxB,KAAK,CAAExN,KAAAT,EAAMnB,KAAAoB,GAC9B,CAEOqV,KAAAA,GACL9b,KAAKsd,QAAQxB,QACb9b,KAAKopD,iBAAA,CACP,CAOOxhB,MAAAA,CAAOphC,EAA2BC,GAAA,GACvC,MAAMsB,EAAS/H,KAAK2M,OAEpB,IAAIvE,EACJA,EAAUpI,KAAKqpD,iBACVjhD,GAAWA,EAAQ8B,SAAWlK,KAAKiH,MAAQmB,EAAQ4yB,MAAM,KAAOx0B,EAAUwO,IAAM5M,EAAQ6yB,MAAM,KAAOz0B,EAAUgvB,KAClHptB,EAAUL,EAAOigB,aAAaxhB,EAAWC,GACzCzG,KAAKqpD,iBAAmBjhD,GAE1BA,EAAQ2jB,UAAYtlB,EAEpB,MAAMmB,EAASG,EAAOsW,MAAQtW,EAAO+iB,UAC/BviB,EAAYR,EAAOsW,MAAQtW,EAAOq/B,aAExC,GAAyB,IAArBr/B,EAAO+iB,UAAiB,CAE1B,MAAMtkB,EAAsBuB,EAAO6E,MAAMo3B,OAGrCz7B,IAAcR,EAAO6E,MAAM1C,OAAS,EAClC1D,EACFuB,EAAO6E,MAAMm3B,UAAU2Z,SAASt1C,GAEhCL,EAAO6E,MAAMH,KAAKrE,EAAQg8B,SAG5Br8B,EAAO6E,MAAM6E,OAAOlJ,EAAY,EAAG,EAAGH,EAAQg8B,SAI3C59B,EASCxG,KAAKopD,kBACPrhD,EAAO+E,MAAQzE,KAAKC,IAAIP,EAAO+E,MAAQ,EAAG,KAT5C/E,EAAOsW,QAEFre,KAAKopD,iBACRrhD,EAAO+E,Q,KASN,CAGL,MAAMtG,EAAqB+B,EAAYX,EAAS,EAChDG,EAAO6E,MAAMs3B,cAAct8B,EAAS,EAAGpB,EAAqB,GAAI,GAChEuB,EAAO6E,MAAMoD,IAAIzH,EAAWH,EAAQg8B,Q,CAKjCpkC,KAAKopD,kBACRrhD,EAAO+E,MAAQ/E,EAAOsW,OAGxBre,KAAKyiB,UAAUhO,KAAK1M,EAAO+E,MAC7B,CASOU,WAAAA,CAAYhH,EAAcC,EAA+BsB,GAC9D,MAAMK,EAASpI,KAAK2M,OACpB,GAAInG,EAAO,EAAG,CACZ,GAAqB,IAAjB4B,EAAO0E,MACT,OAEF9M,KAAKopD,iBAAA,C,MACI5iD,EAAO4B,EAAO0E,OAAS1E,EAAOiW,QACvCre,KAAKopD,iBAAA,GAGP,MAAMxhD,EAAWQ,EAAO0E,MACxB1E,EAAO0E,MAAQzE,KAAKC,IAAID,KAAKgP,IAAIjP,EAAO0E,MAAQtG,EAAM4B,EAAOiW,OAAQ,GAGjEzW,IAAaQ,EAAO0E,QAInBrG,GACHzG,KAAKyiB,UAAUhO,KAAKrM,EAAO0E,OAE/B,G,gBAtIWlE,EAAaR,EAAA,CAmBXR,EAAA,EAAAe,EAAA6N,kBAnBF5N,E,wFCPbnC,EAAAkgC,eAAA,MAAAjlC,WAAAA,GAIS,KAAA4nD,OAAiB,EAEhB,KAAAC,UAAsC,EAmBhD,CAjBSztC,KAAAA,GACL9b,KAAK6zC,aAAA,EACL7zC,KAAKupD,UAAY,GACjBvpD,KAAKspD,OAAS,CAChB,CAEO5W,SAAAA,CAAUlsC,GACfxG,KAAKspD,OAAS9iD,EACdxG,KAAK6zC,QAAU7zC,KAAKupD,UAAU/iD,EAChC,CAEOmvC,WAAAA,CAAYnvC,EAAWC,GAC5BzG,KAAKupD,UAAU/iD,GAAKC,EAChBzG,KAAKspD,SAAW9iD,IAClBxG,KAAK6zC,QAAUptC,EAEnB,EAAC,E,qgBC5BH,MAAA8B,EAAAR,EAAA,MACAE,EAAAF,EAAA,MAEAU,EAAAV,EAAA,KAKMY,EAA2D,CAM/D6gD,KAAM,CACJC,OAAQ,EACRC,SAAUA,KAAA,GAOZC,IAAK,CACHF,OAAQ,EACRC,SAAWljD,GAEQ,IAAbA,EAAEsY,QAAiD,IAAbtY,EAAEwd,SAI5Cxd,EAAEyd,MAAA,EACFzd,EAAE2d,KAAA,EACF3d,EAAE2F,OAAA,GAAQ,IASdy9C,MAAO,CACLH,OAAQ,GACRC,SAAWljD,GAEQ,KAAbA,EAAEwd,QAWV6lC,KAAM,CACJJ,OAAQ,GACRC,SAAWljD,GAEQ,KAAbA,EAAEwd,QAAgD,IAAbxd,EAAEsY,QAW/CgrC,IAAK,CACHL,OACE,GAEFC,SAAWljD,IAAA,IAWf,SAASoC,EAAUpC,EAAoBC,GACrC,IAAIsB,GAAQvB,EAAEyd,KAAO,GAAiB,IAAMzd,EAAE2F,MAAQ,EAAkB,IAAM3F,EAAE2d,IAAM,EAAgB,GAoBtG,OAnBiB,IAAb3d,EAAEsY,QACJ/W,GAAQ,GACRA,GAAQvB,EAAEwd,SAEVjc,GAAmB,EAAXvB,EAAEsY,OACK,EAAXtY,EAAEsY,SACJ/W,GAAQ,IAEK,EAAXvB,EAAEsY,SACJ/W,GAAQ,KAEO,KAAbvB,EAAEwd,OACJjc,GAAQ,GACc,IAAbvB,EAAEwd,QAAkCvd,IAG7CsB,GAAQ,IAGLA,CACT,CAEA,MAAMS,EAAIkf,OAAOC,aAKX9e,EAA0D,CAM9DkhD,QAAUvjD,IACR,MAAMC,EAAS,CAACmC,EAAUpC,GAAA,GAAY,GAAIA,EAAEsd,IAAM,GAAItd,EAAEud,IAAM,IAK9D,OAAItd,EAAO,GAAK,KAAOA,EAAO,GAAK,KAAOA,EAAO,GAAK,IAC7C,GAEF,MAAS+B,EAAE/B,EAAO,MAAM+B,EAAE/B,EAAO,MAAM+B,EAAE/B,EAAO,KAAK,EAO9DujD,IAAMxjD,IACJ,MAAMC,EAAsB,IAAbD,EAAEwd,QAA8C,IAAbxd,EAAEsY,OAAoC,IAAM,IAC9F,MAAO,MAASlW,EAAUpC,GAAA,MAAYA,EAAEsd,OAAOtd,EAAEud,MAAMtd,GAAO,EAEhEwjD,WAAazjD,IACX,MAAMC,EAAsB,IAAbD,EAAEwd,QAA8C,IAAbxd,EAAEsY,OAAoC,IAAM,IAC9F,MAAO,MAASlW,EAAUpC,GAAA,MAAYA,EAAE4L,KAAK5L,EAAE6L,IAAI5L,GAAO,GAoBvD,IAAMqC,EAAgBrC,EAAA4/B,iBAAtB,cAA+B59B,EAAAO,WAUpCtH,WAAAA,CACkB8E,EACFC,GAEdwC,QAHiC,KAAAuH,eAAAhK,EACF,KAAAqqB,aAAApqB,EAXzB,KAAAyjD,WAAqD,CAAC,EACtD,KAAAC,WAAoD,CAAC,EACrD,KAAAC,gBAA0B,GAC1B,KAAAC,gBAA0B,GAC1B,KAAAC,WAAqC,KAE5B,KAAAC,kBAAoBvqD,KAAKsK,SAAS,IAAIrC,EAAA8I,cACvC,KAAA4T,iBAAoB3kB,KAAKuqD,kBAAkBt5C,MAQzD,IAAK,MAAMzK,KAAQ0N,OAAOupC,KAAK90C,GAAoB3I,KAAKwqD,YAAYhkD,EAAMmC,EAAkBnC,IAC5F,IAAK,MAAMA,KAAQ0N,OAAOupC,KAAK50C,GAAoB7I,KAAKyqD,YAAYjkD,EAAMqC,EAAkBrC,IAE5FxG,KAAK8b,OACP,CAEO0uC,WAAAA,CAAYhkD,EAAcC,GAC/BzG,KAAKkqD,WAAW1jD,GAAQC,CAC1B,CAEOgkD,WAAAA,CAAYjkD,EAAcC,GAC/BzG,KAAKmqD,WAAW3jD,GAAQC,CAC1B,CAEA,kBAAAse,GACE,OAAO/kB,KAAKoqD,eACd,CAEA,wBAAAvnC,GACE,OAAwD,IAAjD7iB,KAAKkqD,WAAWlqD,KAAKoqD,iBAAiBX,MAC/C,CAEA,kBAAA1kC,CAA0Bve,GACxB,IAAKxG,KAAKkqD,WAAW1jD,GACnB,MAAM,IAAIkE,MAAM,qBAAqBlE,MAEvCxG,KAAKoqD,gBAAkB5jD,EACvBxG,KAAKuqD,kBAAkB91C,KAAKzU,KAAKkqD,WAAW1jD,GAAMijD,OACpD,CAEA,kBAAA3T,GACE,OAAO91C,KAAKqqD,eACd,CAEA,kBAAAvU,CAA0BtvC,GACxB,IAAKxG,KAAKmqD,WAAW3jD,GACnB,MAAM,IAAIkE,MAAM,qBAAqBlE,MAEvCxG,KAAKqqD,gBAAkB7jD,CACzB,CAEOsV,KAAAA,GACL9b,KAAK+kB,eAAiB,OACtB/kB,KAAK81C,eAAiB,UACtB91C,KAAKsqD,WAAa,IACpB,CAYOzmC,iBAAAA,CAAkBrd,GAEvB,GAAIA,EAAEsd,IAAM,GAAKtd,EAAEsd,KAAO9jB,KAAKwQ,eAAevJ,MACzCT,EAAEud,IAAM,GAAKvd,EAAEud,KAAO/jB,KAAKwQ,eAAenL,KAC7C,OAAO,EAIT,GAAiB,IAAbmB,EAAEsY,QAAiD,KAAbtY,EAAEwd,OAC1C,OAAO,EAET,GAAiB,IAAbxd,EAAEsY,QAAgD,KAAbtY,EAAEwd,OACzC,OAAO,EAET,GAAiB,IAAbxd,EAAEsY,SAAkD,IAAbtY,EAAEwd,QAAgD,IAAbxd,EAAEwd,QAChF,OAAO,EAQT,GAJAxd,EAAEsd,MACFtd,EAAEud,MAGe,KAAbvd,EAAEwd,QACDhkB,KAAKsqD,YACLtqD,KAAK0qD,aAAa1qD,KAAKsqD,WAAY9jD,EAA4B,eAAzBxG,KAAKqqD,iBAE9C,OAAO,EAIT,IAAKrqD,KAAKkqD,WAAWlqD,KAAKoqD,iBAAiBV,SAASljD,GAClD,OAAO,EAIT,MAAMC,EAASzG,KAAKmqD,WAAWnqD,KAAKqqD,iBAAiB7jD,GAYrD,OAXIC,IAE2B,YAAzBzG,KAAKqqD,gBACPrqD,KAAK6wB,aAAa85B,mBAAmBlkD,GAErCzG,KAAK6wB,aAAaviB,iBAAiB7H,GAAA,IAIvCzG,KAAKsqD,WAAa9jD,GAAA,CAGpB,CAEOqe,aAAAA,CAAcre,GACnB,MAAO,CACLokD,QAAkB,EAATpkD,GACTqkD,MAAgB,EAATrkD,GACPskD,QAAkB,EAATtkD,GACTukD,QAAkB,EAATvkD,GACT+d,SAAmB,GAAT/d,GAEd,CAEQkkD,YAAAA,CAAalkD,EAAqBC,EAAqBsB,GAC7D,GAAIA,EAAQ,CACV,GAAIvB,EAAG4L,IAAM3L,EAAG2L,EAAG,OAAO,EAC1B,GAAI5L,EAAG6L,IAAM5L,EAAG4L,EAAG,OAAO,C,KACrB,CACL,GAAI7L,EAAGsd,MAAQrd,EAAGqd,IAAK,OAAO,EAC9B,GAAItd,EAAGud,MAAQtd,EAAGsd,IAAK,OAAO,C,CAEhC,OAAIvd,EAAGsY,SAAWrY,EAAGqY,QACjBtY,EAAGwd,SAAWvd,EAAGud,QACjBxd,EAAGyd,OAASxd,EAAGwd,MACfzd,EAAG2d,MAAQ1d,EAAG0d,KACd3d,EAAG2F,QAAU1F,EAAG0F,KAEtB,G,mBApJWrD,EAAgBV,EAAA,CAWxBR,EAAA,EAAAW,EAAA0M,gBACArN,EAAA,EAAAW,EAAA+oB,eAZQxoB,E,kgBCnKb,MAAAP,EAAAR,EAAA,MACAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,KAEAY,EAAAZ,EAAA,MAEMa,EAAwBsL,OAAO4sB,OAAO,CAC1CkT,YAAA,IAGIxrC,EAA8C0L,OAAO4sB,OAAO,CAChE5b,uBAAA,EACA2wB,mBAAA,EACA1nC,oBAAA,EACA2b,QAAA,EACA+qB,mBAAA,EACAj3B,WAAA,EACAk2B,YAAA,IAGK,IAAMjrC,EAAWpC,EAAA2/B,YAAjB,cAA0B39B,EAAAO,WAiB/BtH,WAAAA,CACkB8E,EACHC,EACIsB,GAEjBkB,QAJiC,KAAAuH,eAAAhK,EACH,KAAAmZ,YAAAlZ,EACI,KAAA2O,gBAAArN,EAjB7B,KAAA0d,qBAAA,EACA,KAAAkQ,gBAAA,EAIU,KAAA+P,QAAU1lC,KAAKsK,SAAS,IAAIrC,EAAA8I,cAC7B,KAAAjO,OAAS9C,KAAK0lC,QAAQz0B,MACrB,KAAA+5C,aAAehrD,KAAKsK,SAAS,IAAIrC,EAAA8I,cAClC,KAAAgtB,YAAc/9B,KAAKgrD,aAAa/5C,MAC/B,KAAAu0B,UAAYxlC,KAAKsK,SAAS,IAAIrC,EAAA8I,cAC/B,KAAA00B,SAAWzlC,KAAKwlC,UAAUv0B,MACzB,KAAAg6C,yBAA2BjrD,KAAKsK,SAAS,IAAIrC,EAAA8I,cAC9C,KAAAg2B,wBAA0B/mC,KAAKirD,yBAAyBh6C,MAQtEjR,KAAK+zC,OAAA,EAAQxrC,EAAA67B,OAAMx7B,GACnB5I,KAAKkO,iBAAA,EAAkB3F,EAAA67B,OAAM57B,EAC/B,CAEOsT,KAAAA,GACL9b,KAAK+zC,OAAA,EAAQxrC,EAAA67B,OAAMx7B,GACnB5I,KAAKkO,iBAAA,EAAkB3F,EAAA67B,OAAM57B,EAC/B,CAEO8F,gBAAAA,CAAiB9H,EAAcC,GAAA,GAEpC,GAAIzG,KAAKoV,gBAAgBhH,WAAWhJ,aAClC,OAIF,MAAM2C,EAAS/H,KAAKwQ,eAAe7D,OAC/BlG,GAAgBzG,KAAKoV,gBAAgBhH,WAAWwY,mBAAqB7e,EAAOsW,QAAUtW,EAAO+E,OAC/F9M,KAAKirD,yBAAyBx2C,OAI5BhO,GACFzG,KAAKgrD,aAAav2C,OAIpBzU,KAAK2f,YAAYC,MAAM,iBAAiBpZ,MAAS,IAAMA,EAAKitC,MAAM,IAAIzgC,KAAIxM,GAAKA,EAAEygB,WAAW,OAC5FjnB,KAAK0lC,QAAQjxB,KAAKjO,EACpB,CAEOmkD,kBAAAA,CAAmBnkD,GACpBxG,KAAKoV,gBAAgBhH,WAAWhJ,eAGpCpF,KAAK2f,YAAYC,MAAM,mBAAmBpZ,MAAS,IAAMA,EAAKitC,MAAM,IAAIzgC,KAAIxM,GAAKA,EAAEygB,WAAW,OAC9FjnB,KAAKwlC,UAAU/wB,KAAKjO,GACtB,G,cA5DWqC,EAAWT,EAAA,CAkBnBR,EAAA,EAAAe,EAAAsM,gBACArN,EAAA,EAAAe,EAAAw9B,aACAv+B,EAAA,EAAAe,EAAA6N,kBApBQ3N,E,6FCpBb,MAAAT,EAAAL,EAAA,MACAH,EAAAG,EAAA,MACAQ,EAAAR,EAAA,KAEAE,EAAAF,EAAA,MAKA,IAAIU,EAAQ,EACRE,EAAQ,EAEZ,MAAaC,UAA0BL,EAAAS,WAerC,eAAA6K,GAAkE,OAAO7T,KAAKkrD,aAAarS,QAAU,CAErGn3C,WAAAA,GACEuH,QAVe,KAAAiiD,aAAgD,IAAIjjD,EAAAswC,YAAW/xC,GAAK,MAAAA,OAAA,EAAAA,EAAGgnB,OAAOC,OAE9E,KAAA09B,wBAA0BnrD,KAAKsK,SAAS,IAAI1C,EAAAmJ,cAC7C,KAAAic,uBAAyBhtB,KAAKmrD,wBAAwBl6C,MACrD,KAAAm6C,qBAAuBprD,KAAKsK,SAAS,IAAI1C,EAAAmJ,cAC1C,KAAAkc,oBAAsBjtB,KAAKorD,qBAAqBn6C,MAO9DjR,KAAKsK,UAAA,EAAS/B,EAAA0D,eAAa,IAAMjM,KAAK8b,UACxC,CAEOmK,kBAAAA,CAAmBzf,GACxB,GAAIA,EAAQgnB,OAAO6wB,WACjB,OAEF,MAAM53C,EAAa,IAAI+B,EAAWhC,GAClC,GAAIC,EAAY,CACd,MAAMD,EAAgBC,EAAW+mB,OAAOI,WAAU,IAAMnnB,EAAWvD,YACnEuD,EAAWmnB,WAAU,KACfnnB,IACEzG,KAAKkrD,aAAar9B,OAAOpnB,IAC3BzG,KAAKorD,qBAAqB32C,KAAKhO,GAEjCD,EAActD,UAAA,IAGlBlD,KAAKkrD,aAAazS,OAAOhyC,GACzBzG,KAAKmrD,wBAAwB12C,KAAKhO,E,CAEpC,OAAOA,CACT,CAEOqV,KAAAA,GACL,IAAK,MAAMtV,KAAKxG,KAAKkrD,aAAarS,SAChCryC,EAAEtD,UAEJlD,KAAKkrD,aAAa9jD,OACpB,CAEO,qBAAAikD,CAAsB7kD,EAAWC,EAAcsB,G,UACpD,IAAIE,EAAO,EACPQ,EAAO,EACX,IAAK,MAAME,KAAK3I,KAAKkrD,aAAavS,eAAelyC,GAC/CwB,EAAkB,QAAXG,EAAAO,EAAE9G,QAAQuQ,SAAA,IAAChK,EAAAA,EAAI,EACtBK,EAAOR,GAAuB,QAAfL,EAAAe,EAAE9G,QAAQ8F,aAAA,IAAKC,EAAAA,EAAI,GAC9BpB,GAAKyB,GAAQzB,EAAIiC,KAAUV,IAAyB,QAAfQ,EAAAI,EAAE9G,QAAQ0rB,aAAA,IAAKhlB,EAAAA,EAAI,YAAcR,WAClEY,EAGZ,CAEOqsB,uBAAAA,CAAwBxuB,EAAWC,EAAcsB,EAAqCK,GAC3FpI,KAAKkrD,aAAatS,aAAanyC,GAAMA,I,UACnCgC,EAAmB,QAAXb,EAAAnB,EAAE5E,QAAQuQ,SAAA,IAACxK,EAAAA,EAAI,EACvBe,EAAQF,GAAwB,QAAfF,EAAA9B,EAAE5E,QAAQ8F,aAAA,IAAKY,EAAAA,EAAI,GAChC/B,GAAKiC,GAASjC,EAAImC,KAAWZ,IAAyB,QAAfE,EAAAxB,EAAE5E,QAAQ0rB,aAAA,IAAKtlB,EAAAA,EAAI,YAAcF,IAC1EK,EAAS3B,EAAA,GAGf,EAvEFA,EAAA4U,kBAAAzS,EA0EA,MAAMJ,UAAmBD,EAAAS,WAGvB,cAAAq1C,GAAmC,OAAOr+C,KAAKirB,WAAa,CAQ5D,sBAAAsM,GAQE,OAPuB,OAAnBv3B,KAAKsrD,YACHtrD,KAAK6B,QAAQ2oB,gBACfxqB,KAAKsrD,UAAYljD,EAAAX,IAAI2V,QAAQpd,KAAK6B,QAAQ2oB,iBAE1CxqB,KAAKsrD,eAAA,GAGFtrD,KAAKsrD,SACd,CAGA,sBAAA9zB,GAQE,OAPuB,OAAnBx3B,KAAKurD,YACHvrD,KAAK6B,QAAQ2pD,gBACfxrD,KAAKurD,UAAYnjD,EAAAX,IAAI2V,QAAQpd,KAAK6B,QAAQ2pD,iBAE1CxrD,KAAKurD,eAAA,GAGFvrD,KAAKurD,SACd,CAEA7pD,WAAAA,CACkB8E,GAEhByC,QAFgB,KAAApH,QAAA2E,EA9BF,KAAAmnB,gBAAkB3tB,KAAKsK,SAAS,IAAI1C,EAAAmJ,cACpC,KAAAjG,SAAW9K,KAAK2tB,gBAAgB1c,MAC/B,KAAAstC,WAAav+C,KAAKsK,SAAS,IAAI1C,EAAAmJ,cAChC,KAAA6c,UAAY5tB,KAAKu+C,WAAWttC,MAEpC,KAAAq6C,UAAuC,KAYvC,KAAAC,UAAuC,KAgB7CvrD,KAAKwtB,OAAShnB,EAAQgnB,OAClBxtB,KAAK6B,QAAQ4sB,uBAAyBzuB,KAAK6B,QAAQ4sB,qBAAqBvG,WAC1EloB,KAAK6B,QAAQ4sB,qBAAqBvG,SAAW,OAEjD,CAEgBhlB,OAAAA,GACdlD,KAAKu+C,WAAW9pC,OAChBxL,MAAM/F,SACR,I,kHC/HF,MAAAkF,EAAAL,EAAA,MACAH,EAAAG,EAAA,MAEA,MAAaQ,EAIX7G,WAAAA,IAAe8E,GAFP,KAAAilD,SAAW,IAAI74C,IAGrB,IAAK,MAAOnM,EAAIsB,KAAYvB,EAC1BxG,KAAKgQ,IAAIvJ,EAAIsB,EAEjB,CAEOiI,GAAAA,CAAOxJ,EAA2BC,GACvC,MAAMsB,EAAS/H,KAAKyrD,SAASv7C,IAAI1J,GAEjC,OADAxG,KAAKyrD,SAASz7C,IAAIxJ,EAAIC,GACfsB,CACT,CAEO4K,OAAAA,CAAQnM,GACb,IAAK,MAAOC,EAAKsB,KAAU/H,KAAKyrD,SAAS54C,UACvCrM,EAASC,EAAKsB,EAElB,CAEOsL,GAAAA,CAAI7M,GACT,OAAOxG,KAAKyrD,SAASp4C,IAAI7M,EAC3B,CAEO0J,GAAAA,CAAO1J,GACZ,OAAOxG,KAAKyrD,SAASv7C,IAAI1J,EAC3B,EA5BFC,EAAAilD,kBAAAnjD,EA+BA9B,EAAAs/B,qBAAA,MAKErkC,WAAAA,GAFiB,KAAAiqD,UAA+B,IAAIpjD,EAGlDvI,KAAK2rD,UAAU37C,IAAI5H,EAAA8rB,sBAAuBl0B,KAC5C,CAEOsb,UAAAA,CAAc9U,EAA2BC,GAC9CzG,KAAK2rD,UAAU37C,IAAIxJ,EAAIC,EACzB,CAEOmlD,UAAAA,CAAcplD,GACnB,OAAOxG,KAAK2rD,UAAUz7C,IAAI1J,EAC5B,CAEO2U,cAAAA,CAAkB3U,KAAcC,GACrC,MAAMsB,GAAA,EAAsBH,EAAAikD,wBAAuBrlD,GAAMslD,MAAK,CAACtlD,EAAGC,IAAMD,EAAE+V,MAAQ9V,EAAE8V,QAE9EnU,EAAqB,GAC3B,IAAK,MAAM3B,KAAcsB,EAAqB,CAC5C,MAAMA,EAAU/H,KAAK2rD,UAAUz7C,IAAIzJ,EAAWq0B,IAC9C,IAAK/yB,EACH,MAAM,IAAI2C,MAAM,oBAAoBlE,EAAKvF,mCAAmCwF,EAAWq0B,OAEzF1yB,EAAYqE,KAAK1E,E,CAGnB,MAAMQ,EAAqBR,EAAoBmC,OAAS,EAAInC,EAAoB,GAAGwU,MAAQ9V,EAAKyD,OAGhG,GAAIzD,EAAKyD,SAAW3B,EAClB,MAAM,IAAImC,MAAM,gDAAgDlE,EAAKvF,oBAAoBsH,EAAqB,oBAAoB9B,EAAKyD,2BAIzI,OAAO,IAAI1D,KAAQ,IAAIC,KAAS2B,GAClC,EAAC,E,4hBC9EH,MAAAG,EAAAR,EAAA,KACAE,EAAAF,EAAA,MAgBMU,EAAwD,CAC5DsjD,MAAO9jD,EAAAu/B,aAAawkB,MACpBpsC,MAAO3X,EAAAu/B,aAAa+L,MACpB0Y,KAAMhkD,EAAAu/B,aAAa0kB,KACnB31C,KAAMtO,EAAAu/B,aAAaC,KACnB9jC,MAAOsE,EAAAu/B,aAAa2kB,MACpBC,IAAKnkD,EAAAu/B,aAAa6kB,KAKb,IAiEH1jD,EAjESC,EAAUnC,EAAAy/B,WAAhB,cAAyB39B,EAAAS,WAI9B,YAAA4b,GAAsC,OAAO5kB,KAAKssD,SAAW,CAE7D5qD,WAAAA,CACmB8E,GAEjByC,QAFkC,KAAAmM,gBAAA5O,EAJ5B,KAAA8lD,UAA0BrkD,EAAAu/B,aAAa6kB,IAO7CrsD,KAAKusD,kBACLvsD,KAAKsK,SAAStK,KAAKoV,gBAAgB6N,uBAAuB,YAAY,IAAMjjB,KAAKusD,qBAGjF5jD,EAAc3I,IAChB,CAEQusD,eAAAA,GACNvsD,KAAKssD,UAAY7jD,EAAqBzI,KAAKoV,gBAAgBhH,WAAWwW,SACxE,CAEQ4nC,uBAAAA,CAAwBhmD,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAe0D,OAAQzD,IACR,mBAAtBD,EAAeC,KACxBD,EAAeC,GAAKD,EAAeC,KAGzC,CAEQgmD,IAAAA,CAAKjmD,EAAeC,EAAiBsB,GAC3C/H,KAAKwsD,wBAAwBzkD,GAC7BvB,EAAK2P,KAAKzS,SAAU1D,KAAKoV,gBAAgBvT,QAAQ6qD,OAAS,GAjC3C,cAiC8DjmD,KAAYsB,EAC3F,CAEOgkD,KAAAA,CAAMvlD,KAAoBC,G,QAC3BzG,KAAKssD,WAAarkD,EAAAu/B,aAAawkB,OACjChsD,KAAKysD,KAAyF,QAApFrkD,EAAmC,QAAnCL,EAAA/H,KAAKoV,gBAAgBvT,QAAQ6qD,cAAA,IAAM3kD,OAAA,EAAAA,EAAEgkD,MAAMthD,KAAKzK,KAAKoV,gBAAgBvT,QAAQ6qD,eAAA,IAAOtkD,EAAAA,EAAI1E,QAAQipD,IAAKnmD,EAASC,EAE5H,CAEOmZ,KAAAA,CAAMpZ,KAAoBC,G,QAC3BzG,KAAKssD,WAAarkD,EAAAu/B,aAAa+L,OACjCvzC,KAAKysD,KAAyF,QAApFrkD,EAAmC,QAAnCL,EAAA/H,KAAKoV,gBAAgBvT,QAAQ6qD,cAAA,IAAM3kD,OAAA,EAAAA,EAAE6X,MAAMnV,KAAKzK,KAAKoV,gBAAgBvT,QAAQ6qD,eAAA,IAAOtkD,EAAAA,EAAI1E,QAAQipD,IAAKnmD,EAASC,EAE5H,CAEOwlD,IAAAA,CAAKzlD,KAAoBC,G,QAC1BzG,KAAKssD,WAAarkD,EAAAu/B,aAAa0kB,MACjClsD,KAAKysD,KAAwF,QAAnFrkD,EAAmC,QAAnCL,EAAA/H,KAAKoV,gBAAgBvT,QAAQ6qD,cAAA,IAAM3kD,OAAA,EAAAA,EAAEkkD,KAAKxhD,KAAKzK,KAAKoV,gBAAgBvT,QAAQ6qD,eAAA,IAAOtkD,EAAAA,EAAI1E,QAAQuoD,KAAMzlD,EAASC,EAE5H,CAEO8P,IAAAA,CAAK/P,KAAoBC,G,QAC1BzG,KAAKssD,WAAarkD,EAAAu/B,aAAaC,MACjCznC,KAAKysD,KAAwF,QAAnFrkD,EAAmC,QAAnCL,EAAA/H,KAAKoV,gBAAgBvT,QAAQ6qD,cAAA,IAAM3kD,OAAA,EAAAA,EAAEwO,KAAK9L,KAAKzK,KAAKoV,gBAAgBvT,QAAQ6qD,eAAA,IAAOtkD,EAAAA,EAAI1E,QAAQ6S,KAAM/P,EAASC,EAE5H,CAEO9C,KAAAA,CAAM6C,KAAoBC,G,QAC3BzG,KAAKssD,WAAarkD,EAAAu/B,aAAa2kB,OACjCnsD,KAAKysD,KAAyF,QAApFrkD,EAAmC,QAAnCL,EAAA/H,KAAKoV,gBAAgBvT,QAAQ6qD,cAAA,IAAM3kD,OAAA,EAAAA,EAAEpE,MAAM8G,KAAKzK,KAAKoV,gBAAgBvT,QAAQ6qD,eAAA,IAAOtkD,EAAAA,EAAI1E,QAAQC,MAAO6C,EAASC,EAE9H,G,aA9DWmC,EAAUR,EAAA,CAOlBR,EAAA,EAAAK,EAAAuO,kBAPQ5N,GAkEbnC,EAAAmmD,eAAA,SAA+BpmD,GAC7BmC,EAAcnC,CAChB,EAKAC,EAAAomD,UAAA,SAA0BrmD,EAAcC,EAAasB,GACnD,GAAgC,mBAArBA,EAAWxH,MACpB,MAAM,IAAImK,MAAM,iBAElB,MACMtC,EAAKL,EAAWxH,MACtBwH,EAAgBxH,MAAI,YAAaiG,GAE/B,GAAImC,EAAYic,WAAa3c,EAAAu/B,aAAawkB,MACxC,OAAO5jD,EAAGo8C,MAAMxkD,KAAMwG,GAGxBmC,EAAYojD,MAAM,iBAAiB3jD,EAAGnH,QAAQuF,EAAKwM,KAAIxM,GAAKpD,KAAKC,UAAUmD,KAAI6vB,KAAK,UACpF,MAAM5vB,EAAS2B,EAAGo8C,MAAMxkD,KAAMwG,GAE9B,OADAmC,EAAYojD,MAAM,iBAAiB3jD,EAAGnH,cAAewF,GAC9CA,CACT,CACF,C,4GCtHA,MAAA2B,EAAAL,EAAA,MACAH,EAAAG,EAAA,KACAQ,EAAAR,EAAA,MAIatB,EAAAqmD,gBAAwD,CACnE7lD,KAAM,GACN5B,KAAM,GACNC,aAAA,EACAC,YAAa,QACb6tB,YAAa,EACbW,oBAAqB,UACrBg5B,cAAA,EACAz2B,4BAAA,EACAlK,mBAAoB,MACpBC,sBAAuB,EACvBgF,WAAY,kCACZlsB,SAAU,GACVwtB,WAAY,SACZC,eAAgB,OAChBvkB,0BAAA,EACAkQ,WAAY,EACZwU,cAAe,EACfzd,YAAa,KACbsP,SAAU,OACV8nC,OAAQ,KACRlnD,WAAY,IACZohB,mBAAA,EACA0F,kBAAmB,EACnBtJ,kBAAA,EACAoI,qBAAsB,EACtB1E,iBAAA,EACAqY,+BAAA,EACAnH,qBAAsB,EACtBxyB,cAAA,EACA4nD,kBAAA,EACAC,mBAAA,EACAxnD,aAAc,EACdE,MAAO,CAAC,EACRqZ,sBAAuBzW,EAAA+D,MACvBwjC,cAAe,CAAC,EAChBvH,aAAA,EACAH,WAAY,CAAC,EACb5H,cAAe,eACfV,qBAAA,EACA56B,YAAA,EACAwwC,SAAU,QACVjtB,cAAA,EACAvF,mBAAoB,GAGtB,MAAMjb,EAAqD,CAAC,SAAU,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEtI,MAAaQ,UAAuBb,EAAAoB,WASlCtH,WAAAA,CAAY8E,GACVyC,QAJe,KAAAikD,gBAAkBltD,KAAKsK,SAAS,IAAIlC,EAAA2I,cACrC,KAAAghB,eAAiB/xB,KAAKktD,gBAAgBj8C,MAKpD,MAAMlJ,EAAiBmM,OAAHi5C,OAAA,GAAQ1mD,EAAAqmD,iBAC5B,IAAK,MAAMrmD,KAAOD,EAChB,GAAIC,KAAOsB,EACT,IACE,MAAMK,EAAW5B,EAAQC,GACzBsB,EAAetB,GAAOzG,KAAKotD,2BAA2B3mD,EAAK2B,E,CAC3D,MAAO5B,GACP9C,QAAQC,MAAM6C,E,CAMpBxG,KAAKoO,WAAarG,EAClB/H,KAAK6B,QAAUqS,OAAHi5C,OAAA,GAASplD,GACrB/H,KAAKqtD,eACP,CAGOpqC,sBAAAA,CAAyDzc,EAAQC,GACtE,OAAOzG,KAAK+xB,gBAAehqB,IACrBA,IAAavB,GACfC,EAASzG,KAAKoO,WAAW5H,GAAA,GAG/B,CAGO0zB,sBAAAA,CAAuB1zB,EAAkCC,GAC9D,OAAOzG,KAAK+xB,gBAAehqB,KACO,IAA5BvB,EAAKgL,QAAQzJ,IACftB,GAAA,GAGN,CAEQ4mD,aAAAA,GACN,MAAM7mD,EAAUA,IACd,KAAMA,KAAYC,EAAAqmD,iBAChB,MAAM,IAAIpiD,MAAM,uBAAuBlE,MAEzC,OAAOxG,KAAKoO,WAAW5H,EAAS,EAG5BuB,EAASulD,CAAC9mD,EAAkBuB,KAChC,KAAMvB,KAAYC,EAAAqmD,iBAChB,MAAM,IAAIpiD,MAAM,uBAAuBlE,MAGzCuB,EAAQ/H,KAAKotD,2BAA2B5mD,EAAUuB,GAE9C/H,KAAKoO,WAAW5H,KAAcuB,IAChC/H,KAAKoO,WAAW5H,GAAYuB,EAC5B/H,KAAKktD,gBAAgBz4C,KAAKjO,GAAA,EAI9B,IAAK,MAAMC,KAAYzG,KAAKoO,WAAY,CACtC,MAAMhG,EAAO,CACX8H,IAAK1J,EAAOiE,KAAKzK,KAAMyG,GACvBuJ,IAAKjI,EAAO0C,KAAKzK,KAAMyG,IAEzByN,OAAOq5C,eAAevtD,KAAK6B,QAAS4E,EAAU2B,E,CAElD,CAEQglD,0BAAAA,CAA2B5mD,EAAauB,GAC9C,OAAQvB,GACN,IAAK,cAIH,GAHKuB,IACHA,EAAQtB,EAAAqmD,gBAAgBtmD,KAyDlC,SAAuBA,GACrB,MAAiB,UAAVA,GAA+B,cAAVA,GAAmC,QAAVA,CACvD,CAFA,CAvD2BuB,GACjB,MAAM,IAAI2C,MAAM,IAAI3C,+BAAmCvB,KAEzD,MACF,IAAK,gBACEuB,IACHA,EAAQtB,EAAAqmD,gBAAgBtmD,IAE1B,MACF,IAAK,aACL,IAAK,iBACH,GAAqB,iBAAVuB,GAAsB,GAAKA,GAASA,GAAS,IAEtD,MAEFA,EAAQE,EAAoBiO,SAASnO,GAASA,EAAQtB,EAAAqmD,gBAAgBtmD,GACtE,MACF,IAAK,cACHuB,EAAQM,KAAKK,MAAMX,GAErB,IAAK,aACL,IAAK,eACH,GAAIA,EAAQ,EACV,MAAM,IAAI2C,MAAM,GAAGlE,mCAAqCuB,KAE1D,MACF,IAAK,uBACHA,EAAQM,KAAKC,IAAI,EAAGD,KAAKgP,IAAI,GAAIhP,KAAKwiB,MAAc,GAAR9iB,GAAc,KAC1D,MACF,IAAK,aAEH,IADAA,EAAQM,KAAKgP,IAAItP,EAAO,aACZ,EACV,MAAM,IAAI2C,MAAM,GAAGlE,mCAAqCuB,KAE1D,MACF,IAAK,wBACL,IAAK,oBACH,GAAIA,GAAS,EACX,MAAM,IAAI2C,MAAM,GAAGlE,+CAAiDuB,KAEtE,MACF,IAAK,OACL,IAAK,OACH,IAAKA,GAAmB,IAAVA,EACZ,MAAM,IAAI2C,MAAM,GAAGlE,6BAA+BuB,KAEpD,MACF,IAAK,aACHA,EAAQ,MAAAA,EAAAA,EAAS,CAAC,EAGtB,OAAOA,CACT,EAxIFtB,EAAAu/B,eAAAv9B,CAAAA,E,mgBCvDA,MAAAF,EAAAR,EAAA,MAGO,IAAME,EAAcxB,EAAAogC,eAApB,MAiBLnlC,WAAAA,CACkB8E,GAAiB,KAAAgK,eAAAhK,EAf3B,KAAA83C,QAAU,EAKV,KAAAkP,eAAmD,IAAI56C,IAOvD,KAAA66C,cAAsE,IAAI76C,GAKlF,CAEOykC,YAAAA,CAAa7wC,GAClB,MAAMC,EAASzG,KAAKwQ,eAAe7D,OAGnC,QAAI,IAAAnG,EAAKs0B,GAAkB,CACzB,MAAM/yB,EAAStB,EAAOuf,UAAUvf,EAAO4X,MAAQ5X,EAAO4L,GAChDjK,EAA2B,CAC/BxF,KAAA4D,EACAs0B,GAAI96B,KAAKs+C,UACT1xC,MAAO,CAAC7E,IAIV,OAFAA,EAAO6lB,WAAU,IAAM5tB,KAAK0tD,sBAAsBtlD,EAAOL,KACzD/H,KAAKytD,cAAcz9C,IAAI5H,EAAM0yB,GAAI1yB,GAC1BA,EAAM0yB,E,CAIf,MAAM/yB,EAAWvB,EACX4B,EAAMpI,KAAK2tD,eAAe5lD,GAC1BH,EAAQ5H,KAAKwtD,eAAet9C,IAAI9H,GACtC,GAAIR,EAEF,OADA5H,KAAKq0C,cAAczsC,EAAMkzB,GAAIr0B,EAAO4X,MAAQ5X,EAAO4L,GAC5CzK,EAAMkzB,GAIf,MAAMvyB,EAAS9B,EAAOuf,UAAUvf,EAAO4X,MAAQ5X,EAAO4L,GAChDpK,EAA6B,CACjC6yB,GAAI96B,KAAKs+C,UACTv9C,IAAKf,KAAK2tD,eAAe5lD,GACzBnF,KAAMmF,EACN6E,MAAO,CAACrE,IAKV,OAHAA,EAAOqlB,WAAU,IAAM5tB,KAAK0tD,sBAAsBzlD,EAAOM,KACzDvI,KAAKwtD,eAAex9C,IAAI/H,EAAMlH,IAAKkH,GACnCjI,KAAKytD,cAAcz9C,IAAI/H,EAAM6yB,GAAI7yB,GAC1BA,EAAM6yB,EACf,CAEOuZ,aAAAA,CAAc7tC,EAAgBC,GACnC,MAAMsB,EAAQ/H,KAAKytD,cAAcv9C,IAAI1J,GACrC,GAAKuB,GAGDA,EAAM6E,MAAMghD,OAAMpnD,GAAKA,EAAEinB,OAAShnB,IAAI,CACxC,MAAMD,EAASxG,KAAKwQ,eAAe7D,OAAOqZ,UAAUvf,GACpDsB,EAAM6E,MAAMH,KAAKjG,GACjBA,EAAOonB,WAAU,IAAM5tB,KAAK0tD,sBAAsB3lD,EAAOvB,I,CAE7D,CAEOsP,WAAAA,CAAYtP,G,MACjB,OAAqC,QAA9BC,EAAAzG,KAAKytD,cAAcv9C,IAAI1J,UAAA,IAAOC,OAAA,EAAAA,EAAE7D,IACzC,CAEQ+qD,cAAAA,CAAennD,GACrB,MAAO,GAAGA,EAASs0B,OAAOt0B,EAASuP,KACrC,CAEQ23C,qBAAAA,CAAsBlnD,EAAgDC,GAC5E,MAAMsB,EAAQvB,EAAMoG,MAAM4E,QAAQ/K,IACnB,IAAXsB,IAGJvB,EAAMoG,MAAM6E,OAAO1J,EAAO,GACC,IAAvBvB,EAAMoG,MAAM1C,cAAA,IACV1D,EAAM5D,KAAKk4B,IACb96B,KAAKwtD,eAAe3/B,OAAQrnB,EAA8BzF,KAE5Df,KAAKytD,cAAc5/B,OAAOrnB,EAAMs0B,KAEpC,G,iBA7FW7yB,EAAcG,EAAA,CAkBtBR,EAAA,EAAAW,EAAA0M,iBAlBQhN,E,oICMb,MAAMF,EAAY,YACZK,EAAkB,kBAEX3B,EAAAonD,gBAAwD,IAAIj7C,IAEzEnM,EAAAolD,uBAAA,SAAuCrlD,GACrC,OAAOA,EAAK4B,IAAoB,EAClC,EAEA3B,EAAAm6B,gBAAA,SAAmCp6B,GACjC,GAAIC,EAAAonD,gBAAgBx6C,IAAI7M,GACtB,OAAOC,EAAAonD,gBAAgB39C,IAAI1J,GAG7B,MAAMoB,EAAiB,SAAUpB,EAAkBC,EAAa8B,GAC9D,GAAyB,IAArBulD,UAAU5jD,OACZ,MAAM,IAAIQ,MAAM,qEAYtB,SAAgClE,EAAcC,EAAkBmB,GACzDnB,EAAesB,KAAetB,EAChCA,EAAe2B,GAAiBqE,KAAK,CAAEquB,GAAAt0B,EAAI+V,MAAA3U,KAE3CnB,EAAe2B,GAAmB,CAAC,CAAE0yB,GAAAt0B,EAAI+V,MAAA3U,IACzCnB,EAAesB,GAAatB,EAEjC,CAPA,CAT2BmB,EAAWpB,EAAQ+B,EAC5C,EAKA,OAHAX,EAAU/E,SAAW,IAAM2D,EAE3BC,EAAAonD,gBAAgB79C,IAAIxJ,EAAIoB,GACjBA,CACT,CAAC,E,6QC/BD,MAAAQ,EAAAL,EAAA,MAuIA,IAAYH,EApICnB,EAAAwO,gBAAA,EAAiB7M,EAAAw4B,iBAAgC,iBAiBjDn6B,EAAA6/B,mBAAA,EAAoBl+B,EAAAw4B,iBAAmC,oBAgCvDn6B,EAAA6qB,cAAA,EAAelpB,EAAAw4B,iBAA8B,eAsC7Cn6B,EAAAmgC,iBAAA,EAAkBx+B,EAAAw4B,iBAAiC,kBAoCnDn6B,EAAAytB,uBAAA,EAAwB9rB,EAAAw4B,iBAAuC,wBAS5E,SAAYp6B,GACVA,EAAAA,EAAAwlD,MAAA,WACAxlD,EAAAA,EAAA+sC,MAAA,WACA/sC,EAAAA,EAAA0lD,KAAA,UACA1lD,EAAAA,EAAAihC,KAAA,UACAjhC,EAAAA,EAAA2lD,MAAA,WACA3lD,EAAAA,EAAA6lD,IAAA,QACD,CAPD,CAAYzkD,IAAYnB,EAAA+gC,aAAZ5/B,EAAY,KASXnB,EAAA0/B,aAAA,EAAc/9B,EAAAw4B,iBAA6B,cAa3Cn6B,EAAA+P,iBAAA,EAAkBpO,EAAAw4B,iBAAiC,kBAqHnDn6B,EAAAgQ,iBAAA,EAAkBrO,EAAAw4B,iBAAiC,kBAgBnDn6B,EAAAggC,iBAAA,EAAkBr+B,EAAAw4B,iBAAiC,kBAwBnDn6B,EAAA8U,oBAAA,EAAqBnT,EAAAw4B,iBAAoC,sB,wFC9TtE,MAAAx4B,EAAAL,EAAA,MACAH,EAAAG,EAAA,KAGAtB,EAAA+/B,eAAA,MAUE9kC,WAAAA,GAPQ,KAAAqsD,WAAuD75C,OAAO+uC,OAAO,MACrE,KAAAC,QAAkB,GAGT,KAAA8K,UAAY,IAAI5lD,EAAA2I,aACjB,KAAAk9C,SAAWjuD,KAAKguD,UAAU/8C,MAGxC,MAAMzK,EAAkB,IAAIoB,EAAAu6C,UAC5BniD,KAAKsK,SAAS9D,GACdxG,KAAKkjD,QAAU18C,EAAgB47C,QAC/BpiD,KAAKkuD,gBAAkB1nD,CACzB,CAEOtD,OAAAA,GACLlD,KAAKguD,UAAU9qD,SACjB,CAEA,YAAAgmD,GACE,OAAOh1C,OAAOupC,KAAKz9C,KAAK+tD,WAC1B,CAEA,iBAAA5E,GACE,OAAOnpD,KAAKkjD,OACd,CAEA,iBAAAiG,CAAyB3iD,GACvB,IAAKxG,KAAK+tD,WAAWvnD,GACnB,MAAM,IAAIkE,MAAM,4BAA4BlE,MAE9CxG,KAAKkjD,QAAU18C,EACfxG,KAAKkuD,gBAAkBluD,KAAK+tD,WAAWvnD,GACvCxG,KAAKguD,UAAUv5C,KAAKjO,EACtB,CAEO8D,QAAAA,CAAS9D,GACdxG,KAAK+tD,WAAWvnD,EAAS47C,SAAW57C,CACtC,CAKO2tC,OAAAA,CAAQ3tC,GACb,OAAOxG,KAAKkuD,gBAAgB/Z,QAAQ3tC,EACtC,CAEO2nD,kBAAAA,CAAmB3nD,GACxB,IAAIC,EAAS,EACb,MAAMsB,EAASvB,EAAE0D,OACjB,IAAK,IAAI9B,EAAI,EAAGA,EAAIL,IAAUK,EAAG,CAC/B,IAAIR,EAAOpB,EAAEygB,WAAW7e,GAExB,GAAI,OAAUR,GAAQA,GAAQ,MAAQ,CACpC,KAAMQ,GAAKL,EAMT,OAAOtB,EAASzG,KAAKm0C,QAAQvsC,GAE/B,MAAMW,EAAS/B,EAAEygB,WAAW7e,GAGxB,OAAUG,GAAUA,GAAU,MAChCX,EAAyB,MAAjBA,EAAO,OAAkBW,EAAS,MAAS,MAEnD9B,GAAUzG,KAAKm0C,QAAQ5rC,E,CAG3B9B,GAAUzG,KAAKm0C,QAAQvsC,E,CAEzB,OAAOnB,CACT,EAAC,GCnFCA,EAA2B,CAAC,EAGhC,SAASsB,EAAoBK,GAE5B,IAAIR,EAAenB,EAAyB2B,GAC5C,QAAI,IAAAR,EACH,OAAOA,EAAajB,QAGrB,IAAI4B,EAAS9B,EAAyB2B,GAAY,CAGjDzB,QAAS,CAAC,GAOX,OAHAH,EAAoB4B,GAAU+N,KAAK5N,EAAO5B,QAAS4B,EAAQA,EAAO5B,QAASoB,GAGpEQ,EAAO5B,OACf,C,gGCjBA,MAAAF,EAAAsB,EAAA,MACAH,EAAAG,EAAA,MAGAQ,EAAAR,EAAA,KAEAE,EAAAF,EAAA,MACAU,EAAAV,EAAA,MACAY,EAAAZ,EAAA,MACAa,EAAAb,EAAA,MAMMS,EAA2B,CAAC,OAAQ,QAE1C,MAAaK,UAAiBN,EAAAS,WAO5BtH,WAAAA,CAAY8E,GACVyC,QAEAjJ,KAAKkH,MAAQlH,KAAKsK,SAAS,IAAI1C,EAAA5C,SAAawB,IAC5CxG,KAAKouD,cAAgBpuD,KAAKsK,SAAS,IAAIrC,EAAAu/C,cAEvCxnD,KAAKquD,eAAiBn6C,OAAHi5C,OAAA,GAASntD,KAAKkH,MAAMrF,SACvC,MAAM4E,EAAUD,GACPxG,KAAKkH,MAAMrF,QAAQ2E,GAEtBuB,EAASulD,CAAC9mD,EAAkBC,KAChCzG,KAAKsuD,sBAAsB9nD,GAC3BxG,KAAKkH,MAAMrF,QAAQ2E,GAAYC,CAAK,EAGtC,IAAK,MAAMD,KAAYxG,KAAKkH,MAAMrF,QAAS,CACzC,MAAMuG,EAAO,CACX8H,IAAKzJ,EAAOgE,KAAKzK,KAAMwG,GACvBwJ,IAAKjI,EAAO0C,KAAKzK,KAAMwG,IAEzB0N,OAAOq5C,eAAevtD,KAAKquD,eAAgB7nD,EAAU4B,E,CAEzD,CAEQkmD,qBAAAA,CAAsB9nD,GAI5B,GAAIgC,EAAyB0N,SAAS1P,GACpC,MAAM,IAAIkE,MAAM,WAAWlE,wCAE/B,CAEQ+nD,iBAAAA,GACN,IAAKvuD,KAAKkH,MAAM0X,eAAexQ,WAAW4+C,iBACxC,MAAM,IAAItiD,MAAM,uEAEpB,CAEA,UAAAqQ,GAAoC,OAAO/a,KAAKkH,MAAM6T,MAAQ,CAC9D,YAAA0qB,GAAwC,OAAOzlC,KAAKkH,MAAMu+B,QAAU,CACpE,gBAAAlrB,GAA0C,OAAOva,KAAKkH,MAAMqT,YAAc,CAC1E,UAAAzX,GAAsC,OAAO9C,KAAKkH,MAAMpE,MAAQ,CAChE,SAAA0I,GAAuE,OAAOxL,KAAKkH,MAAMsE,KAAO,CAChG,cAAAH,GAAwC,OAAOrL,KAAKkH,MAAMmE,UAAY,CACtE,YAAAP,GAAgE,OAAO9K,KAAKkH,MAAM4D,QAAU,CAC5F,YAAAF,GAAgE,OAAO5K,KAAKkH,MAAM0D,QAAU,CAC5F,YAAAM,GAAwC,OAAOlL,KAAKkH,MAAMgE,QAAU,CACpE,qBAAAyP,GAA+C,OAAO3a,KAAKkH,MAAMyT,iBAAmB,CACpF,iBAAAE,GAA6C,OAAO7a,KAAKkH,MAAM2T,aAAe,CAC9E,iBAAAirB,GAA2C,OAAO9lC,KAAKkH,MAAM4+B,aAAe,CAE5E,WAAAx+B,GAAgD,OAAOtH,KAAKkH,MAAMI,OAAS,CAC3E,UAAAknD,GAIE,OAHKxuD,KAAK0qC,UACR1qC,KAAK0qC,QAAU,IAAI/hC,EAAAigD,UAAU5oD,KAAKkH,QAE7BlH,KAAK0qC,OACd,CACA,WAAA+jB,GAEE,OADAzuD,KAAKuuD,oBACE,IAAI3lD,EAAAqgD,WAAWjpD,KAAKkH,MAC7B,CACA,YAAAsW,GAAyD,OAAOxd,KAAKkH,MAAMsW,QAAU,CACrF,QAAAnY,GAA4B,OAAOrF,KAAKkH,MAAM7B,IAAM,CACpD,QAAA4B,GAA4B,OAAOjH,KAAKkH,MAAMD,IAAM,CACpD,UAAA0F,GAIE,OAHK3M,KAAK6nD,UACR7nD,KAAK6nD,QAAU7nD,KAAKsK,SAAS,IAAI7B,EAAAkgD,mBAAmB3oD,KAAKkH,SAEpDlH,KAAK6nD,OACd,CACA,WAAA/hC,GAEE,OADA9lB,KAAKuuD,oBACEvuD,KAAKkH,MAAM4e,OACpB,CACA,SAAAiuB,GACE,MAAMvtC,EAAIxG,KAAKkH,MAAM0V,YAAY1O,gBACjC,IAAIzH,EAA+D,OACnE,OAAQzG,KAAKkH,MAAM0b,iBAAiBmC,gBAClC,IAAK,MAAOte,EAAoB,MAAO,MACvC,IAAK,QAASA,EAAoB,QAAS,MAC3C,IAAK,OAAQA,EAAoB,OAAQ,MACzC,IAAK,MAAOA,EAAoB,MAElC,MAAO,CACLioD,0BAA2BloD,EAAE0e,sBAC7BypC,sBAAuBnoD,EAAEqvC,kBACzB1nC,mBAAoB3H,EAAE2H,mBACtB6lC,WAAYh0C,KAAKkH,MAAM0V,YAAYm3B,MAAMC,WACzC4a,kBAAmBnoD,EACnBooD,WAAYroD,EAAEsjB,OACdglC,sBAAuBtoD,EAAEquC,kBACzBka,cAAevoD,EAAEoX,UACjBoxC,eAAgBxoD,EAAEstC,WAEtB,CACA,WAAAjyC,GACE,OAAO7B,KAAKquD,cACd,CACA,WAAAxsD,CAAmB2E,GACjB,IAAK,MAAMC,KAAYD,EACrBxG,KAAKquD,eAAe5nD,GAAYD,EAAQC,EAE5C,CACOsX,IAAAA,GACL/d,KAAKkH,MAAM6W,MACb,CACOtQ,KAAAA,GACLzN,KAAKkH,MAAMuG,OACb,CACOpG,MAAAA,CAAOb,EAAiBC,GAC7BzG,KAAKivD,gBAAgBzoD,EAASC,GAC9BzG,KAAKkH,MAAMG,OAAOb,EAASC,EAC7B,CACON,IAAAA,CAAKK,GACVxG,KAAKkH,MAAMf,KAAKK,EAClB,CACOkf,2BAAAA,CAA4Blf,GACjCxG,KAAKkH,MAAMwe,4BAA4Blf,EACzC,CACO+K,oBAAAA,CAAqB/K,GAC1B,OAAOxG,KAAKkH,MAAMqK,qBAAqB/K,EACzC,CACOmf,uBAAAA,CAAwBnf,GAE7B,OADAxG,KAAKuuD,oBACEvuD,KAAKkH,MAAMye,wBAAwBnf,EAC5C,CACOof,yBAAAA,CAA0Bpf,GAC/BxG,KAAKuuD,oBACLvuD,KAAKkH,MAAM0e,0BAA0Bpf,EACvC,CACOuf,cAAAA,CAAevf,EAAwB,GAE5C,OADAxG,KAAKivD,gBAAgBzoD,GACdxG,KAAKkH,MAAM6e,eAAevf,EACnC,CACOyf,kBAAAA,CAAmBzf,G,UAGxB,OAFAxG,KAAKuuD,oBACLvuD,KAAKkvD,wBAA2C,QAAnBzoD,EAAAD,EAAkB4L,SAAA,IAAC3L,EAAAA,EAAI,EAA0B,QAAvBsB,EAAAvB,EAAkBmB,aAAA,IAAKI,EAAAA,EAAI,EAA2B,QAAxBK,EAAA5B,EAAkBrF,cAAA,IAAMiH,EAAAA,EAAI,GAC1GpI,KAAKkH,MAAM+e,mBAAmBzf,EACvC,CACOkY,YAAAA,GACL,OAAO1e,KAAKkH,MAAMwX,cACpB,CACOhP,MAAAA,CAAOlJ,EAAgBC,EAAasB,GACzC/H,KAAKivD,gBAAgBzoD,EAAQC,EAAKsB,GAClC/H,KAAKkH,MAAMwI,OAAOlJ,EAAQC,EAAKsB,EACjC,CACOoe,YAAAA,GACL,OAAOnmB,KAAKkH,MAAMif,cACpB,CACOC,oBAAAA,GACL,OAAOpmB,KAAKkH,MAAMkf,sBACpB,CACOG,cAAAA,GACLvmB,KAAKkH,MAAMqf,gBACb,CACOC,SAAAA,GACLxmB,KAAKkH,MAAMsf,WACb,CACOC,WAAAA,CAAYjgB,EAAeC,GAChCzG,KAAKivD,gBAAgBzoD,EAAOC,GAC5BzG,KAAKkH,MAAMuf,YAAYjgB,EAAOC,EAChC,CACOvD,OAAAA,GACL+F,MAAM/F,SACR,CACOsK,WAAAA,CAAYhH,GACjBxG,KAAKivD,gBAAgBzoD,GACrBxG,KAAKkH,MAAMsG,YAAYhH,EACzB,CACOqhC,WAAAA,CAAYrhC,GACjBxG,KAAKivD,gBAAgBzoD,GACrBxG,KAAKkH,MAAM2gC,YAAYrhC,EACzB,CACOshC,WAAAA,GACL9nC,KAAKkH,MAAM4gC,aACb,CACOjhB,cAAAA,GACL7mB,KAAKkH,MAAM2f,gBACb,CACOkhB,YAAAA,CAAavhC,GAClBxG,KAAKivD,gBAAgBzoD,GACrBxG,KAAKkH,MAAM6gC,aAAavhC,EAC1B,CACOY,KAAAA,GACLpH,KAAKkH,MAAME,OACb,CACOd,KAAAA,CAAME,EAA2BC,GACtCzG,KAAKkH,MAAMZ,MAAME,EAAMC,EACzB,CACO0oD,OAAAA,CAAQ3oD,EAA2BC,GACxCzG,KAAKkH,MAAMZ,MAAME,GACjBxG,KAAKkH,MAAMZ,MAAM,OAAQG,EAC3B,CACO6I,KAAAA,CAAM9I,GACXxG,KAAKkH,MAAMoI,MAAM9I,EACnB,CACOkG,OAAAA,CAAQlG,EAAeC,GAC5BzG,KAAKivD,gBAAgBzoD,EAAOC,GAC5BzG,KAAKkH,MAAMwF,QAAQlG,EAAOC,EAC5B,CACOqV,KAAAA,GACL9b,KAAKkH,MAAM4U,OACb,CACOsM,iBAAAA,GACLpoB,KAAKkH,MAAMkhB,mBACb,CACOniB,SAAAA,CAAUO,GACfxG,KAAKouD,cAAcnoD,UAAUjG,KAAMwG,EACrC,CACO,kBAAA4oD,GACL,OAAO3oD,CACT,CAEQwoD,eAAAA,IAAmBzoD,GACzB,IAAK,MAAMC,KAASD,EAClB,GAAIC,IAAU,KAAYO,MAAMP,IAAUA,EAAQ,GAAM,EACtD,MAAM,IAAIiE,MAAM,iCAGtB,CAEQwkD,uBAAAA,IAA2B1oD,GACjC,IAAK,MAAMC,KAASD,EAClB,GAAIC,IAAUA,IAAU,KAAYO,MAAMP,IAAUA,EAAQ,GAAM,GAAKA,EAAQ,GAC7E,MAAM,IAAIiE,MAAM,0CAGtB,EA5OFlE,EAAAxB,SAAA6D,C,QrFbe,I","sources":["webpack://kfront/./src/views/WebSSH.vue","webpack://kfront/src/views/WebSSH.vue","webpack://kfront/./src/views/WebSSH.vue?aa07","webpack://kfront/./src/views/WebSSH.vue?b2b7","webpack://kfront/FitAddon/webpack/universalModuleDefinition","webpack://kfront/FitAddon/src/FitAddon.ts","webpack://kfront/xterm/webpack/universalModuleDefinition","webpack://kfront/xterm/src/browser/AccessibilityManager.ts","webpack://kfront/xterm/src/browser/Clipboard.ts","webpack://kfront/xterm/src/browser/ColorContrastCache.ts","webpack://kfront/xterm/src/browser/Lifecycle.ts","webpack://kfront/xterm/src/browser/Linkifier2.ts","webpack://kfront/xterm/src/browser/LocalizableStrings.ts","webpack://kfront/xterm/src/browser/OscLinkProvider.ts","webpack://kfront/xterm/src/browser/RenderDebouncer.ts","webpack://kfront/xterm/src/browser/ScreenDprMonitor.ts","webpack://kfront/xterm/src/browser/Terminal.ts","webpack://kfront/xterm/src/browser/TimeBasedDebouncer.ts","webpack://kfront/xterm/src/browser/Viewport.ts","webpack://kfront/xterm/src/browser/decorations/BufferDecorationRenderer.ts","webpack://kfront/xterm/src/browser/decorations/ColorZoneStore.ts","webpack://kfront/xterm/src/browser/decorations/OverviewRulerRenderer.ts","webpack://kfront/xterm/src/browser/input/CompositionHelper.ts","webpack://kfront/xterm/src/browser/input/Mouse.ts","webpack://kfront/xterm/src/browser/input/MoveToCell.ts","webpack://kfront/xterm/src/browser/renderer/dom/DomRenderer.ts","webpack://kfront/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://kfront/xterm/src/browser/renderer/dom/WidthCache.ts","webpack://kfront/xterm/src/browser/renderer/shared/Constants.ts","webpack://kfront/xterm/src/browser/renderer/shared/RendererUtils.ts","webpack://kfront/xterm/src/browser/selection/SelectionModel.ts","webpack://kfront/xterm/src/browser/services/CharSizeService.ts","webpack://kfront/xterm/src/browser/services/CharacterJoinerService.ts","webpack://kfront/xterm/src/browser/services/CoreBrowserService.ts","webpack://kfront/xterm/src/browser/services/MouseService.ts","webpack://kfront/xterm/src/browser/services/RenderService.ts","webpack://kfront/xterm/src/browser/services/SelectionService.ts","webpack://kfront/xterm/src/browser/services/Services.ts","webpack://kfront/xterm/src/browser/services/ThemeService.ts","webpack://kfront/xterm/src/common/CircularList.ts","webpack://kfront/xterm/src/common/Clone.ts","webpack://kfront/xterm/src/common/Color.ts","webpack://kfront/xterm/src/common/CoreTerminal.ts","webpack://kfront/xterm/src/common/EventEmitter.ts","webpack://kfront/xterm/src/common/InputHandler.ts","webpack://kfront/xterm/src/common/Lifecycle.ts","webpack://kfront/xterm/src/common/MultiKeyMap.ts","webpack://kfront/xterm/src/common/Platform.ts","webpack://kfront/xterm/src/common/SortedList.ts","webpack://kfront/xterm/src/common/TaskQueue.ts","webpack://kfront/xterm/src/common/WindowsMode.ts","webpack://kfront/xterm/src/common/buffer/AttributeData.ts","webpack://kfront/xterm/src/common/buffer/Buffer.ts","webpack://kfront/xterm/src/common/buffer/BufferLine.ts","webpack://kfront/xterm/src/common/buffer/BufferRange.ts","webpack://kfront/xterm/src/common/buffer/BufferReflow.ts","webpack://kfront/xterm/src/common/buffer/BufferSet.ts","webpack://kfront/xterm/src/common/buffer/CellData.ts","webpack://kfront/xterm/src/common/buffer/Constants.ts","webpack://kfront/xterm/src/common/buffer/Marker.ts","webpack://kfront/xterm/src/common/data/Charsets.ts","webpack://kfront/xterm/src/common/data/EscapeSequences.ts","webpack://kfront/xterm/src/common/input/Keyboard.ts","webpack://kfront/xterm/src/common/input/TextDecoder.ts","webpack://kfront/xterm/src/common/input/UnicodeV6.ts","webpack://kfront/xterm/src/common/input/WriteBuffer.ts","webpack://kfront/xterm/src/common/input/XParseColor.ts","webpack://kfront/xterm/src/common/parser/Constants.ts","webpack://kfront/xterm/src/common/parser/DcsParser.ts","webpack://kfront/xterm/src/common/parser/EscapeSequenceParser.ts","webpack://kfront/xterm/src/common/parser/OscParser.ts","webpack://kfront/xterm/src/common/parser/Params.ts","webpack://kfront/xterm/src/common/public/AddonManager.ts","webpack://kfront/xterm/src/common/public/BufferApiView.ts","webpack://kfront/xterm/src/common/public/BufferLineApiView.ts","webpack://kfront/xterm/src/common/public/BufferNamespaceApi.ts","webpack://kfront/xterm/src/common/public/ParserApi.ts","webpack://kfront/xterm/src/common/public/UnicodeApi.ts","webpack://kfront/xterm/src/common/services/BufferService.ts","webpack://kfront/xterm/src/common/services/CharsetService.ts","webpack://kfront/xterm/src/common/services/CoreMouseService.ts","webpack://kfront/xterm/src/common/services/CoreService.ts","webpack://kfront/xterm/src/common/services/DecorationService.ts","webpack://kfront/xterm/src/common/services/InstantiationService.ts","webpack://kfront/xterm/src/common/services/LogService.ts","webpack://kfront/xterm/src/common/services/OptionsService.ts","webpack://kfront/xterm/src/common/services/OscLinkService.ts","webpack://kfront/xterm/src/common/services/ServiceRegistry.ts","webpack://kfront/xterm/src/common/services/Services.ts","webpack://kfront/xterm/src/common/services/UnicodeService.ts","webpack://kfront/xterm/webpack/bootstrap","webpack://kfront/xterm/src/browser/public/Terminal.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"ssharea\"},[_c('el-card',{staticClass:\"info-card\"},[_c('label',{attrs:{\"for\":\"node-select\"}},[_vm._v(\"请选择要远程连接的节点：\")]),_c('el-select',{attrs:{\"id\":\"node-select\",\"placeholder\":\"选择一个节点\"},model:{value:(_vm.selectedNode),callback:function ($$v) {_vm.selectedNode=$$v},expression:\"selectedNode\"}},_vm._l((_vm.nodes),function(node){return _c('el-option',{key:node.ip,attrs:{\"label\":`${node.name} - ${node.ip}`,\"value\":node.ip}})}),1),_c('el-container',{style:({ height: '80vh', marginTop: '20px' })},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"terminal\"}})])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"ssharea\">\r\n    <el-card class=\"info-card\">\r\n      <label for=\"node-select\">请选择要远程连接的节点：</label>\r\n      <el-select id=\"node-select\" v-model=\"selectedNode\" placeholder=\"选择一个节点\">\r\n        <el-option\r\n            v-for=\"node in nodes\"\r\n            :label=\"`${node.name} - ${node.ip}`\"\r\n            :key=\"node.ip\"\r\n            :value=\"node.ip\"\r\n        ></el-option>\r\n      </el-select>\r\n      <el-container :style=\"{ height: '80vh', marginTop: '20px' }\">\r\n        <div id=\"terminal\" style=\"width: 100%; height: 100%\"></div>\r\n      </el-container>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Terminal } from 'xterm';\r\nimport \"xterm/css/xterm.css\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\n\r\n\r\nconst WS_PATH = '/webssh';\r\nconst WS_PORT = 8080;\r\nclass WSSHClient {\r\n\r\n\r\n  constructor() {\r\n    this._connection = null;\r\n  }\r\n\r\n  _generateEndpoint(options) {\r\n    const protocol = window.location.protocol === 'https:' ? 'wss://' : 'ws://';\r\n    return `${protocol}${options.host}:${WS_PORT}${WS_PATH}`;\r\n  }\r\n\r\n  connect(options) {\r\n    const endpoint = this._generateEndpoint(options);\r\n\r\n    if (this._connection) {\r\n      this._connection.close();\r\n      this._connection = null;\r\n    }\r\n\r\n    if (window.WebSocket) {\r\n      this._connection = new WebSocket(endpoint);\r\n    } else {\r\n      options.onError('WebSocket Not Supported');\r\n      return;\r\n    }\r\n\r\n    this._connection.onerror = () => {\r\n      options.onError('\\rWebSocket Connection Error');\r\n    };\r\n\r\n    this._connection.onopen = () => {\r\n      options.onConnect();\r\n    };\r\n\r\n    this._connection.onmessage = (evt) => {\r\n      const data = evt.data.toString();\r\n      options.onData(data);\r\n    };\r\n\r\n    this._connection.onclose = () => {\r\n      options.onClose();\r\n    };\r\n  }\r\n\r\n  close() {\r\n    if (this.terminal) {\r\n      this.terminal.dispose();\r\n      this.terminal = null;\r\n    }\r\n\r\n    if (this._connection) {\r\n      this._connection.close();\r\n      this._connection = null;\r\n    }\r\n  }\r\n\r\n  send(data) {\r\n    this._connection?.send(JSON.stringify(data));\r\n  }\r\n\r\n  sendInitData(options) {\r\n    this._connection?.send(JSON.stringify(options));\r\n  }\r\n\r\n  sendClientData(data) {\r\n    this._connection?.readyState === WebSocket.OPEN\r\n        ? this._connection.send(JSON.stringify({ \"operate\": 'command', \"command\": data }))\r\n        : console.error('WebSocket connection is not open. Data cannot be sent.');\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: \"WebSSH\",\r\n  data() {\r\n    return {\r\n      nodes: [\r\n        { name: 'Master 1', ip: '39.98.124.97' },\r\n        { name: 'Worker 1', ip: '39.101.136.242' },\r\n        { name: 'Worker 2', ip: '39.98.109.31' },\r\n        { name: 'Worker 3', ip: '39.99.252.93' },\r\n        { name: 'Worker 4', ip: '192.168.157.214' },\r\n        { name: 'Worker 5', ip: '192.168.157.215' },\r\n        { name: 'Worker 6', ip: '192.168.157.216' },\r\n        { name: 'Worker 7', ip: '192.168.157.217' },\r\n      ],\r\n      terminal: null,\r\n      wsshClient: new WSSHClient(),\r\n      options: {\r\n        operate: 'connect',\r\n        host: '39.98.124.97', // IP\r\n        port: '22', // ssh default port\r\n        username: 'root',\r\n        password: 'Upc123456@',\r\n      },\r\n      selectedNode: '',\r\n      isFirstSet: true,\r\n      terminalReady: false,\r\n    };\r\n  },\r\n  watch: {\r\n    'selectedNode'(newHost) {\r\n      if (this.isFirstSet) {\r\n        this.isFirstSet = false;\r\n      } else {\r\n        this.$confirm('确定要切换到'+newHost+'并中断当前操作吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }).then(() => {\r\n          this.options.host = newHost;\r\n          this.wsshClient.close();\r\n          this.terminalReady = false;\r\n          if (this.terminal) {\r\n            this.terminal.dispose();\r\n          }\r\n          setTimeout(() => {\r\n            this.openTerminal(this.options);\r\n          }, 1000);\r\n        }).catch(() => {\r\n          // do nothing\r\n        });\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.selectedNode = this.options.host;\r\n      this.openTerminal(this.options);\r\n    });\r\n  },\r\n  methods: {\r\n    openTerminal(options) {\r\n      this.terminal = new Terminal({\r\n        rendererType: \"canvas\",\r\n        convertEol: true,\r\n        fontSize: 20,\r\n        disableStdin: false,\r\n        rows: 37,\r\n        cursorBlink: true,\r\n        cursorStyle: 'block',\r\n        scrollback: 800,\r\n        tabStopWidth: 8,\r\n        screenKeys: true,\r\n        theme: {\r\n          foreground: \"yellow\",\r\n          background: \"#060101\",\r\n          cursor: \"help\"\r\n        }\r\n      });\r\n\r\n      const fitAddon = new FitAddon();\r\n      this.terminal.loadAddon(fitAddon);\r\n      fitAddon.fit();\r\n\r\n      this.terminal.onData((data) => {\r\n        if (this.terminalReady) {\r\n          this.wsshClient.sendClientData(data);\r\n        }\r\n      });\r\n\r\n      this.terminal.open(document.getElementById('terminal'));\r\n      this.terminal.write('Connecting...');\r\n\r\n      this.wsshClient.connect({\r\n        onConnect: () => {\r\n          this.terminalReady = true;\r\n          this.wsshClient.sendInitData(options);\r\n        },\r\n        onData: (data) => {\r\n          this.terminal.write(data);\r\n        },\r\n        onClose: () => {\r\n          if (this.terminal) {\r\n            this.terminal.write(\"\\rconnection closed\");\r\n          } else {\r\n            console.error('Terminal is null. Cannot write to terminal.');\r\n          }\r\n        },\r\n        onError: (error) => {\r\n          this.terminal.write(\"Error:\" + error + '\\r\\n');\r\n        },\r\n        host: options.host,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.ssharea {\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-top: 15px;\r\n}\r\n\r\n::v-deep .xterm-screen {\r\n  height: 80vh !important;\r\n}\r\n\r\n::v-deep .node-select {\r\n  margin-bottom: 100px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebSSH.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebSSH.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./WebSSH.vue?vue&type=template&id=c7ca83dc&scoped=true\"\nimport script from \"./WebSSH.vue?vue&type=script&lang=js\"\nexport * from \"./WebSSH.vue?vue&type=script&lang=js\"\nimport style0 from \"./WebSSH.vue?vue&type=style&index=0&id=c7ca83dc&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c7ca83dc\",\n  null\n  \n)\n\nexport default component.exports","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_v","model","value","selectedNode","callback","$$v","expression","_l","nodes","node","key","ip","name","style","height","marginTop","staticStyle","staticRenderFns","WS_PATH","WS_PORT","WSSHClient","constructor","_connection","_generateEndpoint","options","protocol","window","location","host","connect","endpoint","close","WebSocket","onerror","onError","onopen","onConnect","onmessage","evt","data","toString","onData","onclose","onClose","terminal","dispose","send","JSON","stringify","sendInitData","sendClientData","readyState","OPEN","console","error","wsshClient","operate","port","username","password","isFirstSet","terminalReady","watch","newHost","$confirm","confirmButtonText","cancelButtonText","type","then","setTimeout","openTerminal","catch","mounted","$nextTick","methods","Terminal","rendererType","convertEol","fontSize","disableStdin","rows","cursorBlink","cursorStyle","scrollback","tabStopWidth","screenKeys","theme","foreground","background","cursor","fitAddon","FitAddon","loadAddon","fit","open","document","getElementById","write","component","e","t","module","exports","self","activate","_terminal","proposeDimensions","isNaN","cols","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","width","r","viewport","scrollBarWidth","i","getComputedStyle","o","parseInt","getPropertyValue","s","Math","max","n","l","a","floor","h","c","d","_","AccessibilityManager","Disposable","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityContainer","createElement","classList","add","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","_handleChar","onLineFeed","onA11yTab","_handleTab","onKey","_handleKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","toDisposable","remove","shift","textContent","tooMuchOutput","isMac","parentNode","test","push","refresh","buffer","lines","translateBufferLineToString","ydisp","innerText","_announceCharacters","target","getAttribute","relatedTarget","pop","removeChild","removeEventListener","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","canvas","IRenderService","replace","decPrivateModes","bracketedPasteMode","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","getBoundingClientRect","clientX","left","clientY","top","zIndex","prepareTextForTerminal","bracketTextForPaste","copyHandler","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","paste","moveTextAreaUnderMouseCursor","rightClickHandler","rightClickSelect","select","ColorContrastCache","_color","TwoKeyMap","_css","setCss","set","getCss","get","setColor","getColor","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","_clearCurrentLink","registerLinkProvider","indexOf","splice","attachToDom","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","_activeProviderReplies","forEach","Map","entries","_checkLinkProviderResult","provideLinks","map","size","_removeIntersectingLinks","Set","range","has","find","_handleNewLink","_mouseDownLink","text","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","_createLinkUnderlineEvent","fire","leave","getCoords","x1","y1","x2","y2","fg","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","linkHandler","CellData","getTrimmedLength","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","allowNonHttpProtocols","URL","includes","call","confirm","opener","href","warn","IOptionsService","IOscLinkService","RenderDebouncer","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","_rowCount","_rowStart","min","_rowEnd","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","u","f","v","p","g","m","S","C","b","w","E","k","L","D","R","A","B","T","M","O","P","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","index","color","toColorRGB","colors","ansi","coreService","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","restoreColor","buffers","active","textarea","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","ybase","getWidth","lineHeight","_initGlobal","_bindKeys","hasSelection","_selectionService","optionsService","isFirefox","button","screenElement","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","isConnected","_logService","debug","_document","ownerDocument","dir","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","getMouseReportCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","action","ctrl","ctrlKey","alt","altKey","shiftKey","mouseup","wheel","mousedrag","mousemove","cancel","onProtocolChange","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","applicationCursorKeys","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","attachCustomKeyEventHandler","registerCharacterJoiner","deregisterCharacterJoiner","deregister","markers","registerMarker","addMarker","registerDecoration","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","position","source","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","toFixed","GET_CELL_SIZE_PIXELS","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","Date","now","_scrollArea","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","_refresh","device","dpr","offsetHeight","round","scrollTop","offsetParent","_smoothScroll","_isDisposed","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","isWrapped","translateToString","bufferElements","cursorElement","DOM_DELTA_PIXEL","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","line","display","onRenderEmitter","onDispose","delete","anchor","right","ColorZoneStore","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","_width","_coreBrowseService","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","ceil","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","substring","DEL","fontFamily","ICoreService","getCoordsRelativeToElement","moveToCellSequence","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","char","letterSpacing","overflow","_terminalSelector","multiplyOpacity","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","_createSelectionElement","cursorInactiveStyle","createRow","_setCellUnderline","IInstantiationService","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","getJoinedCharacters","getNoBgTrimmedLength","I","JoinedCellData","H","_isCellInSelection","F","W","U","forEachDecorationAtCell","N","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","bg","selectionForeground","ext","isCursorHidden","isFocused","isDim","isInvisible","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","$","getFgColor","j","getFgColorMode","z","getBgColor","K","getBgColorMode","q","isInverse","V","G","X","J","backgroundColorRGB","foregroundColorRGB","_addStyle","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","_getContrastCache","ensureContrastRatio","halfContrastCache","contrastCache","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","fontStyle","body","_holey","fill","_measure","repeat","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","throwIfFalsy","isPowerlineGlyph","isRestrictedPowerlineGlyph","SelectionModel","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","Number","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","id","handler","getFg","getBg","_getJoinedRanges","_mergeRanges","_stringRangesToCellRanges","getString","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","_renderer","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","_fullRefresh","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","flush","_fireOnCanvasResize","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","_selectToWordAt","altClickMovesCursor","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","_getWordAt","charAt","_isCharWordSeparator","slice","trim","getCodePoint","wordSeparator","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_ANSI_COLORS","freeze","channels","toCss","toRgba","_colors","_contrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","_restoreColor","_restoreColors","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","_getCyclicIndex","recycle","isFull","trimStart","shiftElements","CircularList","clone","isArray","toChannels","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","parseFloat","getImageData","pow","relativeLuminance","relativeLuminance2","rgb","reduceLuminance","increaseLuminance","toPaddedHex","contrastRatio","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","parse","writeSync","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","scrollPages","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","clearListeners","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","getAttrData","_curAttrData","EscapeSequenceParser","_coreMouseService","_unicodeService","_parser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","setCsiHandlerFallback","identifier","identToString","params","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","Promise","race","_getCurrentLinkId","DEBUG","prototype","split","clearRange","decode","subarray","charset","wraparound","modes","insertMode","markDirty","setCellFromCodePoint","wcwidth","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","reverseWraparound","_restrictCursor","nextStop","_setCursor","_moveCursor","tabs","prevStop","_eraseInBufferLine","replaceCells","_resetBufferLine","clearMarkers","deleteCells","_is","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","fromColorRGB","_extractColor","hasSubParams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","exec","parseColor","_createHyperlink","_finishHyperlink","findIndex","startsWith","registerLink","_setOrReportSpecialColor","markAllDirty","isProtected","block","bar","_disposables","unregister","_value","_data","FourKeyMap","navigator","userAgent","platform","isSafari","getSafariVersion","isIpad","isIphone","SortedList","_getKey","insert","_search","getKeyIterator","forEachByKey","values","_tasks","_i","enqueue","_start","_idleCallback","_cancelCallback","_requestCallback","_process","timeRemaining","_createDeadline","PriorityTaskQueue","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","ExtendedAttrs","MAX_BUFFER_SIZE","Buffer","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","fillViewportRows","_isReflowEnabled","_reflow","_batchedMemoryCleanup","cleanupMemory","_reflowLarger","_reflowSmaller","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","reflowSmallerGetNewLineLengths","newLines","copyCellsFrom","getWrappedLineTrimmedLength","setCell","Marker","_removeMarker","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","byteLength","keys","copyFrom","reduce","_onBufferActivate","_normal","_alt","inactiveBuffer","BufferSet","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","Q","Y","Z","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","toUpperCase","toLowerCase","utf32ToString","_interim","interim","Uint8Array","UnicodeV6","version","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","_innerWrite","resolve","PAYLOAD_LIMIT","DcsParser","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","clearHandler","setHandlerFallback","unhook","hook","put","Params","addParam","_handler","_params","_hitLimit","table","setDefault","addMany","TransitionTable","VT500_TRANSITION_TABLE","apply","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","_state","_put","fromArray","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","getSubParamsAll","AddonManager","_addons","instance","_wrappedAddonDispose","BufferApiView","_buffer","init","cursorY","cursorX","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","_onBufferChange","onBufferChange","_alternate","alternate","BufferNamespaceApi","ParserApi","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","UnicodeApi","versions","activeVersion","isUserScrolling","_cachedBlankLine","glevel","_charsets","NONE","events","restrict","X10","VT200","DRAG","ANY","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","addProtocol","addEncoding","_equalEvents","triggerBinaryEvent","down","up","drag","move","_onUserInput","_onRequestScrollToBottom","_decorations","_onDecorationRegistered","_onDecorationRemoved","getDecorationsAtCell","_cachedBg","_cachedFg","foregroundColor","_entries","ServiceCollection","_services","getService","getServiceDependencies","sort","trace","TRACE","info","INFO","ERROR","off","OFF","_logLevel","_updateLogLevel","_evalLazyOptionalParams","_log","logger","log","setTraceLogger","traceCall","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","_onOptionChange","assign","_sanitizeAndValidateOption","_setupOptions","setter","defineProperty","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","_getEntryIdKey","every","serviceRegistry","arguments","_providers","_onChange","onChange","_activeProvider","getStringCellWidth","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","unicode","applicationCursorKeysMode","applicationKeypadMode","mouseTrackingMode","originMode","reverseWraparoundMode","sendFocusMode","wraparoundMode","_verifyIntegers","_verifyPositiveIntegers","writeln","strings"],"sourceRoot":""}